Inspecting 132 files
CCCCWCCWWWCCCWCWCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCWCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

Offenses:

Gemfile:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
source 'https://rubygems.org'
^
Gemfile:32:1: C: [Correctable] Bundler/OrderedGems: Gems should be sorted in an alphabetical order within their section of the Gemfile. Gem loofah should appear before rails-dom-testing.
gem 'loofah', '>= 2.13.0'
^^^^^^^^^^^^^^^^^^^^^^^^^
Gemfile:33:1: C: [Correctable] Bundler/OrderedGems: Gems should be sorted in an alphabetical order within their section of the Gemfile. Gem actiontext should appear before loofah.
gem 'actiontext', '>= 6.1.4.4'
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Gemfile:35:1: C: [Correctable] Bundler/OrderedGems: Gems should be sorted in an alphabetical order within their section of the Gemfile. Gem capybara should appear before xpath.
gem 'capybara', '>= 3.26.0'
^^^^^^^^^^^^^^^^^^^^^^^^^^^
Gemfile:37:1: C: [Correctable] Bundler/OrderedGems: Gems should be sorted in an alphabetical order within their section of the Gemfile. Gem nokogiri should appear before webdrivers.
gem 'nokogiri', '>= 1.13.1'
^^^^^^^^^^^^^^^^^^^^^^^^^^^
Gemfile:38:16: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
gem 'rubocop', :require => false
               ^^^^^^^^^^^
Gemfile:39:28: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
gem 'rubocop-performance', :require => false
                           ^^^^^^^^^^^
Gemfile:40:22: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
gem 'rubocop-rails', :require => false
                     ^^^^^^^^^^^
Gemfile:41:22: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
gem 'rubocop-rspec', :require => false
                     ^^^^^^^^^^^
Gemfile:45:28: C: [Correctable] Style/SymbolArray: Use %i or %I for an array of symbols.
  gem 'byebug', platforms: [:mri, :mingw, :x64_mingw]
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^
Gemfile:47:3: C: [Correctable] Bundler/OrderedGems: Gems should be sorted in an alphabetical order within their section of the Gemfile. Gem brakeman should appear before rspec-rails.
  gem 'brakeman'
  ^^^^^^^^^^^^^^
Gemfile:56:3: C: [Correctable] Bundler/OrderedGems: Gems should be sorted in an alphabetical order within their section of the Gemfile. Gem listen should appear before rack-mini-profiler.
  gem 'listen', '~> 3.3'
  ^^^^^^^^^^^^^^^^^^^^^^
Gemfile:64:21: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
  gem 'pg', '~> 1.1'  
                    ^^
Gemfile:70:3: C: Bundler/DuplicatedGem: Gem capybara requirements already given on line 35 of the Gemfile.
  gem 'capybara', '>= 3.26'
  ^^^^^^^^^^^^^^^^^^^^^^^^^
Gemfile:73:3: C: Bundler/DuplicatedGem: Gem webdrivers requirements already given on line 36 of the Gemfile.
  gem 'webdrivers', '>= 5.0.0'
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Gemfile:74:3: C: [Correctable] Bundler/OrderedGems: Gems should be sorted in an alphabetical order within their section of the Gemfile. Gem simplecov should appear before webdrivers.
  gem 'simplecov', :require => false
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Gemfile:74:20: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
  gem 'simplecov', :require => false
                   ^^^^^^^^^^^
Gemfile:78:31: C: [Correctable] Style/SymbolArray: Use %i or %I for an array of symbols.
gem 'tzinfo-data', platforms: [:mingw, :mswin, :x64_mingw, :jruby]
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Gemfile:81:1: C: [Correctable] Bundler/OrderedGems: Gems should be sorted in an alphabetical order within their section of the Gemfile. Gem devise should appear before omniauth.
gem 'devise'
^^^^^^^^^^^^
Gemfile:83:1: C: [Correctable] Bundler/OrderedGems: Gems should be sorted in an alphabetical order within their section of the Gemfile. Gem jquery-rails should appear before omniauth-google-oauth2.
gem 'jquery-rails'
^^^^^^^^^^^^^^^^^^
Gemfile:84:1: C: [Correctable] Bundler/OrderedGems: Gems should be sorted in an alphabetical order within their section of the Gemfile. Gem database_cleaner should appear before jquery-rails.
gem 'database_cleaner'
^^^^^^^^^^^^^^^^^^^^^^
Gemfile:84:23: C: [Correctable] Layout/TrailingEmptyLines: Final newline missing.
gem 'database_cleaner'
                      
Rakefile:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# Add your own tasks in files placed in lib/tasks ending in .rake,
^
Rakefile:4:18: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require_relative "config/application"
                 ^^^^^^^^^^^^^^^^^^^^
app/channels/application_cable/channel.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
module ApplicationCable
^
app/channels/application_cable/connection.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
module ApplicationCable
^
app/controllers/about_us_pages_controller.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class AboutUsPagesController.
class AboutUsPagesController < ApplicationController
^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/about_us_pages_controller.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class AboutUsPagesController < ApplicationController
^
app/controllers/about_us_pages_controller.rb:2:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def index
^^^^
app/controllers/about_us_pages_controller.rb:2:5: C: [Correctable] Style/EmptyMethod: Put empty method definitions on a single line.
    def index ...
    ^^^^^^^^^
app/controllers/about_us_pages_controller.rb:4:3: W: [Correctable] Layout/EndAlignment: end at 4, 2 is not aligned with class at 1, 0.
  end
  ^^^
app/controllers/about_us_pages_controller.rb:4:6: C: [Correctable] Layout/TrailingEmptyLines: Final newline missing.
  end
     
app/controllers/application_controller.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class ApplicationController.
class ApplicationController < ActionController::Base
^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/application_controller.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class ApplicationController < ActionController::Base
^
app/controllers/application_controller.rb:2:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def check_admin!
^^^^
app/controllers/application_controller.rb:3:5: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
        p "checking admin"
    ^^^^
app/controllers/application_controller.rb:3:11: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        p "checking admin"
          ^^^^^^^^^^^^^^^^
app/controllers/application_controller.rb:4:107: C: [Correctable] Style/IfUnlessModifier: Modifier form of unless makes the line too long.
        redirect_back fallback_location: root_path, notice: 'You dont have enough permissions to be here' unless user_signed_in? && current_user.role == 'admin'
                                                                                                          ^^^^^^
app/controllers/application_controller.rb:4:121: C: [Correctable] Layout/LineLength: Line is too long. [160/120]
        redirect_back fallback_location: root_path, notice: 'You dont have enough permissions to be here' unless user_signed_in? && current_user.role == 'admin'
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/contact_forms_controller.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class ContactFormsController.
class ContactFormsController < ApplicationController
^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/contact_forms_controller.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class ContactFormsController < ApplicationController
^
app/controllers/contact_forms_controller.rb:2:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	def new
^
app/controllers/contact_forms_controller.rb:2:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
	def new
^
app/controllers/contact_forms_controller.rb:3:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		@contact_form = ContactForm.new
^^
app/controllers/contact_forms_controller.rb:3:2: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
		@contact_form = ContactForm.new
 ^
app/controllers/contact_forms_controller.rb:4:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	end
^
app/controllers/contact_forms_controller.rb:6:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	def create
^
app/controllers/contact_forms_controller.rb:6:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
	def create
^
app/controllers/contact_forms_controller.rb:7:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		@contact_form = ContactForm.new(form_params)
^^
app/controllers/contact_forms_controller.rb:7:2: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
		@contact_form = ContactForm.new(form_params)
 ^
app/controllers/contact_forms_controller.rb:8:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		respond_to do |format|
^^
app/controllers/contact_forms_controller.rb:9:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
			if @contact_form.save
^^^
app/controllers/contact_forms_controller.rb:9:3: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
			if @contact_form.save
  ^
app/controllers/contact_forms_controller.rb:10:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
				format.html { redirect_to root_url, notice: "Message has been sent." }
^^^^
app/controllers/contact_forms_controller.rb:10:4: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
				format.html { redirect_to root_url, notice: "Message has been sent." }
   ^
app/controllers/contact_forms_controller.rb:10:49: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
				format.html { redirect_to root_url, notice: "Message has been sent." }
                                                ^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/contact_forms_controller.rb:11:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
        		format.json { render :show, status: :created, location: @contact_form }
^^^^^^^^^^
app/controllers/contact_forms_controller.rb:11:11: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
        		format.json { render :show, status: :created, location: @contact_form }
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/contact_forms_controller.rb:12:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
			else
^^^
app/controllers/contact_forms_controller.rb:13:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
				format.html {render :new, status: :unprocessable_entity}
^^^^
app/controllers/contact_forms_controller.rb:13:4: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
				format.html {render :new, status: :unprocessable_entity}
   ^
app/controllers/contact_forms_controller.rb:13:18: C: [Correctable] Layout/SpaceInsideBlockBraces: Space missing inside {.
				format.html {render :new, status: :unprocessable_entity}
                 ^
app/controllers/contact_forms_controller.rb:13:60: C: [Correctable] Layout/SpaceInsideBlockBraces: Space missing inside }.
				format.html {render :new, status: :unprocessable_entity}
                                                           ^
app/controllers/contact_forms_controller.rb:14:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
				format.json {render json: @contact_form.errors, status: :unprocessable_entity}
^^^^
app/controllers/contact_forms_controller.rb:14:18: C: [Correctable] Layout/SpaceInsideBlockBraces: Space missing inside {.
				format.json {render json: @contact_form.errors, status: :unprocessable_entity}
                 ^
app/controllers/contact_forms_controller.rb:14:82: C: [Correctable] Layout/SpaceInsideBlockBraces: Space missing inside }.
				format.json {render json: @contact_form.errors, status: :unprocessable_entity}
                                                                                 ^
app/controllers/contact_forms_controller.rb:15:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
			end
^^^
app/controllers/contact_forms_controller.rb:16:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		end
^^
app/controllers/contact_forms_controller.rb:17:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	end
^
app/controllers/contact_forms_controller.rb:19:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	def index
^
app/controllers/contact_forms_controller.rb:19:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
	def index
^
app/controllers/contact_forms_controller.rb:20:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		@forms = ContactForm.order(created_at: :desc)
^^
app/controllers/contact_forms_controller.rb:20:2: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
		@forms = ContactForm.order(created_at: :desc)
 ^
app/controllers/contact_forms_controller.rb:21:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	end
^
app/controllers/contact_forms_controller.rb:23:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	def show
^
app/controllers/contact_forms_controller.rb:23:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
	def show
^
app/controllers/contact_forms_controller.rb:24:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		@form = ContactForm.find(params[:id])
^^
app/controllers/contact_forms_controller.rb:24:2: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
		@form = ContactForm.find(params[:id])
 ^
app/controllers/contact_forms_controller.rb:25:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	end
^
app/controllers/contact_forms_controller.rb:27:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	def destroy
^
app/controllers/contact_forms_controller.rb:27:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
	def destroy
^
app/controllers/contact_forms_controller.rb:28:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		@form = ContactForm.find(params[:id])
^^
app/controllers/contact_forms_controller.rb:28:2: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
		@form = ContactForm.find(params[:id])
 ^
app/controllers/contact_forms_controller.rb:29:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		@form.destroy
^^
app/controllers/contact_forms_controller.rb:31:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		respond_to do |format|
^^
app/controllers/contact_forms_controller.rb:32:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
			format.html {redirect_to contact_forms_url, notice: "Message was successfully deleted."}
^^^
app/controllers/contact_forms_controller.rb:32:3: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
			format.html {redirect_to contact_forms_url, notice: "Message was successfully deleted."}
  ^
app/controllers/contact_forms_controller.rb:32:17: C: [Correctable] Layout/SpaceInsideBlockBraces: Space missing inside {.
			format.html {redirect_to contact_forms_url, notice: "Message was successfully deleted."}
                ^
app/controllers/contact_forms_controller.rb:32:56: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
			format.html {redirect_to contact_forms_url, notice: "Message was successfully deleted."}
                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/contact_forms_controller.rb:32:91: C: [Correctable] Layout/SpaceInsideBlockBraces: Space missing inside }.
			format.html {redirect_to contact_forms_url, notice: "Message was successfully deleted."}
                                                                                          ^
app/controllers/contact_forms_controller.rb:33:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
			format.json {head :no_content}
^^^
app/controllers/contact_forms_controller.rb:33:17: C: [Correctable] Layout/SpaceInsideBlockBraces: Space missing inside {.
			format.json {head :no_content}
                ^
app/controllers/contact_forms_controller.rb:33:33: C: [Correctable] Layout/SpaceInsideBlockBraces: Space missing inside }.
			format.json {head :no_content}
                                ^
app/controllers/contact_forms_controller.rb:34:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		end
^^
app/controllers/contact_forms_controller.rb:35:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	end
^
app/controllers/contact_forms_controller.rb:37:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	private
^
app/controllers/contact_forms_controller.rb:37:2: C: [Correctable] Layout/AccessModifierIndentation: Indent access modifiers like private.
	private
 ^^^^^^^
app/controllers/contact_forms_controller.rb:37:2: C: [Correctable] Layout/EmptyLinesAroundAccessModifier: Keep a blank line before and after private.
	private
 ^^^^^^^
app/controllers/contact_forms_controller.rb:38:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		def form_params
^^
app/controllers/contact_forms_controller.rb:38:3: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
		def form_params ...
  ^^^^^^^^^^^^^^^
app/controllers/contact_forms_controller.rb:39:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
			params.require(:contact_form).permit(:name, :email, :company, :message)
^^^
app/controllers/contact_forms_controller.rb:39:3: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
			params.require(:contact_form).permit(:name, :email, :company, :message)
  ^
app/controllers/contact_forms_controller.rb:40:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		end
^^
app/controllers/contact_forms_controller.rb:41:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
app/controllers/contact_forms_controller.rb:41:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/dashboards_controller.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class DashboardsController.
class DashboardsController < ApplicationController
^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/dashboards_controller.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class DashboardsController < ApplicationController
^
app/controllers/dashboards_controller.rb:2:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def show
^^^^
app/controllers/dashboards_controller.rb:2:5: C: [Correctable] Style/EmptyMethod: Put empty method definitions on a single line.
    def show ...
    ^^^^^^^^
app/controllers/dashboards_controller.rb:4:3: W: [Correctable] Layout/EndAlignment: end at 4, 2 is not aligned with class at 1, 0.
  end
  ^^^
app/controllers/dashboards_controller.rb:4:6: C: [Correctable] Layout/TrailingEmptyLines: Final newline missing.
  end
     
app/controllers/events_controller.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class EventsController.
class EventsController < ApplicationController
^^^^^^^^^^^^^^^^^^^^^^
app/controllers/events_controller.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class EventsController < ApplicationController
^
app/controllers/events_controller.rb:2:121: C: Layout/LineLength: Line is too long. [172/120]
    # For the actions outlined in the only: object, devise will check if the user trying to access the method is an admin. If not, they will be redirected to the home page.
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/events_controller.rb:3:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    before_action :check_admin!, only: [:new, :create, :edit, :update, :delete, :destroy]
^^^^
app/controllers/events_controller.rb:3:40: C: [Correctable] Style/SymbolArray: Use %i or %I for an array of symbols.
    before_action :check_admin!, only: [:new, :create, :edit, :update, :delete, :destroy]
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/events_controller.rb:4:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def index
^^^^
app/controllers/events_controller.rb:5:29: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      @events = Event.order("time")
                            ^^^^^^
app/controllers/events_controller.rb:7:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def show
^^^^
app/controllers/events_controller.rb:7:5: C: [Correctable] Layout/EmptyLineBetweenDefs: Expected 1 empty line between method definitions; found 0.
    def show
    ^^^^^^^^
app/controllers/events_controller.rb:12:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def new
^^^^
app/controllers/events_controller.rb:12:5: C: [Correctable] Layout/EmptyLineBetweenDefs: Expected 1 empty line between method definitions; found 0.
    def new
    ^^^^^^^
app/controllers/events_controller.rb:15:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def create
^^^^
app/controllers/events_controller.rb:15:5: C: [Correctable] Layout/EmptyLineBetweenDefs: Expected 1 empty line between method definitions; found 0.
    def create
    ^^^^^^^^^^
app/controllers/events_controller.rb:15:5: C: Metrics/MethodLength: Method has too many lines. [11/10]
    def create ...
    ^^^^^^^^^^
app/controllers/events_controller.rb:20:57: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          format.html { redirect_to events_url, notice: "Event was successfully created." }
                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/events_controller.rb:28:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def edit
^^^^
app/controllers/events_controller.rb:28:5: C: [Correctable] Layout/EmptyLineBetweenDefs: Expected 1 empty line between method definitions; found 0.
    def edit
    ^^^^^^^^
app/controllers/events_controller.rb:31:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def update
^^^^
app/controllers/events_controller.rb:31:5: C: [Correctable] Layout/EmptyLineBetweenDefs: Expected 1 empty line between method definitions; found 0.
    def update
    ^^^^^^^^^^
app/controllers/events_controller.rb:35:57: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          format.html { redirect_to events_url, notice: "event was successfully updated." }
                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/events_controller.rb:43:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def delete
^^^^
app/controllers/events_controller.rb:43:5: C: [Correctable] Layout/EmptyLineBetweenDefs: Expected 1 empty line between method definitions; found 0.
    def delete
    ^^^^^^^^^^
app/controllers/events_controller.rb:46:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def destroy
^^^^
app/controllers/events_controller.rb:46:5: C: [Correctable] Layout/EmptyLineBetweenDefs: Expected 1 empty line between method definitions; found 0.
    def destroy
    ^^^^^^^^^^^
app/controllers/events_controller.rb:49:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/events_controller.rb:51:55: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        format.html { redirect_to events_url, notice: "Event was successfully destroyed." }
                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/events_controller.rb:55:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	def notify
^
app/controllers/events_controller.rb:55:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
	def notify
^
app/controllers/events_controller.rb:55:2: C: [Correctable] Layout/EmptyLineBetweenDefs: Expected 1 empty line between method definitions; found 0.
	def notify
 ^^^^^^^^^^
app/controllers/events_controller.rb:55:2: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
	def notify ...
 ^^^^^^^^^^
app/controllers/events_controller.rb:56:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		@event = Event.find(params[:id])
^^
app/controllers/events_controller.rb:56:2: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
		@event = Event.find(params[:id])
 ^
app/controllers/events_controller.rb:57:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		#puts "===EVENT===", @event.name
^^
app/controllers/events_controller.rb:57:3: C: [Correctable] Layout/CommentIndentation: Incorrect indentation detected (column 2 instead of 3).
		#puts "===EVENT===", @event.name
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/events_controller.rb:57:3: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
		#puts "===EVENT===", @event.name
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/events_controller.rb:58:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	end
^
app/controllers/events_controller.rb:59:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	def mail
^
app/controllers/events_controller.rb:59:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
	def mail
^
app/controllers/events_controller.rb:59:2: C: [Correctable] Layout/EmptyLineBetweenDefs: Expected 1 empty line between method definitions; found 0.
	def mail
 ^^^^^^^^
app/controllers/events_controller.rb:59:2: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
	def mail ...
 ^^^^^^^^
app/controllers/events_controller.rb:59:2: C: Metrics/AbcSize: Assignment Branch Condition size for mail is too high. [<7, 33, 9> 34.91/17]
	def mail ...
 ^^^^^^^^
app/controllers/events_controller.rb:59:2: C: Metrics/MethodLength: Method has too many lines. [15/10]
	def mail ...
 ^^^^^^^^
app/controllers/events_controller.rb:60:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		@event = Event.find(params[:id])
^^
app/controllers/events_controller.rb:60:2: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
		@event = Event.find(params[:id])
 ^
app/controllers/events_controller.rb:61:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		@users = User.where(is_current_member: true)
^^
app/controllers/events_controller.rb:62:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		if params[:body].nil? || params[:body]==""
^^
app/controllers/events_controller.rb:62:3: C: [Correctable] Style/ConditionalAssignment: Use the return of the conditional for variable assignment and comparison.
		if params[:body].nil? || params[:body]=="" ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/events_controller.rb:62:41: C: [Correctable] Layout/SpaceAroundOperators: Surrounding space missing for operator ==.
		if params[:body].nil? || params[:body]==""
                                        ^^
app/controllers/events_controller.rb:62:43: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
		if params[:body].nil? || params[:body]==""
                                          ^^
app/controllers/events_controller.rb:63:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
			@body = "Event reminder for "+@event.name+":\nTime:\t"+@event.time.to_s+"\nLocation:\t"+@event.location
^^^
app/controllers/events_controller.rb:63:3: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
			@body = "Event reminder for "+@event.name+":\nTime:\t"+@event.time.to_s+"\nLocation:\t"+@event.location
  ^
app/controllers/events_controller.rb:63:12: C: [Correctable] Style/StringConcatenation: Prefer string interpolation to string concatenation.
			@body = "Event reminder for "+@event.name+":\nTime:\t"+@event.time.to_s+"\nLocation:\t"+@event.location
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/events_controller.rb:63:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
			@body = "Event reminder for "+@event.name+":\nTime:\t"+@event.time.to_s+"\nLocation:\t"+@event.location
           ^^^^^^^^^^^^^^^^^^^^^
app/controllers/events_controller.rb:63:33: C: [Correctable] Layout/SpaceAroundOperators: Surrounding space missing for operator +.
			@body = "Event reminder for "+@event.name+":\nTime:\t"+@event.time.to_s+"\nLocation:\t"+@event.location
                                ^
app/controllers/events_controller.rb:63:45: C: [Correctable] Layout/SpaceAroundOperators: Surrounding space missing for operator +.
			@body = "Event reminder for "+@event.name+":\nTime:\t"+@event.time.to_s+"\nLocation:\t"+@event.location
                                            ^
app/controllers/events_controller.rb:63:58: C: [Correctable] Layout/SpaceAroundOperators: Surrounding space missing for operator +.
			@body = "Event reminder for "+@event.name+":\nTime:\t"+@event.time.to_s+"\nLocation:\t"+@event.location
                                                         ^
app/controllers/events_controller.rb:63:75: C: [Correctable] Layout/SpaceAroundOperators: Surrounding space missing for operator +.
			@body = "Event reminder for "+@event.name+":\nTime:\t"+@event.time.to_s+"\nLocation:\t"+@event.location
                                                                          ^
app/controllers/events_controller.rb:63:91: C: [Correctable] Layout/SpaceAroundOperators: Surrounding space missing for operator +.
			@body = "Event reminder for "+@event.name+":\nTime:\t"+@event.time.to_s+"\nLocation:\t"+@event.location
                                                                                          ^
app/controllers/events_controller.rb:64:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		else
^^
app/controllers/events_controller.rb:65:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
			@body = params[:body]
^^^
app/controllers/events_controller.rb:65:3: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
			@body = params[:body]
  ^
app/controllers/events_controller.rb:66:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		end
^^
app/controllers/events_controller.rb:67:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		if params[:subject].nil? || params[:subject]==""
^^
app/controllers/events_controller.rb:67:3: C: [Correctable] Style/ConditionalAssignment: Use the return of the conditional for variable assignment and comparison.
		if params[:subject].nil? || params[:subject]=="" ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/events_controller.rb:67:47: C: [Correctable] Layout/SpaceAroundOperators: Surrounding space missing for operator ==.
		if params[:subject].nil? || params[:subject]==""
                                              ^^
app/controllers/events_controller.rb:67:49: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
		if params[:subject].nil? || params[:subject]==""
                                                ^^
app/controllers/events_controller.rb:68:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
			@subject = "Event reminder for "+@event.name
^^^
app/controllers/events_controller.rb:68:3: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
			@subject = "Event reminder for "+@event.name
  ^
app/controllers/events_controller.rb:68:15: C: [Correctable] Style/StringConcatenation: Prefer string interpolation to string concatenation.
			@subject = "Event reminder for "+@event.name
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/events_controller.rb:68:15: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
			@subject = "Event reminder for "+@event.name
              ^^^^^^^^^^^^^^^^^^^^^
app/controllers/events_controller.rb:68:36: C: [Correctable] Layout/SpaceAroundOperators: Surrounding space missing for operator +.
			@subject = "Event reminder for "+@event.name
                                   ^
app/controllers/events_controller.rb:69:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		else
^^
app/controllers/events_controller.rb:70:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
			@subject = params[:subject]
^^^
app/controllers/events_controller.rb:70:3: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
			@subject = params[:subject]
  ^
app/controllers/events_controller.rb:71:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		end
^^
app/controllers/events_controller.rb:72:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		@users.each do |u|
^^
app/controllers/events_controller.rb:73:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
			EventMailer.with(user: u, event: @event, body: @body, subject: @subject).event_notification.deliver_later
^^^
app/controllers/events_controller.rb:73:3: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
			EventMailer.with(user: u, event: @event, body: @body, subject: @subject).event_notification.deliver_later
  ^
app/controllers/events_controller.rb:74:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		end
^^
app/controllers/events_controller.rb:75:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	end
^
app/controllers/events_controller.rb:76:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def close
^^^^
app/controllers/events_controller.rb:76:5: C: [Correctable] Layout/EmptyLineBetweenDefs: Expected 1 empty line between method definitions; found 0.
    def close
    ^^^^^^^^^
app/controllers/events_controller.rb:83:5: C: [Correctable] Layout/EmptyLinesAroundAccessModifier: Keep a blank line before and after private.
    private
    ^^^^^^^
app/controllers/events_controller.rb:84:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 6) spaces for indentation.
      def event_params
^^^^^^
app/controllers/events_controller.rb:84:7: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
      def event_params ...
      ^^^^^^^^^^^^^^^^
app/controllers/events_controller.rb:85:44: C: [Correctable] Layout/SpaceAfterComma: Space missing after comma.
        params.require(:event).permit(:name,:time, :end_time,:location, :is_mandatory, :description, :open, :password)
                                           ^
app/controllers/events_controller.rb:85:61: C: [Correctable] Layout/SpaceAfterComma: Space missing after comma.
        params.require(:event).permit(:name,:time, :end_time,:location, :is_mandatory, :description, :open, :password)
                                                            ^
app/controllers/events_controller.rb:87:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	  def mailer_params
^
app/controllers/events_controller.rb:87:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 3) spaces for indentation.
	  def mailer_params
^^^
app/controllers/events_controller.rb:87:4: C: [Correctable] Layout/EmptyLineBetweenDefs: Expected 1 empty line between method definitions; found 0.
	  def mailer_params
   ^^^^^^^^^^^^^^^^^
app/controllers/events_controller.rb:87:4: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
	  def mailer_params ...
   ^^^^^^^^^^^^^^^^^
app/controllers/events_controller.rb:88:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		params.require(:event).permit(:subject,:body)
^^
app/controllers/events_controller.rb:88:3: C: [Correctable] Layout/IndentationWidth: Use 2 (not -1) spaces for indentation.
		params.require(:event).permit(:subject,:body)
  ^
app/controllers/events_controller.rb:88:41: C: [Correctable] Layout/SpaceAfterComma: Space missing after comma.
		params.require(:event).permit(:subject,:body)
                                        ^
app/controllers/events_controller.rb:89:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	  end
^
app/controllers/events_controller.rb:90:3: W: [Correctable] Layout/EndAlignment: end at 90, 2 is not aligned with class at 1, 0.
  end
  ^^^
app/controllers/events_controller.rb:91:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/home_pages_controller.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
class HomePagesController < ApplicationController ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/home_pages_controller.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class HomePagesController.
class HomePagesController < ApplicationController
^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/home_pages_controller.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class HomePagesController < ApplicationController
^
app/controllers/home_pages_controller.rb:2:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def index
^^^^
app/controllers/home_pages_controller.rb:5:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def show
^^^^
app/controllers/home_pages_controller.rb:5:5: C: [Correctable] Layout/EmptyLineBetweenDefs: Expected 1 empty line between method definitions; found 0.
    def show
    ^^^^^^^^
app/controllers/home_pages_controller.rb:5:5: C: [Correctable] Style/EmptyMethod: Put empty method definitions on a single line.
    def show ...
    ^^^^^^^^
app/controllers/home_pages_controller.rb:7:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def new
^^^^
app/controllers/home_pages_controller.rb:7:5: C: [Correctable] Layout/EmptyLineBetweenDefs: Expected 1 empty line between method definitions; found 0.
    def new
    ^^^^^^^
app/controllers/home_pages_controller.rb:7:5: C: [Correctable] Style/EmptyMethod: Put empty method definitions on a single line.
    def new ...
    ^^^^^^^
app/controllers/home_pages_controller.rb:9:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def edit
^^^^
app/controllers/home_pages_controller.rb:9:5: C: [Correctable] Layout/EmptyLineBetweenDefs: Expected 1 empty line between method definitions; found 0.
    def edit
    ^^^^^^^^
app/controllers/home_pages_controller.rb:12:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def update
^^^^
app/controllers/home_pages_controller.rb:12:5: C: [Correctable] Layout/EmptyLineBetweenDefs: Expected 1 empty line between method definitions; found 0.
    def update
    ^^^^^^^^^^
app/controllers/home_pages_controller.rb:16:61: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          format.html { redirect_to home_pages_url, notice: "Home Page was successfully updated." }
                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/home_pages_controller.rb:25:5: C: [Correctable] Layout/EmptyLinesAroundAccessModifier: Keep a blank line before and after private.
    private
    ^^^^^^^
app/controllers/home_pages_controller.rb:26:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 6) spaces for indentation.
      def home_params
^^^^^^
app/controllers/home_pages_controller.rb:26:7: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
      def home_params ...
      ^^^^^^^^^^^^^^^
app/controllers/home_pages_controller.rb:27:43: C: Naming/VariableNumber: Use normalcase for symbol numbers.
        params.require(:home_page).permit(:slider_image_1, :slider_image_2, :slider_image_3, :slider_image_4, :slider_image_5, :heading,:summary)
                                          ^^^^^^^^^^^^^^^
app/controllers/home_pages_controller.rb:27:60: C: Naming/VariableNumber: Use normalcase for symbol numbers.
        params.require(:home_page).permit(:slider_image_1, :slider_image_2, :slider_image_3, :slider_image_4, :slider_image_5, :heading,:summary)
                                                           ^^^^^^^^^^^^^^^
app/controllers/home_pages_controller.rb:27:77: C: Naming/VariableNumber: Use normalcase for symbol numbers.
        params.require(:home_page).permit(:slider_image_1, :slider_image_2, :slider_image_3, :slider_image_4, :slider_image_5, :heading,:summary)
                                                                            ^^^^^^^^^^^^^^^
app/controllers/home_pages_controller.rb:27:94: C: Naming/VariableNumber: Use normalcase for symbol numbers.
        params.require(:home_page).permit(:slider_image_1, :slider_image_2, :slider_image_3, :slider_image_4, :slider_image_5, :heading,:summary)
                                                                                             ^^^^^^^^^^^^^^^
app/controllers/home_pages_controller.rb:27:111: C: Naming/VariableNumber: Use normalcase for symbol numbers.
        params.require(:home_page).permit(:slider_image_1, :slider_image_2, :slider_image_3, :slider_image_4, :slider_image_5, :heading,:summary)
                                                                                                              ^^^^^^^^^^^^^^^
app/controllers/home_pages_controller.rb:27:121: C: [Correctable] Layout/LineLength: Line is too long. [145/120]
        params.require(:home_page).permit(:slider_image_1, :slider_image_2, :slider_image_3, :slider_image_4, :slider_image_5, :heading,:summary)
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/home_pages_controller.rb:27:136: C: [Correctable] Layout/SpaceAfterComma: Space missing after comma.
        params.require(:home_page).permit(:slider_image_1, :slider_image_2, :slider_image_3, :slider_image_4, :slider_image_5, :heading,:summary)
                                                                                                                                       ^
app/controllers/home_pages_controller.rb:29:3: W: [Correctable] Layout/EndAlignment: end at 29, 2 is not aligned with class at 1, 0.
  end
  ^^^
app/controllers/home_pages_controller.rb:29:6: C: [Correctable] Layout/TrailingEmptyLines: Final newline missing.
  end
     
app/controllers/payment_accounts_controller.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class PaymentAccountsController.
class PaymentAccountsController < ApplicationController
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/payment_accounts_controller.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class PaymentAccountsController < ApplicationController
^
app/controllers/payment_accounts_controller.rb:2:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	def new
^
app/controllers/payment_accounts_controller.rb:2:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
	def new
^
app/controllers/payment_accounts_controller.rb:3:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		@account = PaymentAccount.new
^^
app/controllers/payment_accounts_controller.rb:3:2: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
		@account = PaymentAccount.new
 ^
app/controllers/payment_accounts_controller.rb:4:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	end
^
app/controllers/payment_accounts_controller.rb:6:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	def create
^
app/controllers/payment_accounts_controller.rb:6:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
	def create
^
app/controllers/payment_accounts_controller.rb:7:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		@account = PaymentAccount.new(account_params)
^^
app/controllers/payment_accounts_controller.rb:7:2: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
		@account = PaymentAccount.new(account_params)
 ^
app/controllers/payment_accounts_controller.rb:8:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		respond_to do |format|
^^
app/controllers/payment_accounts_controller.rb:9:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
			if @account.save
^^^
app/controllers/payment_accounts_controller.rb:9:3: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
			if @account.save
  ^
app/controllers/payment_accounts_controller.rb:10:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
				format.html {redirect_to payment_accounts_path, notice: "Account was successfully created."}
^^^^
app/controllers/payment_accounts_controller.rb:10:4: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
				format.html {redirect_to payment_accounts_path, notice: "Account was successfully created."}
   ^
app/controllers/payment_accounts_controller.rb:10:18: C: [Correctable] Layout/SpaceInsideBlockBraces: Space missing inside {.
				format.html {redirect_to payment_accounts_path, notice: "Account was successfully created."}
                 ^
app/controllers/payment_accounts_controller.rb:10:61: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
				format.html {redirect_to payment_accounts_path, notice: "Account was successfully created."}
                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/payment_accounts_controller.rb:10:96: C: [Correctable] Layout/SpaceInsideBlockBraces: Space missing inside }.
				format.html {redirect_to payment_accounts_path, notice: "Account was successfully created."}
                                                                                               ^
app/controllers/payment_accounts_controller.rb:11:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
				format.json {render :show, status: :created, location: @account}
^^^^
app/controllers/payment_accounts_controller.rb:11:18: C: [Correctable] Layout/SpaceInsideBlockBraces: Space missing inside {.
				format.json {render :show, status: :created, location: @account}
                 ^
app/controllers/payment_accounts_controller.rb:11:68: C: [Correctable] Layout/SpaceInsideBlockBraces: Space missing inside }.
				format.json {render :show, status: :created, location: @account}
                                                                   ^
app/controllers/payment_accounts_controller.rb:12:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
			else
^^^
app/controllers/payment_accounts_controller.rb:13:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
				format.html {render :new, status: :unprocessable_entity}
^^^^
app/controllers/payment_accounts_controller.rb:13:4: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
				format.html {render :new, status: :unprocessable_entity}
   ^
app/controllers/payment_accounts_controller.rb:13:18: C: [Correctable] Layout/SpaceInsideBlockBraces: Space missing inside {.
				format.html {render :new, status: :unprocessable_entity}
                 ^
app/controllers/payment_accounts_controller.rb:13:60: C: [Correctable] Layout/SpaceInsideBlockBraces: Space missing inside }.
				format.html {render :new, status: :unprocessable_entity}
                                                           ^
app/controllers/payment_accounts_controller.rb:14:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
				format.json {render json: @account.errors, status: :unprocessable_entity}
^^^^
app/controllers/payment_accounts_controller.rb:14:18: C: [Correctable] Layout/SpaceInsideBlockBraces: Space missing inside {.
				format.json {render json: @account.errors, status: :unprocessable_entity}
                 ^
app/controllers/payment_accounts_controller.rb:14:77: C: [Correctable] Layout/SpaceInsideBlockBraces: Space missing inside }.
				format.json {render json: @account.errors, status: :unprocessable_entity}
                                                                            ^
app/controllers/payment_accounts_controller.rb:15:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
			end
^^^
app/controllers/payment_accounts_controller.rb:16:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		end
^^
app/controllers/payment_accounts_controller.rb:17:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	end
^
app/controllers/payment_accounts_controller.rb:19:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	def index
^
app/controllers/payment_accounts_controller.rb:19:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
	def index
^
app/controllers/payment_accounts_controller.rb:20:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		@semesters = Semester.where(["semesters.start < :now AND semesters.end > :now", {now: DateTime.now}]).order(created_at: :desc)
^^
app/controllers/payment_accounts_controller.rb:20:2: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
		@semesters = Semester.where(["semesters.start < :now AND semesters.end > :now", {now: DateTime.now}]).order(created_at: :desc)
 ^
app/controllers/payment_accounts_controller.rb:20:32: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
		@semesters = Semester.where(["semesters.start < :now AND semesters.end > :now", {now: DateTime.now}]).order(created_at: :desc)
                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/payment_accounts_controller.rb:20:83: C: [Correctable] Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
		@semesters = Semester.where(["semesters.start < :now AND semesters.end > :now", {now: DateTime.now}]).order(created_at: :desc)
                                                                                  ^
app/controllers/payment_accounts_controller.rb:20:101: C: [Correctable] Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
		@semesters = Semester.where(["semesters.start < :now AND semesters.end > :now", {now: DateTime.now}]).order(created_at: :desc)
                                                                                                    ^
app/controllers/payment_accounts_controller.rb:20:119: C: [Correctable] Layout/LineLength: Line is too long. [130/120]
		@semesters = Semester.where(["semesters.start < :now AND semesters.end > :now", {now: DateTime.now}]).order(created_at: :desc) ...
                                                                                                                      ^^^^^^^^^^
app/controllers/payment_accounts_controller.rb:21:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		@current_account = PaymentAccount.find_by(payment_address: ENV['PAYPAL_CLIENT_ID'])
^^
app/controllers/payment_accounts_controller.rb:22:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		@accounts = PaymentAccount.all
^^
app/controllers/payment_accounts_controller.rb:23:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	end
^
app/controllers/payment_accounts_controller.rb:25:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	def show
^
app/controllers/payment_accounts_controller.rb:25:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
	def show
^
app/controllers/payment_accounts_controller.rb:26:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		@account = PaymentAccount.find(params[:id])
^^
app/controllers/payment_accounts_controller.rb:26:2: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
		@account = PaymentAccount.find(params[:id])
 ^
app/controllers/payment_accounts_controller.rb:27:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	end
^
app/controllers/payment_accounts_controller.rb:29:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	def edit
^
app/controllers/payment_accounts_controller.rb:29:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
	def edit
^
app/controllers/payment_accounts_controller.rb:30:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		@account = PaymentAccount.find(params[:id])
^^
app/controllers/payment_accounts_controller.rb:30:2: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
		@account = PaymentAccount.find(params[:id])
 ^
app/controllers/payment_accounts_controller.rb:31:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	end
^
app/controllers/payment_accounts_controller.rb:33:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	def update
^
app/controllers/payment_accounts_controller.rb:33:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
	def update
^
app/controllers/payment_accounts_controller.rb:34:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		@account = PaymentAccount.find(params[:id])
^^
app/controllers/payment_accounts_controller.rb:34:2: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
		@account = PaymentAccount.find(params[:id])
 ^
app/controllers/payment_accounts_controller.rb:35:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		respond_to do |format|
^^
app/controllers/payment_accounts_controller.rb:36:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
			if @account.update(account_params)
^^^
app/controllers/payment_accounts_controller.rb:36:3: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
			if @account.update(account_params)
  ^
app/controllers/payment_accounts_controller.rb:37:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
				format.html {redirect_to payment_accounts_path, notice: "Account was successfully updated."}
^^^^
app/controllers/payment_accounts_controller.rb:37:4: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
				format.html {redirect_to payment_accounts_path, notice: "Account was successfully updated."}
   ^
app/controllers/payment_accounts_controller.rb:37:18: C: [Correctable] Layout/SpaceInsideBlockBraces: Space missing inside {.
				format.html {redirect_to payment_accounts_path, notice: "Account was successfully updated."}
                 ^
app/controllers/payment_accounts_controller.rb:37:61: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
				format.html {redirect_to payment_accounts_path, notice: "Account was successfully updated."}
                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/payment_accounts_controller.rb:37:96: C: [Correctable] Layout/SpaceInsideBlockBraces: Space missing inside }.
				format.html {redirect_to payment_accounts_path, notice: "Account was successfully updated."}
                                                                                               ^
app/controllers/payment_accounts_controller.rb:38:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
				format.json {render :show, status: :ok, location: @account}
^^^^
app/controllers/payment_accounts_controller.rb:38:18: C: [Correctable] Layout/SpaceInsideBlockBraces: Space missing inside {.
				format.json {render :show, status: :ok, location: @account}
                 ^
app/controllers/payment_accounts_controller.rb:38:63: C: [Correctable] Layout/SpaceInsideBlockBraces: Space missing inside }.
				format.json {render :show, status: :ok, location: @account}
                                                              ^
app/controllers/payment_accounts_controller.rb:39:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
			else
^^^
app/controllers/payment_accounts_controller.rb:40:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
				format.html {render :edit, status: :unprocessable_entity}
^^^^
app/controllers/payment_accounts_controller.rb:40:4: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
				format.html {render :edit, status: :unprocessable_entity}
   ^
app/controllers/payment_accounts_controller.rb:40:18: C: [Correctable] Layout/SpaceInsideBlockBraces: Space missing inside {.
				format.html {render :edit, status: :unprocessable_entity}
                 ^
app/controllers/payment_accounts_controller.rb:40:61: C: [Correctable] Layout/SpaceInsideBlockBraces: Space missing inside }.
				format.html {render :edit, status: :unprocessable_entity}
                                                            ^
app/controllers/payment_accounts_controller.rb:41:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
				format.json {render json: @account.errors, status: :unprocessable_entity}
^^^^
app/controllers/payment_accounts_controller.rb:41:18: C: [Correctable] Layout/SpaceInsideBlockBraces: Space missing inside {.
				format.json {render json: @account.errors, status: :unprocessable_entity}
                 ^
app/controllers/payment_accounts_controller.rb:41:77: C: [Correctable] Layout/SpaceInsideBlockBraces: Space missing inside }.
				format.json {render json: @account.errors, status: :unprocessable_entity}
                                                                            ^
app/controllers/payment_accounts_controller.rb:42:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
			end
^^^
app/controllers/payment_accounts_controller.rb:43:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		end
^^
app/controllers/payment_accounts_controller.rb:44:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	end
^
app/controllers/payment_accounts_controller.rb:46:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	def destroy
^
app/controllers/payment_accounts_controller.rb:46:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
	def destroy
^
app/controllers/payment_accounts_controller.rb:47:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		@account = PaymentAccount.find(params[:id])
^^
app/controllers/payment_accounts_controller.rb:47:2: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
		@account = PaymentAccount.find(params[:id])
 ^
app/controllers/payment_accounts_controller.rb:48:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		@account.destroy
^^
app/controllers/payment_accounts_controller.rb:49:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		respond_to do |format|
^^
app/controllers/payment_accounts_controller.rb:50:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
			format.html {redirect_to payment_accounts_path, notice: "Account was successfully deleted."}
^^^
app/controllers/payment_accounts_controller.rb:50:3: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
			format.html {redirect_to payment_accounts_path, notice: "Account was successfully deleted."}
  ^
app/controllers/payment_accounts_controller.rb:50:17: C: [Correctable] Layout/SpaceInsideBlockBraces: Space missing inside {.
			format.html {redirect_to payment_accounts_path, notice: "Account was successfully deleted."}
                ^
app/controllers/payment_accounts_controller.rb:50:60: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
			format.html {redirect_to payment_accounts_path, notice: "Account was successfully deleted."}
                                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/payment_accounts_controller.rb:50:95: C: [Correctable] Layout/SpaceInsideBlockBraces: Space missing inside }.
			format.html {redirect_to payment_accounts_path, notice: "Account was successfully deleted."}
                                                                                              ^
app/controllers/payment_accounts_controller.rb:51:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
			format.json {head :no_content}
^^^
app/controllers/payment_accounts_controller.rb:51:17: C: [Correctable] Layout/SpaceInsideBlockBraces: Space missing inside {.
			format.json {head :no_content}
                ^
app/controllers/payment_accounts_controller.rb:51:33: C: [Correctable] Layout/SpaceInsideBlockBraces: Space missing inside }.
			format.json {head :no_content}
                                ^
app/controllers/payment_accounts_controller.rb:52:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		end
^^
app/controllers/payment_accounts_controller.rb:53:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	end
^
app/controllers/payment_accounts_controller.rb:55:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	def select
^
app/controllers/payment_accounts_controller.rb:55:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
	def select
^
app/controllers/payment_accounts_controller.rb:56:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		@account = PaymentAccount.find(params[:id])
^^
app/controllers/payment_accounts_controller.rb:56:2: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
		@account = PaymentAccount.find(params[:id])
 ^
app/controllers/payment_accounts_controller.rb:57:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		ENV['PAYPAL_CLIENT_ID']=@account.payment_address
^^
app/controllers/payment_accounts_controller.rb:57:26: C: [Correctable] Layout/SpaceAroundOperators: Surrounding space missing for operator =.
		ENV['PAYPAL_CLIENT_ID']=@account.payment_address
                         ^
app/controllers/payment_accounts_controller.rb:58:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		respond_to do |format|
^^
app/controllers/payment_accounts_controller.rb:59:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
			format.html {redirect_to payment_accounts_path, notice: "Account was selected as payment destination*."}
^^^
app/controllers/payment_accounts_controller.rb:59:3: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
			format.html {redirect_to payment_accounts_path, notice: "Account was selected as payment destination*."}
  ^
app/controllers/payment_accounts_controller.rb:59:17: C: [Correctable] Layout/SpaceInsideBlockBraces: Space missing inside {.
			format.html {redirect_to payment_accounts_path, notice: "Account was selected as payment destination*."}
                ^
app/controllers/payment_accounts_controller.rb:59:60: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
			format.html {redirect_to payment_accounts_path, notice: "Account was selected as payment destination*."}
                                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/payment_accounts_controller.rb:59:107: C: [Correctable] Layout/SpaceInsideBlockBraces: Space missing inside }.
			format.html {redirect_to payment_accounts_path, notice: "Account was selected as payment destination*."}
                                                                                                          ^
app/controllers/payment_accounts_controller.rb:60:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
			format.json {head :no_content}
^^^
app/controllers/payment_accounts_controller.rb:60:17: C: [Correctable] Layout/SpaceInsideBlockBraces: Space missing inside {.
			format.json {head :no_content}
                ^
app/controllers/payment_accounts_controller.rb:60:33: C: [Correctable] Layout/SpaceInsideBlockBraces: Space missing inside }.
			format.json {head :no_content}
                                ^
app/controllers/payment_accounts_controller.rb:61:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		end
^^
app/controllers/payment_accounts_controller.rb:62:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	end
^
app/controllers/payment_accounts_controller.rb:64:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	private
^
app/controllers/payment_accounts_controller.rb:64:2: C: [Correctable] Layout/AccessModifierIndentation: Indent access modifiers like private.
	private
 ^^^^^^^
app/controllers/payment_accounts_controller.rb:64:2: C: [Correctable] Layout/EmptyLinesAroundAccessModifier: Keep a blank line before and after private.
	private
 ^^^^^^^
app/controllers/payment_accounts_controller.rb:65:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		def account_params
^^
app/controllers/payment_accounts_controller.rb:65:3: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
		def account_params ...
  ^^^^^^^^^^^^^^^^^^
app/controllers/payment_accounts_controller.rb:66:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
			params.require(:payment_account).permit(:internal_name, :payment_address)
^^^
app/controllers/payment_accounts_controller.rb:66:3: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
			params.require(:payment_account).permit(:internal_name, :payment_address)
  ^
app/controllers/payment_accounts_controller.rb:67:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		end
^^
app/controllers/payments_controller.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class PaymentsController < ApplicationController
^
app/controllers/payments_controller.rb:2:1: C: [Correctable] Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body beginning.
app/controllers/payments_controller.rb:3:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/payments_controller.rb:4:1: C: [Correctable] Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body end.
app/controllers/payments_controller.rb:5:4: C: [Correctable] Layout/TrailingEmptyLines: Final newline missing.
end
   
app/controllers/semesters_controller.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class SemestersController.
class SemestersController < ApplicationController
^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/semesters_controller.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class SemestersController < ApplicationController
^
app/controllers/semesters_controller.rb:2:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	def index
^
app/controllers/semesters_controller.rb:2:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
	def index
^
app/controllers/semesters_controller.rb:3:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		@semesters = Semester.all
^^
app/controllers/semesters_controller.rb:3:2: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
		@semesters = Semester.all
 ^
app/controllers/semesters_controller.rb:4:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	end
^
app/controllers/semesters_controller.rb:6:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	def show
^
app/controllers/semesters_controller.rb:6:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
	def show
^
app/controllers/semesters_controller.rb:7:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		@semester = Semester.find(params[:id])
^^
app/controllers/semesters_controller.rb:7:2: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
		@semester = Semester.find(params[:id])
 ^
app/controllers/semesters_controller.rb:8:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	end
^
app/controllers/semesters_controller.rb:10:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	def new
^
app/controllers/semesters_controller.rb:10:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
	def new
^
app/controllers/semesters_controller.rb:11:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		@semester = Semester.new
^^
app/controllers/semesters_controller.rb:11:2: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
		@semester = Semester.new
 ^
app/controllers/semesters_controller.rb:12:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	end
^
app/controllers/semesters_controller.rb:14:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	def create
^
app/controllers/semesters_controller.rb:14:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
	def create
^
app/controllers/semesters_controller.rb:15:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		@semester = Semester.new(semester_params)
^^
app/controllers/semesters_controller.rb:15:2: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
		@semester = Semester.new(semester_params)
 ^
app/controllers/semesters_controller.rb:16:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		respond_to do |format|
^^
app/controllers/semesters_controller.rb:17:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
			if @semester.save
^^^
app/controllers/semesters_controller.rb:17:3: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
			if @semester.save
  ^
app/controllers/semesters_controller.rb:18:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
				format.html {redirect_to semesters_url, notice: "Semester was successfully created."}
^^^^
app/controllers/semesters_controller.rb:18:4: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
				format.html {redirect_to semesters_url, notice: "Semester was successfully created."}
   ^
app/controllers/semesters_controller.rb:18:18: C: [Correctable] Layout/SpaceInsideBlockBraces: Space missing inside {.
				format.html {redirect_to semesters_url, notice: "Semester was successfully created."}
                 ^
app/controllers/semesters_controller.rb:18:53: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
				format.html {redirect_to semesters_url, notice: "Semester was successfully created."}
                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/semesters_controller.rb:18:89: C: [Correctable] Layout/SpaceInsideBlockBraces: Space missing inside }.
				format.html {redirect_to semesters_url, notice: "Semester was successfully created."}
                                                                                        ^
app/controllers/semesters_controller.rb:19:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
				format.json {render :show, status: :created, location: @semester}
^^^^
app/controllers/semesters_controller.rb:19:18: C: [Correctable] Layout/SpaceInsideBlockBraces: Space missing inside {.
				format.json {render :show, status: :created, location: @semester}
                 ^
app/controllers/semesters_controller.rb:19:69: C: [Correctable] Layout/SpaceInsideBlockBraces: Space missing inside }.
				format.json {render :show, status: :created, location: @semester}
                                                                    ^
app/controllers/semesters_controller.rb:20:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
			else
^^^
app/controllers/semesters_controller.rb:21:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
				format.html {render :new, status: :unprocessable_entity}
^^^^
app/controllers/semesters_controller.rb:21:4: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
				format.html {render :new, status: :unprocessable_entity}
   ^
app/controllers/semesters_controller.rb:21:18: C: [Correctable] Layout/SpaceInsideBlockBraces: Space missing inside {.
				format.html {render :new, status: :unprocessable_entity}
                 ^
app/controllers/semesters_controller.rb:21:60: C: [Correctable] Layout/SpaceInsideBlockBraces: Space missing inside }.
				format.html {render :new, status: :unprocessable_entity}
                                                           ^
app/controllers/semesters_controller.rb:22:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
				format.json {render json: @semester.errors, status: :unprocessable_entity}
^^^^
app/controllers/semesters_controller.rb:22:18: C: [Correctable] Layout/SpaceInsideBlockBraces: Space missing inside {.
				format.json {render json: @semester.errors, status: :unprocessable_entity}
                 ^
app/controllers/semesters_controller.rb:22:78: C: [Correctable] Layout/SpaceInsideBlockBraces: Space missing inside }.
				format.json {render json: @semester.errors, status: :unprocessable_entity}
                                                                             ^
app/controllers/semesters_controller.rb:23:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
			end
^^^
app/controllers/semesters_controller.rb:24:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		end
^^
app/controllers/semesters_controller.rb:25:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	end
^
app/controllers/semesters_controller.rb:27:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	def edit
^
app/controllers/semesters_controller.rb:27:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
	def edit
^
app/controllers/semesters_controller.rb:28:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		@semester = Semester.find(params[:id])
^^
app/controllers/semesters_controller.rb:28:2: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
		@semester = Semester.find(params[:id])
 ^
app/controllers/semesters_controller.rb:29:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	end
^
app/controllers/semesters_controller.rb:31:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	def update
^
app/controllers/semesters_controller.rb:31:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
	def update
^
app/controllers/semesters_controller.rb:32:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		@semester = Semester.find(params[:id])
^^
app/controllers/semesters_controller.rb:32:2: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
		@semester = Semester.find(params[:id])
 ^
app/controllers/semesters_controller.rb:33:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		respond_to do |format|
^^
app/controllers/semesters_controller.rb:34:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
			if @semester.update(semester_params)
^^^
app/controllers/semesters_controller.rb:34:3: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
			if @semester.update(semester_params)
  ^
app/controllers/semesters_controller.rb:35:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
				format.html {redirect_to semesters_url, notice: "Semester was successfully updated."}
^^^^
app/controllers/semesters_controller.rb:35:4: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
				format.html {redirect_to semesters_url, notice: "Semester was successfully updated."}
   ^
app/controllers/semesters_controller.rb:35:18: C: [Correctable] Layout/SpaceInsideBlockBraces: Space missing inside {.
				format.html {redirect_to semesters_url, notice: "Semester was successfully updated."}
                 ^
app/controllers/semesters_controller.rb:35:53: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
				format.html {redirect_to semesters_url, notice: "Semester was successfully updated."}
                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/semesters_controller.rb:35:89: C: [Correctable] Layout/SpaceInsideBlockBraces: Space missing inside }.
				format.html {redirect_to semesters_url, notice: "Semester was successfully updated."}
                                                                                        ^
app/controllers/semesters_controller.rb:36:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
				format.json {render :show, status: :ok, location: @semester}
^^^^
app/controllers/semesters_controller.rb:36:18: C: [Correctable] Layout/SpaceInsideBlockBraces: Space missing inside {.
				format.json {render :show, status: :ok, location: @semester}
                 ^
app/controllers/semesters_controller.rb:36:64: C: [Correctable] Layout/SpaceInsideBlockBraces: Space missing inside }.
				format.json {render :show, status: :ok, location: @semester}
                                                               ^
app/controllers/semesters_controller.rb:37:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
			else
^^^
app/controllers/semesters_controller.rb:38:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
				format.html {render :edit, status: :unprocessable_entity}
^^^^
app/controllers/semesters_controller.rb:38:4: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
				format.html {render :edit, status: :unprocessable_entity}
   ^
app/controllers/semesters_controller.rb:38:18: C: [Correctable] Layout/SpaceInsideBlockBraces: Space missing inside {.
				format.html {render :edit, status: :unprocessable_entity}
                 ^
app/controllers/semesters_controller.rb:38:61: C: [Correctable] Layout/SpaceInsideBlockBraces: Space missing inside }.
				format.html {render :edit, status: :unprocessable_entity}
                                                            ^
app/controllers/semesters_controller.rb:39:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
				format.json {render json:@semester.errors, status: :unprocessable_entity}
^^^^
app/controllers/semesters_controller.rb:39:18: C: [Correctable] Layout/SpaceInsideBlockBraces: Space missing inside {.
				format.json {render json:@semester.errors, status: :unprocessable_entity}
                 ^
app/controllers/semesters_controller.rb:39:29: C: [Correctable] Layout/SpaceAfterColon: Space missing after colon.
				format.json {render json:@semester.errors, status: :unprocessable_entity}
                            ^
app/controllers/semesters_controller.rb:39:77: C: [Correctable] Layout/SpaceInsideBlockBraces: Space missing inside }.
				format.json {render json:@semester.errors, status: :unprocessable_entity}
                                                                            ^
app/controllers/semesters_controller.rb:40:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
			end
^^^
app/controllers/semesters_controller.rb:41:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		end
^^
app/controllers/semesters_controller.rb:42:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	end
^
app/controllers/semesters_controller.rb:44:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	def delete
^
app/controllers/semesters_controller.rb:44:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
	def delete
^
app/controllers/semesters_controller.rb:45:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		@semester = Semester.find(params[:id])
^^
app/controllers/semesters_controller.rb:45:2: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
		@semester = Semester.find(params[:id])
 ^
app/controllers/semesters_controller.rb:46:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	end
^
app/controllers/semesters_controller.rb:48:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	def destroy
^
app/controllers/semesters_controller.rb:48:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
	def destroy
^
app/controllers/semesters_controller.rb:49:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		@semester = Semester.find(params[:id])
^^
app/controllers/semesters_controller.rb:49:2: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
		@semester = Semester.find(params[:id])
 ^
app/controllers/semesters_controller.rb:50:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		@semester.destroy
^^
app/controllers/semesters_controller.rb:51:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		respond_to do |format|
^^
app/controllers/semesters_controller.rb:52:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
			format.html {redirect_to semesters_url, notice: "Semester was successfully destroyed."}
^^^
app/controllers/semesters_controller.rb:52:3: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
			format.html {redirect_to semesters_url, notice: "Semester was successfully destroyed."}
  ^
app/controllers/semesters_controller.rb:52:17: C: [Correctable] Layout/SpaceInsideBlockBraces: Space missing inside {.
			format.html {redirect_to semesters_url, notice: "Semester was successfully destroyed."}
                ^
app/controllers/semesters_controller.rb:52:52: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
			format.html {redirect_to semesters_url, notice: "Semester was successfully destroyed."}
                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/semesters_controller.rb:52:90: C: [Correctable] Layout/SpaceInsideBlockBraces: Space missing inside }.
			format.html {redirect_to semesters_url, notice: "Semester was successfully destroyed."}
                                                                                         ^
app/controllers/semesters_controller.rb:53:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
			format.json {head :no_content}
^^^
app/controllers/semesters_controller.rb:53:17: C: [Correctable] Layout/SpaceInsideBlockBraces: Space missing inside {.
			format.json {head :no_content}
                ^
app/controllers/semesters_controller.rb:53:33: C: [Correctable] Layout/SpaceInsideBlockBraces: Space missing inside }.
			format.json {head :no_content}
                                ^
app/controllers/semesters_controller.rb:54:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		end
^^
app/controllers/semesters_controller.rb:55:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	end
^
app/controllers/semesters_controller.rb:57:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	def records
^
app/controllers/semesters_controller.rb:57:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
	def records
^
app/controllers/semesters_controller.rb:58:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		@semester = Semester.find(params[:id])
^^
app/controllers/semesters_controller.rb:58:2: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
		@semester = Semester.find(params[:id])
 ^
app/controllers/semesters_controller.rb:59:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		@records = SemesterUser.where(semester_id: @semester.id)
^^
app/controllers/semesters_controller.rb:60:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	end
^
app/controllers/semesters_controller.rb:62:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	def new_record
^
app/controllers/semesters_controller.rb:62:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
	def new_record
^
app/controllers/semesters_controller.rb:63:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		@record = SemesterUser.new
^^
app/controllers/semesters_controller.rb:63:2: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
		@record = SemesterUser.new
 ^
app/controllers/semesters_controller.rb:64:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	end
^
app/controllers/semesters_controller.rb:66:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	def create_record
^
app/controllers/semesters_controller.rb:66:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
	def create_record
^
app/controllers/semesters_controller.rb:66:2: C: Metrics/AbcSize: Assignment Branch Condition size for create_record is too high. [<3, 17, 2> 17.38/17]
	def create_record ...
 ^^^^^^^^^^^^^^^^^
app/controllers/semesters_controller.rb:66:2: C: Metrics/MethodLength: Method has too many lines. [11/10]
	def create_record ...
 ^^^^^^^^^^^^^^^^^
app/controllers/semesters_controller.rb:67:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		@record = SemesterUser.new(record_params)
^^
app/controllers/semesters_controller.rb:67:2: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
		@record = SemesterUser.new(record_params)
 ^
app/controllers/semesters_controller.rb:68:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		@record.semester_id = params[:id]
^^
app/controllers/semesters_controller.rb:69:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		respond_to do |format|
^^
app/controllers/semesters_controller.rb:70:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
			if @record.save
^^^
app/controllers/semesters_controller.rb:70:3: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
			if @record.save
  ^
app/controllers/semesters_controller.rb:71:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
				format.html {redirect_to records_semester_url, notice: "Record was successfully created."}
^^^^
app/controllers/semesters_controller.rb:71:4: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
				format.html {redirect_to records_semester_url, notice: "Record was successfully created."}
   ^
app/controllers/semesters_controller.rb:71:18: C: [Correctable] Layout/SpaceInsideBlockBraces: Space missing inside {.
				format.html {redirect_to records_semester_url, notice: "Record was successfully created."}
                 ^
app/controllers/semesters_controller.rb:71:60: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
				format.html {redirect_to records_semester_url, notice: "Record was successfully created."}
                                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/semesters_controller.rb:71:94: C: [Correctable] Layout/SpaceInsideBlockBraces: Space missing inside }.
				format.html {redirect_to records_semester_url, notice: "Record was successfully created."}
                                                                                             ^
app/controllers/semesters_controller.rb:72:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
				format.json {render :show, status: :created, location: @record}
^^^^
app/controllers/semesters_controller.rb:72:18: C: [Correctable] Layout/SpaceInsideBlockBraces: Space missing inside {.
				format.json {render :show, status: :created, location: @record}
                 ^
app/controllers/semesters_controller.rb:72:67: C: [Correctable] Layout/SpaceInsideBlockBraces: Space missing inside }.
				format.json {render :show, status: :created, location: @record}
                                                                  ^
app/controllers/semesters_controller.rb:73:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
			else
^^^
app/controllers/semesters_controller.rb:74:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
				format.html {render :new_record, status: :unprocessable_entity}
^^^^
app/controllers/semesters_controller.rb:74:4: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
				format.html {render :new_record, status: :unprocessable_entity}
   ^
app/controllers/semesters_controller.rb:74:18: C: [Correctable] Layout/SpaceInsideBlockBraces: Space missing inside {.
				format.html {render :new_record, status: :unprocessable_entity}
                 ^
app/controllers/semesters_controller.rb:74:67: C: [Correctable] Layout/SpaceInsideBlockBraces: Space missing inside }.
				format.html {render :new_record, status: :unprocessable_entity}
                                                                  ^
app/controllers/semesters_controller.rb:75:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
				format.json {render json: @record.errors, status: :unprocessable_entity}
^^^^
app/controllers/semesters_controller.rb:75:18: C: [Correctable] Layout/SpaceInsideBlockBraces: Space missing inside {.
				format.json {render json: @record.errors, status: :unprocessable_entity}
                 ^
app/controllers/semesters_controller.rb:75:76: C: [Correctable] Layout/SpaceInsideBlockBraces: Space missing inside }.
				format.json {render json: @record.errors, status: :unprocessable_entity}
                                                                           ^
app/controllers/semesters_controller.rb:76:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
			end
^^^
app/controllers/semesters_controller.rb:77:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		end
^^
app/controllers/semesters_controller.rb:78:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	end
^
app/controllers/semesters_controller.rb:80:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	def edit_record
^
app/controllers/semesters_controller.rb:80:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
	def edit_record
^
app/controllers/semesters_controller.rb:81:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		@record = SemesterUser.where(semester_id: params[:id], user_id: params[:user_id]).first
^^
app/controllers/semesters_controller.rb:81:2: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
		@record = SemesterUser.where(semester_id: params[:id], user_id: params[:user_id]).first
 ^
app/controllers/semesters_controller.rb:82:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	end
^
app/controllers/semesters_controller.rb:84:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	def update_record
^
app/controllers/semesters_controller.rb:84:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
	def update_record
^
app/controllers/semesters_controller.rb:84:2: C: Metrics/AbcSize: Assignment Branch Condition size for update_record is too high. [<2, 21, 2> 21.19/17]
	def update_record ...
 ^^^^^^^^^^^^^^^^^
app/controllers/semesters_controller.rb:84:2: C: Metrics/MethodLength: Method has too many lines. [11/10]
	def update_record ...
 ^^^^^^^^^^^^^^^^^
app/controllers/semesters_controller.rb:85:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		@record = SemesterUser.find_by(semester_id: params[:id], user_id: record_params[:user_id])
^^
app/controllers/semesters_controller.rb:85:2: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
		@record = SemesterUser.find_by(semester_id: params[:id], user_id: record_params[:user_id])
 ^
app/controllers/semesters_controller.rb:86:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		puts "===record_params[:paid_dues]===", record_params[:paid_dues]
^^
app/controllers/semesters_controller.rb:86:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
		puts "===record_params[:paid_dues]===", record_params[:paid_dues]
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/semesters_controller.rb:87:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		respond_to do |format|
^^
app/controllers/semesters_controller.rb:88:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
			if @record.update(record_params)
^^^
app/controllers/semesters_controller.rb:88:3: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
			if @record.update(record_params)
  ^
app/controllers/semesters_controller.rb:90:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
				format.html {redirect_to records_semester_url, notice: "Record was successfully updated."}
^^^^
app/controllers/semesters_controller.rb:90:4: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
				format.html {redirect_to records_semester_url, notice: "Record was successfully updated."}
   ^
app/controllers/semesters_controller.rb:90:18: C: [Correctable] Layout/SpaceInsideBlockBraces: Space missing inside {.
				format.html {redirect_to records_semester_url, notice: "Record was successfully updated."}
                 ^
app/controllers/semesters_controller.rb:90:60: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
				format.html {redirect_to records_semester_url, notice: "Record was successfully updated."}
                                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/semesters_controller.rb:90:94: C: [Correctable] Layout/SpaceInsideBlockBraces: Space missing inside }.
				format.html {redirect_to records_semester_url, notice: "Record was successfully updated."}
                                                                                             ^
app/controllers/semesters_controller.rb:91:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
				format.json {render :show, status: :ok, location: @record}
^^^^
app/controllers/semesters_controller.rb:91:18: C: [Correctable] Layout/SpaceInsideBlockBraces: Space missing inside {.
				format.json {render :show, status: :ok, location: @record}
                 ^
app/controllers/semesters_controller.rb:91:62: C: [Correctable] Layout/SpaceInsideBlockBraces: Space missing inside }.
				format.json {render :show, status: :ok, location: @record}
                                                             ^
app/controllers/semesters_controller.rb:92:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
			else
^^^
app/controllers/semesters_controller.rb:93:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
				format.html {render :new_record, status: :unprocessable_entity}
^^^^
app/controllers/semesters_controller.rb:93:4: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
				format.html {render :new_record, status: :unprocessable_entity}
   ^
app/controllers/semesters_controller.rb:93:18: C: [Correctable] Layout/SpaceInsideBlockBraces: Space missing inside {.
				format.html {render :new_record, status: :unprocessable_entity}
                 ^
app/controllers/semesters_controller.rb:93:67: C: [Correctable] Layout/SpaceInsideBlockBraces: Space missing inside }.
				format.html {render :new_record, status: :unprocessable_entity}
                                                                  ^
app/controllers/semesters_controller.rb:94:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
				format.json {render json: @record.errors, status: :unprocessable_entity}
^^^^
app/controllers/semesters_controller.rb:94:18: C: [Correctable] Layout/SpaceInsideBlockBraces: Space missing inside {.
				format.json {render json: @record.errors, status: :unprocessable_entity}
                 ^
app/controllers/semesters_controller.rb:94:76: C: [Correctable] Layout/SpaceInsideBlockBraces: Space missing inside }.
				format.json {render json: @record.errors, status: :unprocessable_entity}
                                                                           ^
app/controllers/semesters_controller.rb:95:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
			end
^^^
app/controllers/semesters_controller.rb:96:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		end
^^
app/controllers/semesters_controller.rb:97:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	end
^
app/controllers/semesters_controller.rb:99:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	def destroy_record
^
app/controllers/semesters_controller.rb:99:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
	def destroy_record
^
app/controllers/semesters_controller.rb:100:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		@record = SemesterUser.find_by(semester_id: params[:id], user_id: params[:user_id])
^^
app/controllers/semesters_controller.rb:100:2: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
		@record = SemesterUser.find_by(semester_id: params[:id], user_id: params[:user_id])
 ^
app/controllers/semesters_controller.rb:101:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		@record.destroy
^^
app/controllers/semesters_controller.rb:102:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		respond_to do |format|
^^
app/controllers/semesters_controller.rb:103:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
			format.html {redirect_to records_semester_url, notice: "Record was successfully destroyed."}
^^^
app/controllers/semesters_controller.rb:103:3: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
			format.html {redirect_to records_semester_url, notice: "Record was successfully destroyed."}
  ^
app/controllers/semesters_controller.rb:103:17: C: [Correctable] Layout/SpaceInsideBlockBraces: Space missing inside {.
			format.html {redirect_to records_semester_url, notice: "Record was successfully destroyed."}
                ^
app/controllers/semesters_controller.rb:103:59: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
			format.html {redirect_to records_semester_url, notice: "Record was successfully destroyed."}
                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/semesters_controller.rb:103:95: C: [Correctable] Layout/SpaceInsideBlockBraces: Space missing inside }.
			format.html {redirect_to records_semester_url, notice: "Record was successfully destroyed."}
                                                                                              ^
app/controllers/semesters_controller.rb:104:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
			format.json {head :no_content}
^^^
app/controllers/semesters_controller.rb:104:17: C: [Correctable] Layout/SpaceInsideBlockBraces: Space missing inside {.
			format.json {head :no_content}
                ^
app/controllers/semesters_controller.rb:104:33: C: [Correctable] Layout/SpaceInsideBlockBraces: Space missing inside }.
			format.json {head :no_content}
                                ^
app/controllers/semesters_controller.rb:105:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		end
^^
app/controllers/semesters_controller.rb:106:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	end
^
app/controllers/semesters_controller.rb:108:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	private
^
app/controllers/semesters_controller.rb:108:2: C: [Correctable] Layout/AccessModifierIndentation: Indent access modifiers like private.
	private
 ^^^^^^^
app/controllers/semesters_controller.rb:108:2: C: [Correctable] Layout/EmptyLinesAroundAccessModifier: Keep a blank line before and after private.
	private
 ^^^^^^^
app/controllers/semesters_controller.rb:109:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		def semester_params
^^
app/controllers/semesters_controller.rb:109:3: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
		def semester_params ...
  ^^^^^^^^^^^^^^^^^^^
app/controllers/semesters_controller.rb:110:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
			params.require(:semester).permit(:name,:start,:end,:duescost)
^^^
app/controllers/semesters_controller.rb:110:3: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
			params.require(:semester).permit(:name,:start,:end,:duescost)
  ^
app/controllers/semesters_controller.rb:110:42: C: [Correctable] Layout/SpaceAfterComma: Space missing after comma.
			params.require(:semester).permit(:name,:start,:end,:duescost)
                                         ^
app/controllers/semesters_controller.rb:110:49: C: [Correctable] Layout/SpaceAfterComma: Space missing after comma.
			params.require(:semester).permit(:name,:start,:end,:duescost)
                                                ^
app/controllers/semesters_controller.rb:110:54: C: [Correctable] Layout/SpaceAfterComma: Space missing after comma.
			params.require(:semester).permit(:name,:start,:end,:duescost)
                                                     ^
app/controllers/semesters_controller.rb:111:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		end
^^
app/controllers/semesters_controller.rb:112:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		def record_params
^^
app/controllers/semesters_controller.rb:112:3: C: [Correctable] Layout/EmptyLineBetweenDefs: Expected 1 empty line between method definitions; found 0.
		def record_params
  ^^^^^^^^^^^^^^^^^
app/controllers/semesters_controller.rb:112:3: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
		def record_params ...
  ^^^^^^^^^^^^^^^^^
app/controllers/semesters_controller.rb:113:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
			params.require(:semester_user).permit(:semester_id,:user_id,:paid_dues)
^^^
app/controllers/semesters_controller.rb:113:3: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
			params.require(:semester_user).permit(:semester_id,:user_id,:paid_dues)
  ^
app/controllers/semesters_controller.rb:113:54: C: [Correctable] Layout/SpaceAfterComma: Space missing after comma.
			params.require(:semester_user).permit(:semester_id,:user_id,:paid_dues)
                                                     ^
app/controllers/semesters_controller.rb:113:63: C: [Correctable] Layout/SpaceAfterComma: Space missing after comma.
			params.require(:semester_user).permit(:semester_id,:user_id,:paid_dues)
                                                              ^
app/controllers/semesters_controller.rb:114:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		end
^^
app/controllers/semesters_controller.rb:115:1: C: [Correctable] Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body end.
app/controllers/users/omniauth_callbacks_controller.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class Users::OmniauthCallbacksController.
class Users::OmniauthCallbacksController < Devise::OmniauthCallbacksController
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/users/omniauth_callbacks_controller.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class Users::OmniauthCallbacksController < Devise::OmniauthCallbacksController
^
app/controllers/users/omniauth_callbacks_controller.rb:1:7: C: [Correctable] Style/ClassAndModuleChildren: Use nested module/class definitions instead of compact style.
class Users::OmniauthCallbacksController < Devise::OmniauthCallbacksController
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/users/omniauth_callbacks_controller.rb:2:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def google_oauth2
^^^^
app/controllers/users/omniauth_callbacks_controller.rb:2:5: C: Metrics/AbcSize: Assignment Branch Condition size for google_oauth2 is too high. [<7, 15, 9> 18.84/17]
    def google_oauth2 ...
    ^^^^^^^^^^^^^^^^^
app/controllers/users/omniauth_callbacks_controller.rb:2:5: C: Metrics/MethodLength: Method has too many lines. [14/10]
    def google_oauth2 ...
    ^^^^^^^^^^^^^^^^^
app/controllers/users/omniauth_callbacks_controller.rb:5:5: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
        begin
    ^^^^
app/controllers/users/omniauth_callbacks_controller.rb:7:9: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
            role = User.find_by(email: from_google_params[:email]).role
        ^^^^
app/controllers/users/omniauth_callbacks_controller.rb:8:13: C: [Correctable] Style/CaseLikeIf: Convert if-elsif to case-when.
            if role == "admin" || role == "president" || role == "treasurer" ...
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/users/omniauth_callbacks_controller.rb:8:16: C: [Correctable] Style/MultipleComparison: Avoid comparing a variable with multiple items in a conditional, use Array#include? instead.
            if role == "admin" || role == "president" || role == "treasurer"
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/users/omniauth_callbacks_controller.rb:8:24: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            if role == "admin" || role == "president" || role == "treasurer"
                       ^^^^^^^
app/controllers/users/omniauth_callbacks_controller.rb:8:43: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            if role == "admin" || role == "president" || role == "treasurer"
                                          ^^^^^^^^^^^
app/controllers/users/omniauth_callbacks_controller.rb:8:66: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            if role == "admin" || role == "president" || role == "treasurer"
                                                                 ^^^^^^^^^^^
app/controllers/users/omniauth_callbacks_controller.rb:9:13: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
                @user = User.from_google_admin(from_google_params)
            ^^^^
app/controllers/users/omniauth_callbacks_controller.rb:10:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/users/omniauth_callbacks_controller.rb:11:27: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            elsif role == "member"
                          ^^^^^^^^
app/controllers/users/omniauth_callbacks_controller.rb:12:13: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
                @user = User.from_google_member(from_google_params)
            ^^^^
app/controllers/users/omniauth_callbacks_controller.rb:14:33: W: Lint/UselessAssignment: Useless assignment to variable - e.
        rescue StandardError => e
                                ^
app/controllers/users/omniauth_callbacks_controller.rb:15:9: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
            role = "member"
        ^^^^
app/controllers/users/omniauth_callbacks_controller.rb:15:20: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            role = "member"
                   ^^^^^^^^
app/controllers/users/omniauth_callbacks_controller.rb:20:121: C: [Correctable] Layout/LineLength: Line is too long. [126/120]
        flash[:success] = t 'devise.omniauth_callbacks.success', kind: 'Google', reason: "Successfully signed in as a #{role}"
                                                                                                                        ^^^^^^
app/controllers/users/omniauth_callbacks_controller.rb:23:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/users/omniauth_callbacks_controller.rb:25:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/users/omniauth_callbacks_controller.rb:26:5: C: [Correctable] Layout/AccessModifierIndentation: Indent access modifiers like protected.
    protected
    ^^^^^^^^^
app/controllers/users/omniauth_callbacks_controller.rb:28:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def stored_location_for(resource)
^^^^
app/controllers/users/omniauth_callbacks_controller.rb:29:5: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
        if resource.is_a?(User) && resource.role == 'admin'
    ^^^^
app/controllers/users/omniauth_callbacks_controller.rb:29:9: C: Style/GuardClause: Use a guard clause (return user_path(resource) if resource.is_a?(User) && resource.role == 'admin') instead of wrapping the code inside a conditional expression.
        if resource.is_a?(User) && resource.role == 'admin'
        ^^
app/controllers/users/omniauth_callbacks_controller.rb:30:9: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
            return user_path(resource)
        ^^^^
app/controllers/users/omniauth_callbacks_controller.rb:32:9: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
            return user_path(resource)
        ^^^^
app/controllers/users/omniauth_callbacks_controller.rb:33:9: C: [Correctable] Layout/EmptyLineAfterGuardClause: Add empty line after guard clause.
        end
        ^^^
app/controllers/users/omniauth_callbacks_controller.rb:34:24: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
        super(resource) 
                       ^
app/controllers/users/omniauth_callbacks_controller.rb:37:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def after_omniauth_failure_path_for(_scope)
^^^^
app/controllers/users/omniauth_callbacks_controller.rb:38:5: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
        new_user_session_path
    ^^^^
app/controllers/users/omniauth_callbacks_controller.rb:40:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/users/omniauth_callbacks_controller.rb:41:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def after_sign_in_path_for(resource_or_scope)
^^^^
app/controllers/users/omniauth_callbacks_controller.rb:42:5: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
        stored_location_for(resource_or_scope) || root_path
    ^^^^
app/controllers/users/omniauth_callbacks_controller.rb:44:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/users/omniauth_callbacks_controller.rb:45:5: C: [Correctable] Layout/AccessModifierIndentation: Indent access modifiers like private.
    private
    ^^^^^^^
app/controllers/users/omniauth_callbacks_controller.rb:46:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/users/omniauth_callbacks_controller.rb:47:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def from_google_params
^^^^
app/controllers/users/omniauth_callbacks_controller.rb:48:5: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
        @from_google_params ||= {
    ^^^^
app/controllers/users/omniauth_callbacks_controller.rb:49:13: C: [Correctable] Layout/FirstHashElementIndentation: Use 2 spaces for indentation in a hash, relative to the start of the line where the left curly brace is.
            uid: auth.uid,
            ^^^^^^^^^^^^^
app/controllers/users/omniauth_callbacks_controller.rb:55:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/users/omniauth_callbacks_controller.rb:56:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def auth
^^^^
app/controllers/users/omniauth_callbacks_controller.rb:57:5: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
        @auth ||= request.env['omniauth.auth']
    ^^^^
app/controllers/users/omniauth_callbacks_controller.rb:59:4: C: [Correctable] Layout/TrailingEmptyLines: Final newline missing.
end
   
app/controllers/users/sessions_controller.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class Users::SessionsController.
class Users::SessionsController < Devise::SessionsController
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/users/sessions_controller.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class Users::SessionsController < Devise::SessionsController
^
app/controllers/users/sessions_controller.rb:1:7: C: [Correctable] Style/ClassAndModuleChildren: Use nested module/class definitions instead of compact style.
class Users::SessionsController < Devise::SessionsController
      ^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/users/sessions_controller.rb:2:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def after_sign_out_path_for(_resource_or_scope)
^^^^
app/controllers/users/sessions_controller.rb:3:5: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
        root_path
    ^^^^
app/controllers/users/sessions_controller.rb:6:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def after_sign_in_path_for(resource_or_scope)
^^^^
app/controllers/users/sessions_controller.rb:7:5: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
        stored_location_for(resource_or_scope) || root_path
    ^^^^
app/controllers/users/sessions_controller.rb:9:4: C: [Correctable] Layout/TrailingEmptyLines: Final newline missing.
end
   
app/controllers/users_controller.rb:1:1: C: Metrics/ClassLength: Class has too many lines. [127/100]
class UsersController < ApplicationController ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/users_controller.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class UsersController.
class UsersController < ApplicationController
^^^^^^^^^^^^^^^^^^^^^
app/controllers/users_controller.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class UsersController < ApplicationController
^
app/controllers/users_controller.rb:3:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/users_controller.rb:4:11: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  require "rubygems"
          ^^^^^^^^^^
app/controllers/users_controller.rb:5:11: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  require "braintree"
          ^^^^^^^^^^^
app/controllers/users_controller.rb:6:121: C: Layout/LineLength: Line is too long. [141/120]
  # Before accessing any user routes, devise will check to see if the user is logged in. If not, they will be redirected to the sign in page.
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^
app/controllers/users_controller.rb:9:46: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  Braintree::Configuration.merchant_id = ENV["MERCHANT_ID"]
                                             ^^^^^^^^^^^^^
app/controllers/users_controller.rb:10:45: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  Braintree::Configuration.public_key = ENV["PUBLIC_KEY"]
                                            ^^^^^^^^^^^^
app/controllers/users_controller.rb:11:46: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  Braintree::Configuration.private_key = ENV["PRIVATE_KEY"]
                                             ^^^^^^^^^^^^^
app/controllers/users_controller.rb:19:3: C: [Correctable] Layout/EmptyLineBetweenDefs: Expected 1 empty line between method definitions; found 0.
  def show
  ^^^^^^^^
app/controllers/users_controller.rb:19:3: C: Metrics/AbcSize: Assignment Branch Condition size for show is too high. [<1, 22, 2> 22.11/17]
  def show ...
  ^^^^^^^^
app/controllers/users_controller.rb:22:8: W: Lint/FloatComparison: Avoid (in)equality comparisons of floats as they are unreliable.
    if current_user.id.to_f != params[:id].to_f
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/users_controller.rb:23:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      p "redirect"
        ^^^^^^^^^^
app/controllers/users_controller.rb:29:3: C: [Correctable] Layout/EmptyLineBetweenDefs: Expected 1 empty line between method definitions; found 0.
  def new
  ^^^^^^^
app/controllers/users_controller.rb:33:3: C: [Correctable] Layout/EmptyLineBetweenDefs: Expected 1 empty line between method definitions; found 0.
  def edit
  ^^^^^^^^
app/controllers/users_controller.rb:36:10: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    puts "edit test"
         ^^^^^^^^^^^
app/controllers/users_controller.rb:42:3: C: [Correctable] Layout/EmptyLineBetweenDefs: Expected 1 empty line between method definitions; found 0.
  def update
  ^^^^^^^^^^
app/controllers/users_controller.rb:42:3: C: Metrics/AbcSize: Assignment Branch Condition size for update is too high. [<9, 73, 14> 74.87/17]
  def update ...
  ^^^^^^^^^^
app/controllers/users_controller.rb:42:3: C: Metrics/CyclomaticComplexity: Cyclomatic complexity for update is too high. [10/7]
  def update ...
  ^^^^^^^^^^
app/controllers/users_controller.rb:42:3: C: Metrics/MethodLength: Method has too many lines. [38/10]
  def update ...
  ^^^^^^^^^^
app/controllers/users_controller.rb:42:3: C: Metrics/PerceivedComplexity: Perceived complexity for update is too high. [14/8]
  def update ...
  ^^^^^^^^^^
app/controllers/users_controller.rb:44:5: C: Metrics/BlockLength: Block has too many lines. [35/25]
    respond_to do |format| ...
    ^^^^^^^^^^^^^^^^^^^^^^
app/controllers/users_controller.rb:64:33: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            flash.now[:error] = "You have already attended this event."
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/users_controller.rb:65:70: C: [Correctable] Layout/ExtraSpacing: Unnecessary spacing detected.
            format.html { render :edit, status: :unprocessable_entity  }
                                                                     ^
app/controllers/users_controller.rb:70:44: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            @event_user = EventUser.create(:user_id => @user.id, :event_id => @event.id, :attended => true)
                                           ^^^^^^^^^^^
app/controllers/users_controller.rb:70:66: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            @event_user = EventUser.create(:user_id => @user.id, :event_id => @event.id, :attended => true)
                                                                 ^^^^^^^^^^^^
app/controllers/users_controller.rb:70:90: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            @event_user = EventUser.create(:user_id => @user.id, :event_id => @event.id, :attended => true)
                                                                                         ^^^^^^^^^^^^
app/controllers/users_controller.rb:72:13: C: Metrics/BlockNesting: Avoid more than 3 levels of block nesting.
            if @user.save && @event.save && @event_user.save ...
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/users_controller.rb:73:77: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
              format.html { redirect_to user_path(current_user.id), notice: "Attendance was successfully updated." }
                                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/users_controller.rb:81:31: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          flash.now[:error] = "This event is closed."
                              ^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/users_controller.rb:82:68: C: [Correctable] Layout/ExtraSpacing: Unnecessary spacing detected.
          format.html { render :edit, status: :unprocessable_entity  }
                                                                   ^
app/controllers/users_controller.rb:86:29: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        flash.now[:error] = "Invalid password"
                            ^^^^^^^^^^^^^^^^^^
app/controllers/users_controller.rb:87:66: C: [Correctable] Layout/ExtraSpacing: Unnecessary spacing detected.
        format.html { render :edit, status: :unprocessable_entity  }
                                                                 ^
app/controllers/users_controller.rb:93:121: C: Layout/LineLength: Line is too long. [208/120]
  # This method displays the payment portal for paying dues at the route /user/:id/payment. If the user has already paid their dues, this route will redirect the user to the thank you page with their receipt.
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/users_controller.rb:94:3: C: [Correctable] Layout/EmptyLineBetweenDefs: Expected 1 empty line between method definitions; found 0.
  def payment
  ^^^^^^^^^^^
app/controllers/users_controller.rb:96:5: W: Lint/UselessAssignment: Useless assignment to variable - current_date. Did you mean current_user?
    current_date = Date.today
    ^^^^^^^^^^^^
app/controllers/users_controller.rb:97:5: C: [Correctable] Style/IfUnlessModifier: Favor modifier if usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
    if @user[:has_paid_dues] == true
    ^^
app/controllers/users_controller.rb:103:121: C: Layout/LineLength: Line is too long. [253/120]
  # This method processes the transaction from the /user/:id/payment route. If the transaction is successful, attributes in the user model will be updated to store basic, non invasive information to provide the user with a reciept on the thank you page.
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/users_controller.rb:104:121: C: Layout/LineLength: Line is too long. [146/120]
  # In the future, this method will map hasPaid values to individual semesters so that when a new semeseter starts, users will have to repay dues.
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/users_controller.rb:105:3: C: [Correctable] Layout/EmptyLineBetweenDefs: Expected 1 empty line between method definitions; found 0.
  def checkout
  ^^^^^^^^^^^^
app/controllers/users_controller.rb:117:5: C: [Correctable] Layout/CommentIndentation: Incorrect indentation detected (column 4 instead of 6).
    # if result.success?
    ^^^^^^^^^^^^^^^^^^^^
app/controllers/users_controller.rb:122:7: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
      @user.update_column("has_paid_dues", true);
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/users_controller.rb:122:27: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      @user.update_column("has_paid_dues", true);
                          ^^^^^^^^^^^^^^^
app/controllers/users_controller.rb:122:49: C: [Correctable] Style/Semicolon: Do not use semicolons to terminate expressions.
      @user.update_column("has_paid_dues", true);
                                                ^
app/controllers/users_controller.rb:130:7: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
      redirect_to(thank_you_user_path(current_user.id))
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/users_controller.rb:131:5: C: [Correctable] Layout/CommentIndentation: Incorrect indentation detected (column 4 instead of 6).
    # else
    ^^^^^^
app/controllers/users_controller.rb:132:7: C: [Correctable] Layout/CommentIndentation: Incorrect indentation detected (column 6 instead of 4).
      # TODO: Handle error
      ^^^^^^^^^^^^^^^^^^^^
app/controllers/users_controller.rb:137:3: C: [Correctable] Layout/EmptyLineBetweenDefs: Expected 1 empty line between method definitions; found 0.
  def thank_you
  ^^^^^^^^^^^^^
app/controllers/users_controller.rb:139:5: C: Style/GuardClause: Use a guard clause (return unless @user[:has_paid_dues] == false) instead of wrapping the code inside a conditional expression.
    if @user[:has_paid_dues] == false
    ^^
app/controllers/users_controller.rb:139:5: C: [Correctable] Style/IfUnlessModifier: Favor modifier if usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
    if @user[:has_paid_dues] == false
    ^^
app/controllers/users_controller.rb:145:3: C: [Correctable] Layout/EmptyLineBetweenDefs: Expected 1 empty line between method definitions; found 0.
  def meetings
  ^^^^^^^^^^^^
app/controllers/users_controller.rb:151:3: C: [Correctable] Layout/EmptyLineBetweenDefs: Expected 1 empty line between method definitions; found 0.
  def help
  ^^^^^^^^
app/controllers/users_controller.rb:157:5: C: [Correctable] Style/CaseLikeIf: Convert if-elsif to case-when.
    if @user.role == 'member' ...
    ^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/users_controller.rb:161:10: W: [Correctable] Lint/ElseLayout: Odd else layout detected. Did you mean to use elsif?
    else @user.role == 'treasurer'
         ^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/users_controller.rb:161:21: W: Lint/Void: Operator == used in void context.
    else @user.role == 'treasurer'
                    ^^
app/controllers/users_controller.rb:162:7: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
      @user.role = 'president'
      ^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/users_controller.rb:170:5: C: [Correctable] Style/CaseLikeIf: Convert if-elsif to case-when.
    if @user.role == 'president' ...
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/users_controller.rb:170:5: C: [Correctable] Style/ConditionalAssignment: Use the return of the conditional for variable assignment and comparison.
    if @user.role == 'president' ...
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/application_helper.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for module ApplicationHelper.
module ApplicationHelper
^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/application_helper.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
module ApplicationHelper
^
app/helpers/contact_form_helper.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for module ContactFormHelper.
module ContactFormHelper
^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/contact_form_helper.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
module ContactFormHelper
^
app/helpers/payment_accounts_helper.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for module PaymentAccountsHelper.
module PaymentAccountsHelper
^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/payment_accounts_helper.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
module PaymentAccountsHelper
^
app/helpers/semesters_helper.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for module SemestersHelper.
module SemestersHelper
^^^^^^^^^^^^^^^^^^^^^^
app/helpers/semesters_helper.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
module SemestersHelper
^
app/jobs/application_job.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class ApplicationJob < ActiveJob::Base
^
app/mailers/application_mailer.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class ApplicationMailer < ActionMailer::Base
^
app/mailers/event_mailer.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class EventMailer.
class EventMailer < ApplicationMailer
^^^^^^^^^^^^^^^^^
app/mailers/event_mailer.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class EventMailer < ApplicationMailer
^
app/mailers/event_mailer.rb:2:1: C: [Correctable] Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body beginning.
app/mailers/event_mailer.rb:3:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	def test_email(user)
^
app/mailers/event_mailer.rb:3:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
	def test_email(user)
^
app/mailers/event_mailer.rb:4:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		mail(to: user.email, subject: "Test Email", body: "Test email.")
^^
app/mailers/event_mailer.rb:4:2: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
		mail(to: user.email, subject: "Test Email", body: "Test email.")
 ^
app/mailers/event_mailer.rb:4:33: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
		mail(to: user.email, subject: "Test Email", body: "Test email.")
                                ^^^^^^^^^^^^
app/mailers/event_mailer.rb:4:53: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
		mail(to: user.email, subject: "Test Email", body: "Test email.")
                                                    ^^^^^^^^^^^^^
app/mailers/event_mailer.rb:5:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	end
^
app/mailers/event_mailer.rb:7:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	def event_notification
^
app/mailers/event_mailer.rb:7:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
	def event_notification
^
app/mailers/event_mailer.rb:8:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		@user = params[:user]
^^
app/mailers/event_mailer.rb:8:2: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
		@user = params[:user]
 ^
app/mailers/event_mailer.rb:9:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		mail(to: @user.email, subject: params[:subject], body: params[:body])
^^
app/mailers/event_mailer.rb:10:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	end
^
app/mailers/event_mailer.rb:11:1: C: [Correctable] Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body end.
app/models/about_us_page.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class AboutUsPage < ApplicationRecord
^
app/models/about_us_page.rb:2:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	has_and_belongs_to_many :officer_bio
^
app/models/about_us_page.rb:2:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
	has_and_belongs_to_many :officer_bio
^
app/models/application_record.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class ApplicationRecord.
class ApplicationRecord < ActiveRecord::Base
^^^^^^^^^^^^^^^^^^^^^^^
app/models/application_record.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class ApplicationRecord < ActiveRecord::Base
^
app/models/contact_form.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class ContactForm < ApplicationRecord
^
app/models/contact_form.rb:2:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	validates :message, presence: true
^
app/models/contact_form.rb:2:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
	validates :message, presence: true
^
app/models/event.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class Event < ApplicationRecord
^
app/models/event.rb:2:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    validates :name, presence: true
^^^^
app/models/event.rb:4:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	has_many :event_user #creates relationship with event-user join table
^
app/models/event.rb:4:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
	has_many :event_user #creates relationship with event-user join table
^
app/models/event.rb:4:2: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
	has_many :event_user #creates relationship with event-user join table
 ^^^^^^^^^^^^^^^^^^^^
app/models/event.rb:4:23: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
	has_many :event_user #creates relationship with event-user join table
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/event_user.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class EventUser < ApplicationRecord
^
app/models/event_user.rb:2:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	belongs_to :event
^
app/models/event_user.rb:2:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
	belongs_to :event
^
app/models/event_user.rb:3:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	belongs_to :user
^
app/models/event_user.rb:3:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
	belongs_to :user
^
app/models/home_page.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
class HomePage < ApplicationRecord ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/home_page.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class HomePage < ApplicationRecord
^
app/models/home_page.rb:2:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    validates :heading, presence: true
^^^^
app/models/home_page.rb:3:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    validates :summary, presence: true
^^^^
app/models/home_page.rb:4:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    has_one_attached :slider_image_1
^^^^
app/models/home_page.rb:4:22: C: Naming/VariableNumber: Use normalcase for symbol numbers.
    has_one_attached :slider_image_1
                     ^^^^^^^^^^^^^^^
app/models/home_page.rb:5:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    has_one_attached :slider_image_2
^^^^
app/models/home_page.rb:5:22: C: Naming/VariableNumber: Use normalcase for symbol numbers.
    has_one_attached :slider_image_2
                     ^^^^^^^^^^^^^^^
app/models/home_page.rb:6:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    has_one_attached :slider_image_3
^^^^
app/models/home_page.rb:6:22: C: Naming/VariableNumber: Use normalcase for symbol numbers.
    has_one_attached :slider_image_3
                     ^^^^^^^^^^^^^^^
app/models/home_page.rb:7:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    has_one_attached :slider_image_4
^^^^
app/models/home_page.rb:7:22: C: Naming/VariableNumber: Use normalcase for symbol numbers.
    has_one_attached :slider_image_4
                     ^^^^^^^^^^^^^^^
app/models/home_page.rb:8:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    has_one_attached :slider_image_5
^^^^
app/models/home_page.rb:8:22: C: Naming/VariableNumber: Use normalcase for symbol numbers.
    has_one_attached :slider_image_5
                     ^^^^^^^^^^^^^^^
app/models/officer_bio.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class OfficerBio < ApplicationRecord
^
app/models/officer_bio.rb:2:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	belongs_to :user
^
app/models/officer_bio.rb:2:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
	belongs_to :user
^
app/models/officer_bio.rb:3:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	has_and_belongs_to_many :about_us_page
^
app/models/officer_bio.rb:3:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
	has_and_belongs_to_many :about_us_page
^
app/models/payment_account.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class PaymentAccount < ApplicationRecord
^
app/models/payment_account.rb:2:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	validates :internal_name, presence: true
^
app/models/payment_account.rb:2:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
	validates :internal_name, presence: true
^
app/models/payment_account.rb:3:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	validates :payment_address, presence: true
^
app/models/payment_account.rb:3:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
	validates :payment_address, presence: true
^
app/models/semester.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class Semester < ApplicationRecord
^
app/models/semester.rb:2:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	has_many :semester_user #creates relationship with semester-user join table
^
app/models/semester.rb:2:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
	has_many :semester_user #creates relationship with semester-user join table
^
app/models/semester.rb:2:26: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
	has_many :semester_user #creates relationship with semester-user join table
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/semester.rb:3:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	validates :name, presence: true
^
app/models/semester.rb:3:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
	validates :name, presence: true
^
app/models/semester.rb:4:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	validates :start, presence: true
^
app/models/semester.rb:4:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
	validates :start, presence: true
^
app/models/semester.rb:5:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	validates :end, presence: true
^
app/models/semester.rb:5:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
	validates :end, presence: true
^
app/models/semester_user.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class SemesterUser < ApplicationRecord
^
app/models/semester_user.rb:2:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	belongs_to :semester
^
app/models/semester_user.rb:2:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
	belongs_to :semester
^
app/models/semester_user.rb:3:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	belongs_to :user
^
app/models/semester_user.rb:3:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
	belongs_to :user
^
app/models/semester_user.rb:5:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	validates_uniqueness_of :semester_id, scope: :user_id
^
app/models/semester_user.rb:5:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
	validates_uniqueness_of :semester_id, scope: :user_id
^
app/models/semester_user.rb:6:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	validates_uniqueness_of :user_id, scope: :semester_id
^
app/models/semester_user.rb:6:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
	validates_uniqueness_of :user_id, scope: :semester_id
^
app/models/user.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class User.
class User < ApplicationRecord
^^^^^^^^^^
app/models/user.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class User < ApplicationRecord
^
app/models/user.rb:6:24: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
  has_many :event_user #creates relationship with event-user join table
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/user.rb:7:27: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
  has_many :semester_user #creates relationship with semester-user join table
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/user.rb:18:3: C: [Correctable] Layout/EmptyLinesAroundAccessModifier: Keep a blank line before and after private.
  private
  ^^^^^^^
bin/bundle:11:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "rubygems"
        ^^^^^^^^^^
bin/bundle:17:22: C: [Correctable] Style/SpecialGlobalVars: Prefer $PROGRAM_NAME over $0.
    File.expand_path($0) == File.expand_path(__FILE__)
                     ^^
bin/bundle:21:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    ENV["BUNDLER_VERSION"]
        ^^^^^^^^^^^^^^^^^
bin/bundle:24:3: C: Metrics/CyclomaticComplexity: Cyclomatic complexity for cli_arg_version is too high. [9/7]
  def cli_arg_version ...
  ^^^^^^^^^^^^^^^^^^^
bin/bundle:24:3: C: Metrics/MethodLength: Method has too many lines. [13/10]
  def cli_arg_version ...
  ^^^^^^^^^^^^^^^^^^^
bin/bundle:24:3: C: Metrics/PerceivedComplexity: Perceived complexity for cli_arg_version is too high. [9/8]
  def cli_arg_version ...
  ^^^^^^^^^^^^^^^^^^^
bin/bundle:26:5: C: [Correctable] Layout/EmptyLineAfterGuardClause: Add empty line after guard clause.
    return unless "update".start_with?(ARGV.first || " ") # must be running `bundle update`
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
bin/bundle:26:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    return unless "update".start_with?(ARGV.first || " ") # must be running `bundle update`
                  ^^^^^^^^
bin/bundle:26:54: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    return unless "update".start_with?(ARGV.first || " ") # must be running `bundle update`
                                                     ^^^
bin/bundle:30:7: C: [Correctable] Style/IfUnlessModifier: Favor modifier if usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
      if update_index && update_index.succ == i && a =~ Gem::Version::ANCHORED_VERSION_PATTERN
      ^^
bin/bundle:33:7: C: [Correctable] Layout/EmptyLineAfterGuardClause: Add empty line after guard clause.
      next unless a =~ /\A--bundler(?:[= ](#{Gem::Version::VERSION_PATTERN}))?\z/
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
bin/bundle:34:25: C: [Correctable] Style/PerlBackrefs: Prefer Regexp.last_match(1) over $1.
      bundler_version = $1
                        ^^
bin/bundle:41:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    gemfile = ENV["BUNDLE_GEMFILE"]
                  ^^^^^^^^^^^^^^^^
bin/bundle:44:10: C: [Correctable] Style/ExpandPathArguments: Use expand_path('../Gemfile', __dir__) instead of expand_path('../../Gemfile', __FILE__).
    File.expand_path("../../Gemfile", __FILE__)
         ^^^^^^^^^^^
bin/bundle:44:22: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    File.expand_path("../../Gemfile", __FILE__)
                     ^^^^^^^^^^^^^^^
bin/bundle:50:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      when "gems.rb" then gemfile.sub(/\.rb$/, gemfile)
           ^^^^^^^^^
bin/bundle:57:5: C: [Correctable] Layout/EmptyLineAfterGuardClause: Add empty line after guard clause.
    return unless File.file?(lockfile)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
bin/bundle:59:5: C: [Correctable] Layout/EmptyLineAfterGuardClause: Add empty line after guard clause.
    return unless lockfile_contents =~ /\n\nBUNDLED WITH\n\s{2,}(#{Gem::Version::VERSION_PATTERN})\n/
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
bin/bundle:66:9: C: [Correctable] Layout/MultilineOperationIndentation: Align the operands of an expression in an assignment spanning multiple lines.
        bundler_requirement_for(lockfile_version)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
bin/bundle:76:81: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    return requirement unless Gem::Version.new(Gem::VERSION) < Gem::Version.new("2.7.0")
                                                                                ^^^^^^^
bin/bundle:78:20: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    requirement += ".a" if bundler_gem_version.prerelease?
                   ^^^^
bin/bundle:84:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    ENV["BUNDLE_GEMFILE"] ||= gemfile
        ^^^^^^^^^^^^^^^^
bin/bundle:91:11: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      gem "bundler", bundler_requirement
          ^^^^^^^^^
bin/bundle:93:5: C: [Correctable] Layout/EmptyLineAfterGuardClause: Add empty line after guard clause.
    return if gem_error.nil?
    ^^^^^^^^^^^^^^^^^^^^^^^^
bin/bundle:95:15: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      require "bundler/version"
              ^^^^^^^^^^^^^^^^^
bin/bundle:97:5: C: [Correctable] Layout/EmptyLineAfterGuardClause: Add empty line after guard clause.
    return if require_error.nil? && Gem::Requirement.new(bundler_requirement).satisfied_by?(Gem::Version.new(Bundler::VERSION))
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
bin/bundle:97:12: C: [Correctable] Style/IfUnlessModifier: Modifier form of if makes the line too long.
    return if require_error.nil? && Gem::Requirement.new(bundler_requirement).satisfied_by?(Gem::Version.new(Bundler::VERSION))
           ^^
bin/bundle:97:121: C: Layout/LineLength: Line is too long. [127/120]
    return if require_error.nil? && Gem::Requirement.new(bundler_requirement).satisfied_by?(Gem::Version.new(Bundler::VERSION))
                                                                                                                        ^^^^^^^
bin/bundle:98:121: C: Layout/LineLength: Line is too long. [198/120]
    warn "Activating bundler (#{bundler_requirement}) failed:\n#{gem_error.message}\n\nTo install the version of bundler this project requires, run `gem install bundler -v '#{bundler_requirement}'`"
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
bin/bundle:112:1: C: [Correctable] Style/IfUnlessModifier: Favor modifier if usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
if m.invoked_as_script?
^^
bin/bundle:113:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  load Gem.bin_path("bundler", "bundle")
                    ^^^^^^^^^
bin/bundle:113:32: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  load Gem.bin_path("bundler", "bundle")
                               ^^^^^^^^
bin/rails:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
#!/usr/bin/env ruby
^
bin/rails:2:23: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
load File.expand_path("spring", __dir__)
                      ^^^^^^^^
bin/rails:4:18: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require_relative "../config/boot"
                 ^^^^^^^^^^^^^^^^
bin/rails:5:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "rails/commands"
        ^^^^^^^^^^^^^^^^
bin/rails:6:1: C: [Correctable] Layout/EmptyComment: Source code comment is empty.
#
^
bin/rake:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
#!/usr/bin/env ruby
^
bin/rake:2:23: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
load File.expand_path("spring", __dir__)
                      ^^^^^^^^
bin/rake:3:18: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require_relative "../config/boot"
                 ^^^^^^^^^^^^^^^^
bin/rake:4:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "rake"
        ^^^^^^
bin/rake:6:1: C: [Correctable] Layout/EmptyComment: Source code comment is empty.
#
^
bin/setup:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
#!/usr/bin/env ruby
^
bin/setup:2:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "fileutils"
        ^^^^^^^^^^^
bin/spring:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
#!/usr/bin/env ruby
^
bin/spring:2:31: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
if !defined?(Spring) && [nil, "development", "test"].include?(ENV["RAILS_ENV"])
                              ^^^^^^^^^^^^^
bin/spring:2:46: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
if !defined?(Spring) && [nil, "development", "test"].include?(ENV["RAILS_ENV"])
                                             ^^^^^^
bin/spring:2:67: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
if !defined?(Spring) && [nil, "development", "test"].include?(ENV["RAILS_ENV"])
                                                                  ^^^^^^^^^^^
bin/spring:3:7: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  gem "bundler"
      ^^^^^^^^^
bin/spring:4:11: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  require "bundler"
          ^^^^^^^^^
bin/spring:7:58: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  Bundler.locked_gems&.specs&.find { |spec| spec.name == "spring" }&.tap do |spring|
                                                         ^^^^^^^^
bin/spring:9:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    gem "spring", spring.version
        ^^^^^^^^
bin/spring:10:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    require "spring/binstub"
            ^^^^^^^^^^^^^^^^
bin/webpack:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
#!/usr/bin/env ruby
^
bin/webpack:3:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
ENV["RAILS_ENV"] ||= ENV["RACK_ENV"] || "development"
    ^^^^^^^^^^^
bin/webpack:3:26: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
ENV["RAILS_ENV"] ||= ENV["RACK_ENV"] || "development"
                         ^^^^^^^^^^
bin/webpack:3:41: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
ENV["RAILS_ENV"] ||= ENV["RACK_ENV"] || "development"
                                        ^^^^^^^^^^^^^
bin/webpack:4:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
ENV["NODE_ENV"]  ||= "development"
    ^^^^^^^^^^
bin/webpack:4:22: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
ENV["NODE_ENV"]  ||= "development"
                     ^^^^^^^^^^^^^
bin/webpack:6:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "pathname"
        ^^^^^^^^^^
bin/webpack:7:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
ENV["BUNDLE_GEMFILE"] ||= File.expand_path("../../Gemfile",
    ^^^^^^^^^^^^^^^^
bin/webpack:7:44: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
ENV["BUNDLE_GEMFILE"] ||= File.expand_path("../../Gemfile",
                                           ^^^^^^^^^^^^^^^
bin/webpack:8:3: C: [Correctable] Layout/ArgumentAlignment: Align the arguments of a method call if they span more than one line.
  Pathname.new(__FILE__).realpath)
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
bin/webpack:10:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "bundler/setup"
        ^^^^^^^^^^^^^^^
bin/webpack:12:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "webpacker"
        ^^^^^^^^^^^
bin/webpack:13:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "webpacker/webpack_runner"
        ^^^^^^^^^^^^^^^^^^^^^^^^^^
bin/webpack:15:29: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
APP_ROOT = File.expand_path("..", __dir__)
                            ^^^^
bin/webpack-dev-server:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
#!/usr/bin/env ruby
^
bin/webpack-dev-server:3:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
ENV["RAILS_ENV"] ||= ENV["RACK_ENV"] || "development"
    ^^^^^^^^^^^
bin/webpack-dev-server:3:26: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
ENV["RAILS_ENV"] ||= ENV["RACK_ENV"] || "development"
                         ^^^^^^^^^^
bin/webpack-dev-server:3:41: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
ENV["RAILS_ENV"] ||= ENV["RACK_ENV"] || "development"
                                        ^^^^^^^^^^^^^
bin/webpack-dev-server:4:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
ENV["NODE_ENV"]  ||= "development"
    ^^^^^^^^^^
bin/webpack-dev-server:4:22: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
ENV["NODE_ENV"]  ||= "development"
                     ^^^^^^^^^^^^^
bin/webpack-dev-server:6:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "pathname"
        ^^^^^^^^^^
bin/webpack-dev-server:7:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
ENV["BUNDLE_GEMFILE"] ||= File.expand_path("../../Gemfile",
    ^^^^^^^^^^^^^^^^
bin/webpack-dev-server:7:44: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
ENV["BUNDLE_GEMFILE"] ||= File.expand_path("../../Gemfile",
                                           ^^^^^^^^^^^^^^^
bin/webpack-dev-server:8:3: C: [Correctable] Layout/ArgumentAlignment: Align the arguments of a method call if they span more than one line.
  Pathname.new(__FILE__).realpath)
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
bin/webpack-dev-server:10:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "bundler/setup"
        ^^^^^^^^^^^^^^^
bin/webpack-dev-server:12:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "webpacker"
        ^^^^^^^^^^^
bin/webpack-dev-server:13:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "webpacker/dev_server_runner"
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
bin/webpack-dev-server:15:29: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
APP_ROOT = File.expand_path("..", __dir__)
                            ^^^^
bin/yarn:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
#!/usr/bin/env ruby
^
bin/yarn:4:10: C: [Correctable] Style/InverseMethods: Use reject instead of inverting select.
  yarn = ENV["PATH"].split(File::PATH_SEPARATOR). ...
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
bin/yarn:4:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  yarn = ENV["PATH"].split(File::PATH_SEPARATOR).
             ^^^^^^
bin/yarn:4:49: C: [Correctable] Layout/DotPosition: Place the . on the next line, together with the method name.
  yarn = ENV["PATH"].split(File::PATH_SEPARATOR).
                                                ^
bin/yarn:5:5: C: [Correctable] Layout/MultilineMethodCallIndentation: Align select with ENV["PATH"].split(File::PATH_SEPARATOR). on line 4.
    select { |dir| File.expand_path(dir) != __dir__ }.
    ^^^^^^
bin/yarn:5:54: C: [Correctable] Layout/DotPosition: Place the . on the next line, together with the method name.
    select { |dir| File.expand_path(dir) != __dir__ }.
                                                     ^
bin/yarn:6:5: C: [Correctable] Layout/MultilineMethodCallIndentation: Align product with ENV["PATH"].split(File::PATH_SEPARATOR). on line 4.
    product(["yarn", "yarn.cmd", "yarn.ps1"]).
    ^^^^^^^
bin/yarn:6:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    product(["yarn", "yarn.cmd", "yarn.ps1"]).
             ^^^^^^
bin/yarn:6:22: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    product(["yarn", "yarn.cmd", "yarn.ps1"]).
                     ^^^^^^^^^^
bin/yarn:6:34: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    product(["yarn", "yarn.cmd", "yarn.ps1"]).
                                 ^^^^^^^^^^
bin/yarn:6:46: C: [Correctable] Layout/DotPosition: Place the . on the next line, together with the method name.
    product(["yarn", "yarn.cmd", "yarn.ps1"]).
                                             ^
bin/yarn:7:5: C: [Correctable] Layout/MultilineMethodCallIndentation: Align map with ENV["PATH"].split(File::PATH_SEPARATOR). on line 4.
    map { |dir, file| File.expand_path(file, dir) }.
    ^^^
bin/yarn:7:52: C: [Correctable] Layout/DotPosition: Place the . on the next line, together with the method name.
    map { |dir, file| File.expand_path(file, dir) }.
                                                   ^
bin/yarn:8:5: C: [Correctable] Layout/MultilineMethodCallIndentation: Align find with ENV["PATH"].split(File::PATH_SEPARATOR). on line 4.
    find { |file| File.executable?(file) }
    ^^^^
bin/yarn:14:5: C: [Correctable] Style/StderrPuts: Use warn instead of $stderr.puts to allow such output to be disabled.
    $stderr.puts "Yarn executable was not detected in the system."
    ^^^^^^^^^^^^
bin/yarn:14:18: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    $stderr.puts "Yarn executable was not detected in the system."
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
bin/yarn:15:5: C: [Correctable] Style/StderrPuts: Use warn instead of $stderr.puts to allow such output to be disabled.
    $stderr.puts "Download Yarn at https://yarnpkg.com/en/docs/install"
    ^^^^^^^^^^^^
bin/yarn:15:18: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    $stderr.puts "Download Yarn at https://yarnpkg.com/en/docs/install"
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config.ru:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# This file is used by Rack-based servers to start the application.
^
config.ru:3:18: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require_relative "config/environment"
                 ^^^^^^^^^^^^^^^^^^^^
config/application.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require_relative "boot"
^
config/application.rb:1:18: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require_relative "boot"
                 ^^^^^^
config/application.rb:3:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "rails/all"
        ^^^^^^^^^^^
config/application.rb:10:3: C: Style/Documentation: Missing top-level documentation comment for class CSCE431app::Application.
  class Application < Rails::Application
  ^^^^^^^^^^^^^^^^^
config/boot.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
ENV['BUNDLE_GEMFILE'] ||= File.expand_path('../Gemfile', __dir__)
^
config/boot.rb:3:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "bundler/setup" # Set up gems listed in the Gemfile.
        ^^^^^^^^^^^^^^^
config/boot.rb:4:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "bootsnap/setup" # Speed up boot time by caching expensive operations.
        ^^^^^^^^^^^^^^^^
config/environment.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# Load the Rails application.
^
config/environment.rb:2:18: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require_relative "application"
                 ^^^^^^^^^^^^^
config/environments/development.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require "active_support/core_ext/integer/time"
^
config/environments/development.rb:1:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "active_support/core_ext/integer/time"
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/environments/development.rb:3:1: C: Metrics/BlockLength: Block has too many lines. [43/25]
Rails.application.configure do ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/environments/development.rb:88:5: C: [Correctable] Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
    address:              'smtp.gmail.com',
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/environments/development.rb:89:5: C: [Correctable] Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
    port:                 587,
    ^^^^^^^^^^^^^^^^^^^^^^^^^
config/environments/development.rb:90:5: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
    #domain:               'example.com',
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/environments/development.rb:91:5: C: [Correctable] Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
    user_name:            '<email>',
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/environments/development.rb:92:5: C: [Correctable] Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
    password:             '<password>',
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/environments/development.rb:93:5: C: [Correctable] Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
    authentication:       'plain',
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/environments/development.rb:95:5: C: [Correctable] Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
    open_timeout:         5,
    ^^^^^^^^^^^^^^^^^^^^^^^
config/environments/development.rb:96:5: C: [Correctable] Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
    read_timeout:         5 }
    ^^^^^^^^^^^^^^^^^^^^^^^
config/environments/development.rb:96:29: C: [Correctable] Layout/MultilineHashBraceLayout: Closing hash brace must be on the line after the last hash element when opening brace is on a separate line from the first hash element.
    read_timeout:         5 }
                            ^
config/environments/development.rb:97:32: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
  ENV['PAYPAL_CLIENT_ID'] = '' #'AZ7cvFNlXaeTjUVqghWxEaqvBuJEHCz3BKwX7fksAdrleR1tqTQksTwO9oI6NgB3_k7Pb9XstqeIBuIW'
                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/environments/production.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require "active_support/core_ext/integer/time"
^
config/environments/production.rb:1:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "active_support/core_ext/integer/time"
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/environments/production.rb:3:1: C: Metrics/BlockLength: Block has too many lines. [28/25]
Rails.application.configure do ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/environments/production.rb:58:22: C: [Correctable] Layout/SpaceInsideArrayLiteralBrackets: Do not use space inside array brackets.
  config.log_tags = [ :request_id ]
                     ^
config/environments/production.rb:58:34: C: Layout/SpaceInsideArrayLiteralBrackets: Do not use space inside array brackets.
  config.log_tags = [ :request_id ]
                                 ^
config/environments/production.rb:93:10: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  if ENV["RAILS_LOG_TO_STDOUT"].present?
         ^^^^^^^^^^^^^^^^^^^^^
config/environments/production.rb:94:50: C: [Correctable] Style/GlobalStdStream: Use $stdout instead of STDOUT.
    logger           = ActiveSupport::Logger.new(STDOUT)
                                                 ^^^^^^
config/environments/test.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require "active_support/core_ext/integer/time"
^
config/environments/test.rb:1:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "active_support/core_ext/integer/time"
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/application_controller_renderer.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# Be sure to restart your server when you modify this file.
^
config/initializers/assets.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# Be sure to restart your server when you modify this file.
^
config/initializers/assets.rb:15:47: C: [Correctable] Style/PercentLiteralDelimiters: %w-literals should be delimited by [ and ].
Rails.application.config.assets.precompile += %w( application.js )
                                              ^^^^^^^^^^^^^^^^^^^^
config/initializers/assets.rb:15:50: C: [Correctable] Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
Rails.application.config.assets.precompile += %w( application.js )
                                                 ^
config/initializers/assets.rb:15:65: C: [Correctable] Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
Rails.application.config.assets.precompile += %w( application.js )
                                                                ^
config/initializers/assets.rb:16:47: C: [Correctable] Style/PercentLiteralDelimiters: %w-literals should be delimited by [ and ].
Rails.application.config.assets.precompile += %w( payments.js )
                                              ^^^^^^^^^^^^^^^^^
config/initializers/assets.rb:16:50: C: [Correctable] Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
Rails.application.config.assets.precompile += %w( payments.js )
                                                 ^
config/initializers/assets.rb:16:62: C: [Correctable] Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
Rails.application.config.assets.precompile += %w( payments.js )
                                                             ^
config/initializers/backtrace_silencers.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# Be sure to restart your server when you modify this file.
^
config/initializers/backtrace_silencers.rb:8:50: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
Rails.backtrace_cleaner.remove_silencers! if ENV["BACKTRACE"]
                                                 ^^^^^^^^^^^
config/initializers/content_security_policy.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# Be sure to restart your server when you modify this file.
^
config/initializers/cookies_serializer.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# Be sure to restart your server when you modify this file.
^
config/initializers/devise.rb:11:121: C: Layout/LineLength: Line is too long. [154/120]
  # config.secret_key = 'dea1e4a3aeb4c392c5a690718434cdc9276fdab240cd691448498ff21c45ff31774f0f04b95b71b18d1b52be0684cf74288fd9b7626e0dc97978fbef743d7ed3'
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/devise.rb:117:121: C: Layout/LineLength: Line is too long. [150/120]
  # config.pepper = '942fda4ee890cdf92e02a47de0ffaf97c9614bc8976bfb8ab94b66df539f0abcb6e650cc8cf5a95fcbdc849f284ca3d237b1ec661c503ccb717f5eabc582aeb0'
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/devise.rb:300:4: C: [Correctable] Layout/TrailingEmptyLines: Final newline missing.
end
   
config/initializers/filter_parameter_logging.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# Be sure to restart your server when you modify this file.
^
config/initializers/filter_parameter_logging.rb:4:47: C: [Correctable] Style/SymbolArray: Use %i or %I for an array of symbols.
Rails.application.config.filter_parameters += [ ...
                                              ^
config/initializers/inflections.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# Be sure to restart your server when you modify this file.
^
config/initializers/mime_types.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# Be sure to restart your server when you modify this file.
^
config/initializers/permissions_policy.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# Define an application-wide HTTP permissions policy. For further
^
config/initializers/wrap_parameters.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# Be sure to restart your server when you modify this file.
^
config/puma.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# Puma can serve each request in a thread from an internal thread pool.
^
config/puma.rb:7:25: C: [Correctable] Style/RedundantFetchBlock: Use fetch("RAILS_MAX_THREADS", 5) instead of fetch("RAILS_MAX_THREADS") { 5 }.
max_threads_count = ENV.fetch("RAILS_MAX_THREADS") { 5 }
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/puma.rb:7:31: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
max_threads_count = ENV.fetch("RAILS_MAX_THREADS") { 5 }
                              ^^^^^^^^^^^^^^^^^^^
config/puma.rb:8:31: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
min_threads_count = ENV.fetch("RAILS_MIN_THREADS") { max_threads_count }
                              ^^^^^^^^^^^^^^^^^^^
config/puma.rb:14:34: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
worker_timeout 3600 if ENV.fetch("RAILS_ENV", "development") == "development"
                                 ^^^^^^^^^^^
config/puma.rb:14:47: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
worker_timeout 3600 if ENV.fetch("RAILS_ENV", "development") == "development"
                                              ^^^^^^^^^^^^^
config/puma.rb:14:65: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
worker_timeout 3600 if ENV.fetch("RAILS_ENV", "development") == "development"
                                                                ^^^^^^^^^^^^^
config/puma.rb:18:10: C: [Correctable] Style/RedundantFetchBlock: Use fetch("PORT", 3000) instead of fetch("PORT") { 3000 }.
port ENV.fetch("PORT") { 3000 }
         ^^^^^^^^^^^^^^^^^^^^^^
config/puma.rb:18:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
port ENV.fetch("PORT") { 3000 }
               ^^^^^^
config/puma.rb:22:23: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
environment ENV.fetch("RAILS_ENV") { "development" }
                      ^^^^^^^^^^^
config/puma.rb:22:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
environment ENV.fetch("RAILS_ENV") { "development" }
                                     ^^^^^^^^^^^^^
config/puma.rb:25:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
pidfile ENV.fetch("PIDFILE") { "tmp/pids/server.pid" }
                  ^^^^^^^^^
config/puma.rb:25:32: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
pidfile ENV.fetch("PIDFILE") { "tmp/pids/server.pid" }
                               ^^^^^^^^^^^^^^^^^^^^^
config/routes.rb:1:1: C: Metrics/BlockLength: Block has too many lines. [47/25]
Rails.application.routes.draw do ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/routes.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
Rails.application.routes.draw do
^
config/routes.rb:28:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	  get :notify
^
config/routes.rb:28:4: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
	  get :notify
   ^^^^^^^^^^^
config/routes.rb:29:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	  post :notify, to: 'events#mail'
^
config/routes.rb:29:4: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
	  post :notify, to: 'events#mail'
   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/routes.rb:32:37: C: [Correctable] Style/SymbolArray: Use %i or %I for an array of symbols.
  resources :contact_forms, except: [:edit, :update]
                                    ^^^^^^^^^^^^^^^^
config/routes.rb:36:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	  get :records
^
config/routes.rb:36:4: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
	  get :records
   ^^^^^^^^^^^^
config/routes.rb:37:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	  get 'records/new', to: 'semesters#new_record', as: :new_record
^
config/routes.rb:37:4: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
	  get 'records/new', to: 'semesters#new_record', as: :new_record
   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/routes.rb:38:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	  post 'records', to: 'semesters#create_record'
^
config/routes.rb:38:4: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
	  post 'records', to: 'semesters#create_record'
   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/routes.rb:39:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	  get 'records/:user_id/edit', to: 'semesters#edit_record', as: :edit_record
^
config/routes.rb:39:4: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
	  get 'records/:user_id/edit', to: 'semesters#edit_record', as: :edit_record
   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/routes.rb:40:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	  patch 'records', to: 'semesters#update_record'
^
config/routes.rb:40:4: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
	  patch 'records', to: 'semesters#update_record'
   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/routes.rb:41:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	  delete 'records.:user_id', to: 'semesters#destroy_record', as: :delete_record
^
config/routes.rb:41:4: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
	  delete 'records.:user_id', to: 'semesters#destroy_record', as: :delete_record
   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/routes.rb:46:2: C: [Correctable] Layout/IndentationWidth: Use 2 (not 5) spaces for indentation.
      patch :select
 ^^^^^
config/routes.rb:47:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	end	
^
config/routes.rb:47:2: C: [Correctable] Layout/BlockAlignment: end at 47, 1 is not aligned with member do at 45, 4.
	end	
 ^^^
config/routes.rb:47:5: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
	end	
    ^
config/schedule.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# Use this file to easily define all of your cron jobs.
^
config/schedule.rb:7:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
set :output, "log/cron.log"
             ^^^^^^^^^^^^^^
config/schedule.rb:8:1: C: [Correctable] Layout/CommentIndentation: Incorrect indentation detected (column 0 instead of 1).
#
^
config/schedule.rb:8:1: C: [Correctable] Layout/EmptyComment: Source code comment is empty.
#
^
config/schedule.rb:9:2: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
 every 1.minute do ...
 ^^^^^^^^^^^^^^^^^
config/schedule.rb:11:1: C: [Correctable] Layout/CommentIndentation: Incorrect indentation detected (column 0 instead of 3).
#   runner "MyModel.some_method"
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/schedule.rb:12:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
   rake "payments:reset_paid"
        ^^^^^^^^^^^^^^^^^^^^^
config/spring.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
Spring.watch(
^
config/spring.rb:2:3: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  ".ruby-version",
  ^^^^^^^^^^^^^^^
config/spring.rb:3:3: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  ".rbenv-vars",
  ^^^^^^^^^^^^^
config/spring.rb:4:3: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  "tmp/restart.txt",
  ^^^^^^^^^^^^^^^^^
config/spring.rb:5:3: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  "tmp/caching-dev.txt"
  ^^^^^^^^^^^^^^^^^^^^^
db/migrate/20220211022708_create_events.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class CreateEvents.
class CreateEvents < ActiveRecord::Migration[6.1]
^^^^^^^^^^^^^^^^^^
db/migrate/20220211022708_create_events.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class CreateEvents < ActiveRecord::Migration[6.1]
^
db/migrate/20220211022708_create_events.rb:15:4: C: [Correctable] Layout/TrailingEmptyLines: Final newline missing.
end
   
db/migrate/20220213232807_add_name_to_events.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class AddNameToEvents.
class AddNameToEvents < ActiveRecord::Migration[6.1]
^^^^^^^^^^^^^^^^^^^^^
db/migrate/20220213232807_add_name_to_events.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class AddNameToEvents < ActiveRecord::Migration[6.1]
^
db/migrate/20220213232807_add_name_to_events.rb:3:5: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
    #add_column :events, :name, :string
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20220214052903_devise_create_users.rb:3:1: C: Style/Documentation: Missing top-level documentation comment for class DeviseCreateUsers.
class DeviseCreateUsers < ActiveRecord::Migration[6.1]
^^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20220214055132_add_role_to_users.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class AddRoleToUsers.
class AddRoleToUsers < ActiveRecord::Migration[6.1]
^^^^^^^^^^^^^^^^^^^^
db/migrate/20220214055132_add_role_to_users.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class AddRoleToUsers < ActiveRecord::Migration[6.1]
^
db/migrate/20220214055228_add_attendance_count_to_users.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class AddAttendanceCountToUsers.
class AddAttendanceCountToUsers < ActiveRecord::Migration[6.1]
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20220214055228_add_attendance_count_to_users.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class AddAttendanceCountToUsers < ActiveRecord::Migration[6.1]
^
db/migrate/20220214055228_add_attendance_count_to_users.rb:3:52: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    add_column :users, :attendance_count, :bigint, :null => false, :default => 0
                                                   ^^^^^^^^
db/migrate/20220214055228_add_attendance_count_to_users.rb:3:68: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    add_column :users, :attendance_count, :bigint, :null => false, :default => 0
                                                                   ^^^^^^^^^^^
db/migrate/20220214055712_change_column_default.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class ChangeColumnDefault.
class ChangeColumnDefault < ActiveRecord::Migration[6.1]
^^^^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20220214055712_change_column_default.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class ChangeColumnDefault < ActiveRecord::Migration[6.1]
^
db/migrate/20220214090231_add_password_to_events.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class AddPasswordToEvents.
class AddPasswordToEvents < ActiveRecord::Migration[6.1]
^^^^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20220214090231_add_password_to_events.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class AddPasswordToEvents < ActiveRecord::Migration[6.1]
^
db/migrate/20220214101117_add_attendance_count_to_events.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class AddAttendanceCountToEvents.
class AddAttendanceCountToEvents < ActiveRecord::Migration[6.1]
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20220214101117_add_attendance_count_to_events.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class AddAttendanceCountToEvents < ActiveRecord::Migration[6.1]
^
db/migrate/20220214101117_add_attendance_count_to_events.rb:3:53: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    add_column :events, :attendance_count, :bigint, :null => false, :default => 0
                                                    ^^^^^^^^
db/migrate/20220214101117_add_attendance_count_to_events.rb:3:69: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    add_column :events, :attendance_count, :bigint, :null => false, :default => 0
                                                                    ^^^^^^^^^^^
db/migrate/20220225072336_add_payment_entity.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class AddPaymentEntity.
class AddPaymentEntity < ActiveRecord::Migration[6.1]
^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20220225072336_add_payment_entity.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class AddPaymentEntity < ActiveRecord::Migration[6.1]
^
db/migrate/20220225072336_add_payment_entity.rb:6:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
db/migrate/20220227030737_update_users.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class UpdateUsers.
class UpdateUsers < ActiveRecord::Migration[6.1]
^^^^^^^^^^^^^^^^^
db/migrate/20220227030737_update_users.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class UpdateUsers < ActiveRecord::Migration[6.1]
^
db/migrate/20220227030737_update_users.rb:2:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	def change
^
db/migrate/20220227030737_update_users.rb:2:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
	def change
^
db/migrate/20220227030737_update_users.rb:3:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		add_column :users, :is_current_member, :boolean, null: false, default: true
^^
db/migrate/20220227030737_update_users.rb:3:2: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
		add_column :users, :is_current_member, :boolean, null: false, default: true
 ^
db/migrate/20220227030737_update_users.rb:4:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		add_column :users, :has_paid_dues, :boolean, default: false
^^
db/migrate/20220227030737_update_users.rb:5:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	end
^
db/migrate/20220227042316_create_semesters.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class CreateSemesters.
class CreateSemesters < ActiveRecord::Migration[6.1]
^^^^^^^^^^^^^^^^^^^^^
db/migrate/20220227042316_create_semesters.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class CreateSemesters < ActiveRecord::Migration[6.1]
^
db/migrate/20220228211629_create_event_users.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class CreateEventUsers.
class CreateEventUsers < ActiveRecord::Migration[6.1]
^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20220228211629_create_event_users.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class CreateEventUsers < ActiveRecord::Migration[6.1]
^
db/migrate/20220228211629_create_event_users.rb:2:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	def change
^
db/migrate/20220228211629_create_event_users.rb:2:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
	def change
^
db/migrate/20220228211629_create_event_users.rb:3:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		create_table :event_users do |t|
^^
db/migrate/20220228211629_create_event_users.rb:3:2: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
		create_table :event_users do |t|
 ^
db/migrate/20220228211629_create_event_users.rb:4:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
			t.belongs_to :user, null: false
^^^
db/migrate/20220228211629_create_event_users.rb:4:3: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
			t.belongs_to :user, null: false
  ^
db/migrate/20220228211629_create_event_users.rb:5:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
			t.belongs_to :event, null: false
^^^
db/migrate/20220228211629_create_event_users.rb:6:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
			t.boolean :attended
^^^
db/migrate/20220228211629_create_event_users.rb:7:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
			t.timestamps
^^^
db/migrate/20220228211629_create_event_users.rb:8:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		end
^^
db/migrate/20220228211629_create_event_users.rb:9:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
  	end
^^^
db/migrate/20220228211629_create_event_users.rb:9:4: W: [Correctable] Layout/DefEndAlignment: end at 9, 3 is not aligned with def at 2, 1.
  	end
   ^^^
db/migrate/20220301050119_create_semester_users.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class CreateSemesterUsers.
class CreateSemesterUsers < ActiveRecord::Migration[6.1]
^^^^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20220301050119_create_semester_users.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class CreateSemesterUsers < ActiveRecord::Migration[6.1]
^
db/migrate/20220301050119_create_semester_users.rb:2:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	def change
^
db/migrate/20220301050119_create_semester_users.rb:2:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
	def change
^
db/migrate/20220301050119_create_semester_users.rb:3:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		create_table :semester_users do |t|
^^
db/migrate/20220301050119_create_semester_users.rb:3:2: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
		create_table :semester_users do |t|
 ^
db/migrate/20220301050119_create_semester_users.rb:4:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
			t.belongs_to :user, null: false
^^^
db/migrate/20220301050119_create_semester_users.rb:4:3: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
			t.belongs_to :user, null: false
  ^
db/migrate/20220301050119_create_semester_users.rb:5:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
			t.belongs_to :semester, null: false
^^^
db/migrate/20220301050119_create_semester_users.rb:6:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
			t.boolean :paid_dues
^^^
db/migrate/20220301050119_create_semester_users.rb:7:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
db/migrate/20220301050119_create_semester_users.rb:7:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
db/migrate/20220301050119_create_semester_users.rb:8:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
			t.timestamps
^^^
db/migrate/20220301050119_create_semester_users.rb:9:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		end
^^
db/migrate/20220301050119_create_semester_users.rb:10:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	end
^
db/migrate/20220301051613_create_officer_bios.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class CreateOfficerBios.
class CreateOfficerBios < ActiveRecord::Migration[6.1]
^^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20220301051613_create_officer_bios.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class CreateOfficerBios < ActiveRecord::Migration[6.1]
^
db/migrate/20220301051613_create_officer_bios.rb:2:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	def change
^
db/migrate/20220301051613_create_officer_bios.rb:2:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
	def change
^
db/migrate/20220301051613_create_officer_bios.rb:3:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		create_table :officer_bios do |t|
^^
db/migrate/20220301051613_create_officer_bios.rb:3:2: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
		create_table :officer_bios do |t|
 ^
db/migrate/20220301051613_create_officer_bios.rb:4:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
			t.belongs_to :user, null: false
^^^
db/migrate/20220301051613_create_officer_bios.rb:4:3: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
			t.belongs_to :user, null: false
  ^
db/migrate/20220301051613_create_officer_bios.rb:5:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
			t.string :bio_text
^^^
db/migrate/20220301051613_create_officer_bios.rb:6:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
			t.string :portrait_image
^^^
db/migrate/20220301051613_create_officer_bios.rb:7:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
			t.boolean :visible
^^^
db/migrate/20220301051613_create_officer_bios.rb:8:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
			t.timestamps
^^^
db/migrate/20220301051613_create_officer_bios.rb:9:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		end
^^
db/migrate/20220301051613_create_officer_bios.rb:10:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	end
^
db/migrate/20220301140859_create_home_pages.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class CreateHomePages.
class CreateHomePages < ActiveRecord::Migration[6.1]
^^^^^^^^^^^^^^^^^^^^^
db/migrate/20220301140859_create_home_pages.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class CreateHomePages < ActiveRecord::Migration[6.1]
^
db/migrate/20220301140859_create_home_pages.rb:4:16: C: Naming/VariableNumber: Use normalcase for symbol numbers.
      t.string :slider_image_1
               ^^^^^^^^^^^^^^^
db/migrate/20220301140859_create_home_pages.rb:5:16: C: Naming/VariableNumber: Use normalcase for symbol numbers.
      t.string :slider_image_2
               ^^^^^^^^^^^^^^^
db/migrate/20220301140859_create_home_pages.rb:6:16: C: Naming/VariableNumber: Use normalcase for symbol numbers.
      t.string :slider_image_3
               ^^^^^^^^^^^^^^^
db/migrate/20220301140859_create_home_pages.rb:7:16: C: Naming/VariableNumber: Use normalcase for symbol numbers.
      t.string :slider_image_4
               ^^^^^^^^^^^^^^^
db/migrate/20220301140859_create_home_pages.rb:8:16: C: Naming/VariableNumber: Use normalcase for symbol numbers.
      t.string :slider_image_5
               ^^^^^^^^^^^^^^^
db/migrate/20220301201520_create_about_us_pages.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class CreateAboutUsPages.
class CreateAboutUsPages < ActiveRecord::Migration[6.1]
^^^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20220301201520_create_about_us_pages.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class CreateAboutUsPages < ActiveRecord::Migration[6.1]
^
db/migrate/20220301201520_create_about_us_pages.rb:8:16: C: Naming/VariableNumber: Use normalcase for symbol numbers.
      t.string :club_image_1
               ^^^^^^^^^^^^^
db/migrate/20220301201520_create_about_us_pages.rb:9:16: C: Naming/VariableNumber: Use normalcase for symbol numbers.
      t.string :club_image_2
               ^^^^^^^^^^^^^
db/migrate/20220301201630_create_about_us_pages_officer_bios_join_table.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class CreateAboutUsPagesOfficerBiosJoinTable.
class CreateAboutUsPagesOfficerBiosJoinTable < ActiveRecord::Migration[6.1]
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20220301201630_create_about_us_pages_officer_bios_join_table.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class CreateAboutUsPagesOfficerBiosJoinTable < ActiveRecord::Migration[6.1]
^
db/migrate/20220301201630_create_about_us_pages_officer_bios_join_table.rb:2:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	def change
^
db/migrate/20220301201630_create_about_us_pages_officer_bios_join_table.rb:2:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
	def change
^
db/migrate/20220301201630_create_about_us_pages_officer_bios_join_table.rb:3:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		create_join_table :about_us_pages, :officer_bios
^^
db/migrate/20220301201630_create_about_us_pages_officer_bios_join_table.rb:3:2: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
		create_join_table :about_us_pages, :officer_bios
 ^
db/migrate/20220301201630_create_about_us_pages_officer_bios_join_table.rb:4:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	end
^
db/migrate/20220301212205_create_contact_forms.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class CreateContactForms.
class CreateContactForms < ActiveRecord::Migration[6.1]
^^^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20220301212205_create_contact_forms.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class CreateContactForms < ActiveRecord::Migration[6.1]
^
db/migrate/20220301212350_create_payment_accounts.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class CreatePaymentAccounts.
class CreatePaymentAccounts < ActiveRecord::Migration[6.1]
^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20220301212350_create_payment_accounts.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class CreatePaymentAccounts < ActiveRecord::Migration[6.1]
^
db/migrate/20220306223410_add_transaction_to_user.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class AddTransactionToUser.
class AddTransactionToUser < ActiveRecord::Migration[6.1]
^^^^^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20220306223410_add_transaction_to_user.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class AddTransactionToUser < ActiveRecord::Migration[6.1]
^
db/migrate/20220306223410_add_transaction_to_user.rb:4:24: C: Naming/VariableNumber: Use normalcase for symbol numbers.
    add_column :users, :transaction_last_4, :bigint
                       ^^^^^^^^^^^^^^^^^^^
db/migrate/20220306231855_add_transaction_time_to_user.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class AddTransactionTimeToUser.
class AddTransactionTimeToUser < ActiveRecord::Migration[6.1]
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20220306231855_add_transaction_time_to_user.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class AddTransactionTimeToUser < ActiveRecord::Migration[6.1]
^
db/migrate/20220331234421_create_active_storage_tables.active_storage.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# This migration comes from active_storage (originally 20170806125915)
^
db/migrate/20220331234421_create_active_storage_tables.active_storage.rb:3:3: C: Metrics/AbcSize: Assignment Branch Condition size for change is too high. [<3, 22, 0> 22.2/17]
  def change ...
  ^^^^^^^^^^
db/migrate/20220331234421_create_active_storage_tables.active_storage.rb:3:3: C: Metrics/MethodLength: Method has too many lines. [25/10]
  def change ...
  ^^^^^^^^^^
db/migrate/20220331234421_create_active_storage_tables.active_storage.rb:14:16: C: [Correctable] Layout/SpaceInsideArrayLiteralBrackets: Do not use space inside array brackets.
      t.index [ :key ], unique: true
               ^
db/migrate/20220331234421_create_active_storage_tables.active_storage.rb:14:21: C: Layout/SpaceInsideArrayLiteralBrackets: Do not use space inside array brackets.
      t.index [ :key ], unique: true
                    ^
db/migrate/20220331234421_create_active_storage_tables.active_storage.rb:24:15: C: [Correctable] Style/SymbolArray: Use %i or %I for an array of symbols.
      t.index [ :record_type, :record_id, :name, :blob_id ], name: "index_active_storage_attachments_uniqueness", unique: true
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20220331234421_create_active_storage_tables.active_storage.rb:24:16: C: [Correctable] Layout/SpaceInsideArrayLiteralBrackets: Do not use space inside array brackets.
      t.index [ :record_type, :record_id, :name, :blob_id ], name: "index_active_storage_attachments_uniqueness", unique: true
               ^
db/migrate/20220331234421_create_active_storage_tables.active_storage.rb:24:58: C: Layout/SpaceInsideArrayLiteralBrackets: Do not use space inside array brackets.
      t.index [ :record_type, :record_id, :name, :blob_id ], name: "index_active_storage_attachments_uniqueness", unique: true
                                                         ^
db/migrate/20220331234421_create_active_storage_tables.active_storage.rb:24:68: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      t.index [ :record_type, :record_id, :name, :blob_id ], name: "index_active_storage_attachments_uniqueness", unique: true
                                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20220331234421_create_active_storage_tables.active_storage.rb:24:121: C: [Correctable] Layout/LineLength: Line is too long. [126/120]
      t.index [ :record_type, :record_id, :name, :blob_id ], name: "index_active_storage_attachments_uniqueness", unique: true
                                                                                                                        ^^^^^^
db/migrate/20220331234421_create_active_storage_tables.active_storage.rb:32:18: C: [Correctable] Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
      t.index %i[ blob_id variation_digest ], name: "index_active_storage_variant_records_uniqueness", unique: true
                 ^
db/migrate/20220331234421_create_active_storage_tables.active_storage.rb:32:43: C: [Correctable] Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
      t.index %i[ blob_id variation_digest ], name: "index_active_storage_variant_records_uniqueness", unique: true
                                          ^
db/migrate/20220331234421_create_active_storage_tables.active_storage.rb:32:53: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      t.index %i[ blob_id variation_digest ], name: "index_active_storage_variant_records_uniqueness", unique: true
                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20220404214732_add_end_time_to_events.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class AddEndTimeToEvents.
class AddEndTimeToEvents < ActiveRecord::Migration[6.1]
^^^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20220404214732_add_end_time_to_events.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class AddEndTimeToEvents < ActiveRecord::Migration[6.1]
^
db/migrate/20220404214738_add_open_to_events.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class AddOpenToEvents.
class AddOpenToEvents < ActiveRecord::Migration[6.1]
^^^^^^^^^^^^^^^^^^^^^
db/migrate/20220404214738_add_open_to_events.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class AddOpenToEvents < ActiveRecord::Migration[6.1]
^
db/migrate/20220404214738_add_open_to_events.rb:3:42: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    add_column :events, :open, :boolean, :default => false
                                         ^^^^^^^^^^^
db/schema.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# This file is auto-generated from the current state of the database. Instead
^
db/schema.rb:13:1: C: Metrics/BlockLength: Block has too many lines. [140/25]
ActiveRecord::Schema.define(version: 2022_04_04_214738) do ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:13:38: C: [Correctable] Style/NumericLiterals: Use underscores(_) as thousands separator and separate every 3 digits with them.
ActiveRecord::Schema.define(version: 2022_04_04_214738) do
                                     ^^^^^^^^^^^^^^^^^
db/schema.rb:14:1: C: [Correctable] Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body beginning.
db/schema.rb:16:20: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  enable_extension "plpgsql"
                   ^^^^^^^^^
db/schema.rb:18:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  create_table "about_us_pages", force: :cascade do |t|
               ^^^^^^^^^^^^^^^^
db/schema.rb:19:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "heading_image"
             ^^^^^^^^^^^^^^^
db/schema.rb:20:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "heading"
             ^^^^^^^^^
db/schema.rb:21:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "about_text"
             ^^^^^^^^^^^^
db/schema.rb:22:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "mission_text"
             ^^^^^^^^^^^^^^
db/schema.rb:23:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "club_image_1"
             ^^^^^^^^^^^^^^
db/schema.rb:24:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "club_image_2"
             ^^^^^^^^^^^^^^
db/schema.rb:25:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "created_at", precision: 6, null: false
               ^^^^^^^^^^^^
db/schema.rb:26:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "updated_at", precision: 6, null: false
               ^^^^^^^^^^^^
db/schema.rb:29:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  create_table "about_us_pages_officer_bios", id: false, force: :cascade do |t|
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:30:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.bigint "about_us_page_id", null: false
             ^^^^^^^^^^^^^^^^^^
db/schema.rb:31:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.bigint "officer_bio_id", null: false
             ^^^^^^^^^^^^^^^^
db/schema.rb:34:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  create_table "active_storage_attachments", force: :cascade do |t|
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:35:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "name", null: false
             ^^^^^^
db/schema.rb:36:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "record_type", null: false
             ^^^^^^^^^^^^^
db/schema.rb:37:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.bigint "record_id", null: false
             ^^^^^^^^^^^
db/schema.rb:38:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.bigint "blob_id", null: false
             ^^^^^^^^^
db/schema.rb:39:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "created_at", null: false
               ^^^^^^^^^^^^
db/schema.rb:40:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.index ["blob_id"], name: "index_active_storage_attachments_on_blob_id"
             ^^^^^^^^^
db/schema.rb:40:32: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.index ["blob_id"], name: "index_active_storage_attachments_on_blob_id"
                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:41:13: C: [Correctable] Style/WordArray: Use %w or %W for an array of words.
    t.index ["record_type", "record_id", "name", "blob_id"], name: "index_active_storage_attachments_uniqueness", unique: true
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:41:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.index ["record_type", "record_id", "name", "blob_id"], name: "index_active_storage_attachments_uniqueness", unique: true
             ^^^^^^^^^^^^^
db/schema.rb:41:29: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.index ["record_type", "record_id", "name", "blob_id"], name: "index_active_storage_attachments_uniqueness", unique: true
                            ^^^^^^^^^^^
db/schema.rb:41:42: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.index ["record_type", "record_id", "name", "blob_id"], name: "index_active_storage_attachments_uniqueness", unique: true
                                         ^^^^^^
db/schema.rb:41:50: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.index ["record_type", "record_id", "name", "blob_id"], name: "index_active_storage_attachments_uniqueness", unique: true
                                                 ^^^^^^^^^
db/schema.rb:41:68: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.index ["record_type", "record_id", "name", "blob_id"], name: "index_active_storage_attachments_uniqueness", unique: true
                                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:41:121: C: [Correctable] Layout/LineLength: Line is too long. [126/120]
    t.index ["record_type", "record_id", "name", "blob_id"], name: "index_active_storage_attachments_uniqueness", unique: true
                                                                                                                        ^^^^^^
db/schema.rb:44:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  create_table "active_storage_blobs", force: :cascade do |t|
               ^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:45:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "key", null: false
             ^^^^^
db/schema.rb:46:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "filename", null: false
             ^^^^^^^^^^
db/schema.rb:47:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "content_type"
             ^^^^^^^^^^^^^^
db/schema.rb:48:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.text "metadata"
           ^^^^^^^^^^
db/schema.rb:49:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "service_name", null: false
             ^^^^^^^^^^^^^^
db/schema.rb:50:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.bigint "byte_size", null: false
             ^^^^^^^^^^^
db/schema.rb:51:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "checksum", null: false
             ^^^^^^^^^^
db/schema.rb:52:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "created_at", null: false
               ^^^^^^^^^^^^
db/schema.rb:53:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.index ["key"], name: "index_active_storage_blobs_on_key", unique: true
             ^^^^^
db/schema.rb:53:28: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.index ["key"], name: "index_active_storage_blobs_on_key", unique: true
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:56:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  create_table "active_storage_variant_records", force: :cascade do |t|
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:57:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.bigint "blob_id", null: false
             ^^^^^^^^^
db/schema.rb:58:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "variation_digest", null: false
             ^^^^^^^^^^^^^^^^^^
db/schema.rb:59:13: C: [Correctable] Style/WordArray: Use %w or %W for an array of words.
    t.index ["blob_id", "variation_digest"], name: "index_active_storage_variant_records_uniqueness", unique: true
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:59:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.index ["blob_id", "variation_digest"], name: "index_active_storage_variant_records_uniqueness", unique: true
             ^^^^^^^^^
db/schema.rb:59:25: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.index ["blob_id", "variation_digest"], name: "index_active_storage_variant_records_uniqueness", unique: true
                        ^^^^^^^^^^^^^^^^^^
db/schema.rb:59:52: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.index ["blob_id", "variation_digest"], name: "index_active_storage_variant_records_uniqueness", unique: true
                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:62:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  create_table "contact_forms", force: :cascade do |t|
               ^^^^^^^^^^^^^^^
db/schema.rb:63:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "name"
             ^^^^^^
db/schema.rb:64:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "email"
             ^^^^^^^
db/schema.rb:65:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "company"
             ^^^^^^^^^
db/schema.rb:66:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "message"
             ^^^^^^^^^
db/schema.rb:67:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "date_submitted"
               ^^^^^^^^^^^^^^^^
db/schema.rb:68:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "created_at", precision: 6, null: false
               ^^^^^^^^^^^^
db/schema.rb:69:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "updated_at", precision: 6, null: false
               ^^^^^^^^^^^^
db/schema.rb:72:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  create_table "event_users", force: :cascade do |t|
               ^^^^^^^^^^^^^
db/schema.rb:73:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.bigint "user_id", null: false
             ^^^^^^^^^
db/schema.rb:74:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.bigint "event_id", null: false
             ^^^^^^^^^^
db/schema.rb:75:15: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.boolean "attended"
              ^^^^^^^^^^
db/schema.rb:76:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "created_at", precision: 6, null: false
               ^^^^^^^^^^^^
db/schema.rb:77:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "updated_at", precision: 6, null: false
               ^^^^^^^^^^^^
db/schema.rb:78:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.index ["event_id"], name: "index_event_users_on_event_id"
             ^^^^^^^^^^
db/schema.rb:78:33: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.index ["event_id"], name: "index_event_users_on_event_id"
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:79:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.index ["user_id"], name: "index_event_users_on_user_id"
             ^^^^^^^^^
db/schema.rb:79:32: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.index ["user_id"], name: "index_event_users_on_user_id"
                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:82:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  create_table "events", force: :cascade do |t|
               ^^^^^^^^
db/schema.rb:83:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "name"
             ^^^^^^
db/schema.rb:84:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "time"
               ^^^^^^
db/schema.rb:85:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "location"
             ^^^^^^^^^^
db/schema.rb:86:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "link"
             ^^^^^^
db/schema.rb:87:15: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.boolean "is_mandatory"
              ^^^^^^^^^^^^^^
db/schema.rb:88:15: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.boolean "is_recurring"
              ^^^^^^^^^^^^^^
db/schema.rb:89:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.text "description"
           ^^^^^^^^^^^^^
db/schema.rb:90:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "created_at", precision: 6, null: false
               ^^^^^^^^^^^^
db/schema.rb:91:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "updated_at", precision: 6, null: false
               ^^^^^^^^^^^^
db/schema.rb:92:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "password"
             ^^^^^^^^^^
db/schema.rb:93:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.bigint "attendance_count", default: 0, null: false
             ^^^^^^^^^^^^^^^^^^
db/schema.rb:94:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "end_time"
               ^^^^^^^^^^
db/schema.rb:95:15: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.boolean "open", default: false
              ^^^^^^
db/schema.rb:98:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  create_table "home_pages", force: :cascade do |t|
               ^^^^^^^^^^^^
db/schema.rb:99:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "slider_image_1"
             ^^^^^^^^^^^^^^^^
db/schema.rb:100:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "slider_image_2"
             ^^^^^^^^^^^^^^^^
db/schema.rb:101:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "slider_image_3"
             ^^^^^^^^^^^^^^^^
db/schema.rb:102:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "slider_image_4"
             ^^^^^^^^^^^^^^^^
db/schema.rb:103:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "slider_image_5"
             ^^^^^^^^^^^^^^^^
db/schema.rb:104:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "heading"
             ^^^^^^^^^
db/schema.rb:105:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "summary"
             ^^^^^^^^^
db/schema.rb:106:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "created_at", precision: 6, null: false
               ^^^^^^^^^^^^
db/schema.rb:107:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "updated_at", precision: 6, null: false
               ^^^^^^^^^^^^
db/schema.rb:110:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  create_table "officer_bios", force: :cascade do |t|
               ^^^^^^^^^^^^^^
db/schema.rb:111:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.bigint "user_id", null: false
             ^^^^^^^^^
db/schema.rb:112:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "bio_text"
             ^^^^^^^^^^
db/schema.rb:113:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "portrait_image"
             ^^^^^^^^^^^^^^^^
db/schema.rb:114:15: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.boolean "visible"
              ^^^^^^^^^
db/schema.rb:115:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "created_at", precision: 6, null: false
               ^^^^^^^^^^^^
db/schema.rb:116:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "updated_at", precision: 6, null: false
               ^^^^^^^^^^^^
db/schema.rb:117:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.index ["user_id"], name: "index_officer_bios_on_user_id"
             ^^^^^^^^^
db/schema.rb:117:32: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.index ["user_id"], name: "index_officer_bios_on_user_id"
                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:120:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  create_table "paymentAccount", force: :cascade do |t|
               ^^^^^^^^^^^^^^^^
db/schema.rb:121:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "internalName"
             ^^^^^^^^^^^^^^
db/schema.rb:122:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "paymentAddress"
             ^^^^^^^^^^^^^^^^
db/schema.rb:123:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "created_at", precision: 6, null: false
               ^^^^^^^^^^^^
db/schema.rb:124:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "updated_at", precision: 6, null: false
               ^^^^^^^^^^^^
db/schema.rb:127:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  create_table "payment_accounts", force: :cascade do |t|
               ^^^^^^^^^^^^^^^^^^
db/schema.rb:128:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "internal_name"
             ^^^^^^^^^^^^^^^
db/schema.rb:129:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "payment_address"
             ^^^^^^^^^^^^^^^^^
db/schema.rb:130:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "created_at", precision: 6, null: false
               ^^^^^^^^^^^^
db/schema.rb:131:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "updated_at", precision: 6, null: false
               ^^^^^^^^^^^^
db/schema.rb:134:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  create_table "semester_users", force: :cascade do |t|
               ^^^^^^^^^^^^^^^^
db/schema.rb:135:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.bigint "user_id", null: false
             ^^^^^^^^^
db/schema.rb:136:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.bigint "semester_id", null: false
             ^^^^^^^^^^^^^
db/schema.rb:137:15: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.boolean "paid_dues"
              ^^^^^^^^^^^
db/schema.rb:138:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "created_at", precision: 6, null: false
               ^^^^^^^^^^^^
db/schema.rb:139:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "updated_at", precision: 6, null: false
               ^^^^^^^^^^^^
db/schema.rb:140:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.index ["semester_id"], name: "index_semester_users_on_semester_id"
             ^^^^^^^^^^^^^
db/schema.rb:140:36: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.index ["semester_id"], name: "index_semester_users_on_semester_id"
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:141:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.index ["user_id"], name: "index_semester_users_on_user_id"
             ^^^^^^^^^
db/schema.rb:141:32: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.index ["user_id"], name: "index_semester_users_on_user_id"
                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:144:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  create_table "semesters", force: :cascade do |t|
               ^^^^^^^^^^^
db/schema.rb:145:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "name"
             ^^^^^^
db/schema.rb:146:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "start"
               ^^^^^^^
db/schema.rb:147:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "end"
               ^^^^^
db/schema.rb:148:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.float "duescost"
            ^^^^^^^^^^
db/schema.rb:149:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "created_at", precision: 6, null: false
               ^^^^^^^^^^^^
db/schema.rb:150:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "updated_at", precision: 6, null: false
               ^^^^^^^^^^^^
db/schema.rb:153:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  create_table "users", force: :cascade do |t|
               ^^^^^^^
db/schema.rb:154:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "email", null: false
             ^^^^^^^
db/schema.rb:155:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "full_name"
             ^^^^^^^^^^^
db/schema.rb:156:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "uid"
             ^^^^^
db/schema.rb:157:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "avatar_url"
             ^^^^^^^^^^^^
db/schema.rb:158:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "created_at", precision: 6, null: false
               ^^^^^^^^^^^^
db/schema.rb:159:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "updated_at", precision: 6, null: false
               ^^^^^^^^^^^^
db/schema.rb:160:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "role", default: "member"
             ^^^^^^
db/schema.rb:160:31: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "role", default: "member"
                              ^^^^^^^^
db/schema.rb:161:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.bigint "attendance_count", default: 0, null: false
             ^^^^^^^^^^^^^^^^^^
db/schema.rb:162:15: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.boolean "is_current_member", default: true, null: false
              ^^^^^^^^^^^^^^^^^^^
db/schema.rb:163:15: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.boolean "has_paid_dues", default: false
              ^^^^^^^^^^^^^^^
db/schema.rb:164:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.bigint "transaction_amount"
             ^^^^^^^^^^^^^^^^^^^^
db/schema.rb:165:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.bigint "transaction_last_4"
             ^^^^^^^^^^^^^^^^^^^^
db/schema.rb:166:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "transaction_date"
               ^^^^^^^^^^^^^^^^^^
db/schema.rb:167:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.index ["email"], name: "index_users_on_email", unique: true
             ^^^^^^^
db/schema.rb:167:30: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.index ["email"], name: "index_users_on_email", unique: true
                             ^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:170:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_foreign_key "active_storage_attachments", "active_storage_blobs", column: "blob_id"
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:170:49: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_foreign_key "active_storage_attachments", "active_storage_blobs", column: "blob_id"
                                                ^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:170:81: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_foreign_key "active_storage_attachments", "active_storage_blobs", column: "blob_id"
                                                                                ^^^^^^^^^
db/schema.rb:171:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_foreign_key "active_storage_variant_records", "active_storage_blobs", column: "blob_id"
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:171:53: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_foreign_key "active_storage_variant_records", "active_storage_blobs", column: "blob_id"
                                                    ^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:171:85: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_foreign_key "active_storage_variant_records", "active_storage_blobs", column: "blob_id"
                                                                                    ^^^^^^^^^
db/seeds.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# This file should contain all the record creation needed to seed the database with its default values.
^
db/seeds.rb:9:13: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
User.create(:full_name => 'Ken Kirkley', :email => "kenkirkley1330@gmail.com", :role => "admin");
            ^^^^^^^^^^^^^
db/seeds.rb:9:42: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
User.create(:full_name => 'Ken Kirkley', :email => "kenkirkley1330@gmail.com", :role => "admin");
                                         ^^^^^^^^^
db/seeds.rb:9:52: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
User.create(:full_name => 'Ken Kirkley', :email => "kenkirkley1330@gmail.com", :role => "admin");
                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^
db/seeds.rb:9:80: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
User.create(:full_name => 'Ken Kirkley', :email => "kenkirkley1330@gmail.com", :role => "admin");
                                                                               ^^^^^^^^
db/seeds.rb:9:89: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
User.create(:full_name => 'Ken Kirkley', :email => "kenkirkley1330@gmail.com", :role => "admin");
                                                                                        ^^^^^^^
db/seeds.rb:9:97: C: [Correctable] Style/Semicolon: Do not use semicolons to terminate expressions.
User.create(:full_name => 'Ken Kirkley', :email => "kenkirkley1330@gmail.com", :role => "admin");
                                                                                                ^
db/seeds.rb:10:13: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
User.create(:full_name => 'Holland McQuaid', :email => "HollandMcQ2@gmail.com", :role => "admin", :attendance_count => 1, :has_paid_dues => true);
            ^^^^^^^^^^^^^
db/seeds.rb:10:46: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
User.create(:full_name => 'Holland McQuaid', :email => "HollandMcQ2@gmail.com", :role => "admin", :attendance_count => 1, :has_paid_dues => true);
                                             ^^^^^^^^^
db/seeds.rb:10:56: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
User.create(:full_name => 'Holland McQuaid', :email => "HollandMcQ2@gmail.com", :role => "admin", :attendance_count => 1, :has_paid_dues => true);
                                                       ^^^^^^^^^^^^^^^^^^^^^^^
db/seeds.rb:10:81: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
User.create(:full_name => 'Holland McQuaid', :email => "HollandMcQ2@gmail.com", :role => "admin", :attendance_count => 1, :has_paid_dues => true);
                                                                                ^^^^^^^^
db/seeds.rb:10:90: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
User.create(:full_name => 'Holland McQuaid', :email => "HollandMcQ2@gmail.com", :role => "admin", :attendance_count => 1, :has_paid_dues => true);
                                                                                         ^^^^^^^
db/seeds.rb:10:99: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
User.create(:full_name => 'Holland McQuaid', :email => "HollandMcQ2@gmail.com", :role => "admin", :attendance_count => 1, :has_paid_dues => true);
                                                                                                  ^^^^^^^^^^^^^^^^^^^^
db/seeds.rb:10:121: C: [Correctable] Layout/LineLength: Line is too long. [146/120]
User.create(:full_name => 'Holland McQuaid', :email => "HollandMcQ2@gmail.com", :role => "admin", :attendance_count => 1, :has_paid_dues => true);
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^
db/seeds.rb:10:123: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
User.create(:full_name => 'Holland McQuaid', :email => "HollandMcQ2@gmail.com", :role => "admin", :attendance_count => 1, :has_paid_dues => true);
                                                                                                                          ^^^^^^^^^^^^^^^^^
db/seeds.rb:10:146: C: [Correctable] Style/Semicolon: Do not use semicolons to terminate expressions.
User.create(:full_name => 'Holland McQuaid', :email => "HollandMcQ2@gmail.com", :role => "admin", :attendance_count => 1, :has_paid_dues => true);
                                                                                                                                                 ^
db/seeds.rb:11:13: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
User.create(:full_name => 'Elaine Mo', :email => "kakashiandflute@gmail.com", :role => "admin");
            ^^^^^^^^^^^^^
db/seeds.rb:11:40: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
User.create(:full_name => 'Elaine Mo', :email => "kakashiandflute@gmail.com", :role => "admin");
                                       ^^^^^^^^^
db/seeds.rb:11:50: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
User.create(:full_name => 'Elaine Mo', :email => "kakashiandflute@gmail.com", :role => "admin");
                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/seeds.rb:11:79: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
User.create(:full_name => 'Elaine Mo', :email => "kakashiandflute@gmail.com", :role => "admin");
                                                                              ^^^^^^^^
db/seeds.rb:11:88: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
User.create(:full_name => 'Elaine Mo', :email => "kakashiandflute@gmail.com", :role => "admin");
                                                                                       ^^^^^^^
db/seeds.rb:11:96: C: [Correctable] Style/Semicolon: Do not use semicolons to terminate expressions.
User.create(:full_name => 'Elaine Mo', :email => "kakashiandflute@gmail.com", :role => "admin");
                                                                                               ^
db/seeds.rb:12:13: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
User.create(:full_name => 'John Knapp', :email => "jmichaelknapp@gmail.com", :role => "admin");
            ^^^^^^^^^^^^^
db/seeds.rb:12:41: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
User.create(:full_name => 'John Knapp', :email => "jmichaelknapp@gmail.com", :role => "admin");
                                        ^^^^^^^^^
db/seeds.rb:12:51: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
User.create(:full_name => 'John Knapp', :email => "jmichaelknapp@gmail.com", :role => "admin");
                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^
db/seeds.rb:12:78: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
User.create(:full_name => 'John Knapp', :email => "jmichaelknapp@gmail.com", :role => "admin");
                                                                             ^^^^^^^^
db/seeds.rb:12:87: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
User.create(:full_name => 'John Knapp', :email => "jmichaelknapp@gmail.com", :role => "admin");
                                                                                      ^^^^^^^
db/seeds.rb:12:95: C: [Correctable] Style/Semicolon: Do not use semicolons to terminate expressions.
User.create(:full_name => 'John Knapp', :email => "jmichaelknapp@gmail.com", :role => "admin");
                                                                                              ^
db/seeds.rb:13:17: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
Semester.create(:name => 'Spring 2022', :start => Date.new(2022,1,22), :end=> Date.new(2022,5,14), :duescost => 200.00)
                ^^^^^^^^
db/seeds.rb:13:41: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
Semester.create(:name => 'Spring 2022', :start => Date.new(2022,1,22), :end=> Date.new(2022,5,14), :duescost => 200.00)
                                        ^^^^^^^^^
db/seeds.rb:13:64: C: [Correctable] Layout/SpaceAfterComma: Space missing after comma.
Semester.create(:name => 'Spring 2022', :start => Date.new(2022,1,22), :end=> Date.new(2022,5,14), :duescost => 200.00)
                                                               ^
db/seeds.rb:13:66: C: [Correctable] Layout/SpaceAfterComma: Space missing after comma.
Semester.create(:name => 'Spring 2022', :start => Date.new(2022,1,22), :end=> Date.new(2022,5,14), :duescost => 200.00)
                                                                 ^
db/seeds.rb:13:72: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
Semester.create(:name => 'Spring 2022', :start => Date.new(2022,1,22), :end=> Date.new(2022,5,14), :duescost => 200.00)
                                                                       ^^^^^^
db/seeds.rb:13:76: C: [Correctable] Layout/SpaceAroundOperators: Surrounding space missing for operator =>.
Semester.create(:name => 'Spring 2022', :start => Date.new(2022,1,22), :end=> Date.new(2022,5,14), :duescost => 200.00)
                                                                           ^^
db/seeds.rb:13:92: C: [Correctable] Layout/SpaceAfterComma: Space missing after comma.
Semester.create(:name => 'Spring 2022', :start => Date.new(2022,1,22), :end=> Date.new(2022,5,14), :duescost => 200.00)
                                                                                           ^
db/seeds.rb:13:94: C: [Correctable] Layout/SpaceAfterComma: Space missing after comma.
Semester.create(:name => 'Spring 2022', :start => Date.new(2022,1,22), :end=> Date.new(2022,5,14), :duescost => 200.00)
                                                                                             ^
db/seeds.rb:13:100: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
Semester.create(:name => 'Spring 2022', :start => Date.new(2022,1,22), :end=> Date.new(2022,5,14), :duescost => 200.00)
                                                                                                   ^^^^^^^^^^^^
db/seeds.rb:14:13: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
User.create(:full_name => 'John Tester', :email => "t3ster219@gmail.com", :role => "admin");
            ^^^^^^^^^^^^^
db/seeds.rb:14:42: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
User.create(:full_name => 'John Tester', :email => "t3ster219@gmail.com", :role => "admin");
                                         ^^^^^^^^^
db/seeds.rb:14:52: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
User.create(:full_name => 'John Tester', :email => "t3ster219@gmail.com", :role => "admin");
                                                   ^^^^^^^^^^^^^^^^^^^^^
db/seeds.rb:14:75: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
User.create(:full_name => 'John Tester', :email => "t3ster219@gmail.com", :role => "admin");
                                                                          ^^^^^^^^
db/seeds.rb:14:84: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
User.create(:full_name => 'John Tester', :email => "t3ster219@gmail.com", :role => "admin");
                                                                                   ^^^^^^^
db/seeds.rb:14:92: C: [Correctable] Style/Semicolon: Do not use semicolons to terminate expressions.
User.create(:full_name => 'John Tester', :email => "t3ster219@gmail.com", :role => "admin");
                                                                                           ^
db/seeds.rb:15:13: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
User.create(:full_name => 'Johnathan Torres', :email => "torres404@tamu.edu", :role => "admin");
            ^^^^^^^^^^^^^
db/seeds.rb:15:47: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
User.create(:full_name => 'Johnathan Torres', :email => "torres404@tamu.edu", :role => "admin");
                                              ^^^^^^^^^
db/seeds.rb:15:57: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
User.create(:full_name => 'Johnathan Torres', :email => "torres404@tamu.edu", :role => "admin");
                                                        ^^^^^^^^^^^^^^^^^^^^
db/seeds.rb:15:79: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
User.create(:full_name => 'Johnathan Torres', :email => "torres404@tamu.edu", :role => "admin");
                                                                              ^^^^^^^^
db/seeds.rb:15:88: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
User.create(:full_name => 'Johnathan Torres', :email => "torres404@tamu.edu", :role => "admin");
                                                                                       ^^^^^^^
db/seeds.rb:15:96: C: [Correctable] Style/Semicolon: Do not use semicolons to terminate expressions.
User.create(:full_name => 'Johnathan Torres', :email => "torres404@tamu.edu", :role => "admin");
                                                                                               ^
db/seeds.rb:16:20: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
User.find_by_email("kakashiandflute@gmail.com").update(:role => 'president')
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/seeds.rb:16:56: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
User.find_by_email("kakashiandflute@gmail.com").update(:role => 'president')
                                                       ^^^^^^^^
db/seeds.rb:18:14: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
Event.create(:name => 'Test Event', :password => "testEventPassword", :description => 'This is a test event', :time => '2022-03-04', :end_time => '2022-03-5', :link => "www.google.com", :location => 'Test Location', :is_mandatory => true, :is_recurring => false);
             ^^^^^^^^
db/seeds.rb:18:37: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
Event.create(:name => 'Test Event', :password => "testEventPassword", :description => 'This is a test event', :time => '2022-03-04', :end_time => '2022-03-5', :link => "www.google.com", :location => 'Test Location', :is_mandatory => true, :is_recurring => false);
                                    ^^^^^^^^^^^^
db/seeds.rb:18:50: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
Event.create(:name => 'Test Event', :password => "testEventPassword", :description => 'This is a test event', :time => '2022-03-04', :end_time => '2022-03-5', :link => "www.google.com", :location => 'Test Location', :is_mandatory => true, :is_recurring => false);
                                                 ^^^^^^^^^^^^^^^^^^^
db/seeds.rb:18:71: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
Event.create(:name => 'Test Event', :password => "testEventPassword", :description => 'This is a test event', :time => '2022-03-04', :end_time => '2022-03-5', :link => "www.google.com", :location => 'Test Location', :is_mandatory => true, :is_recurring => false);
                                                                      ^^^^^^^^^^^^^^^
db/seeds.rb:18:111: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
Event.create(:name => 'Test Event', :password => "testEventPassword", :description => 'This is a test event', :time => '2022-03-04', :end_time => '2022-03-5', :link => "www.google.com", :location => 'Test Location', :is_mandatory => true, :is_recurring => false);
                                                                                                              ^^^^^^^^
db/seeds.rb:18:121: C: [Correctable] Layout/LineLength: Line is too long. [263/120]
Event.create(:name => 'Test Event', :password => "testEventPassword", :description => 'This is a test event', :time => '2022-03-04', :end_time => '2022-03-5', :link => "www.google.com", :location => 'Test Location', :is_mandatory => true, :is_recurring => false);
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/seeds.rb:18:134: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
Event.create(:name => 'Test Event', :password => "testEventPassword", :description => 'This is a test event', :time => '2022-03-04', :end_time => '2022-03-5', :link => "www.google.com", :location => 'Test Location', :is_mandatory => true, :is_recurring => false);
                                                                                                                                     ^^^^^^^^^^^^
db/seeds.rb:18:160: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
Event.create(:name => 'Test Event', :password => "testEventPassword", :description => 'This is a test event', :time => '2022-03-04', :end_time => '2022-03-5', :link => "www.google.com", :location => 'Test Location', :is_mandatory => true, :is_recurring => false);
                                                                                                                                                               ^^^^^^^^
db/seeds.rb:18:169: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
Event.create(:name => 'Test Event', :password => "testEventPassword", :description => 'This is a test event', :time => '2022-03-04', :end_time => '2022-03-5', :link => "www.google.com", :location => 'Test Location', :is_mandatory => true, :is_recurring => false);
                                                                                                                                                                        ^^^^^^^^^^^^^^^^
db/seeds.rb:18:187: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
Event.create(:name => 'Test Event', :password => "testEventPassword", :description => 'This is a test event', :time => '2022-03-04', :end_time => '2022-03-5', :link => "www.google.com", :location => 'Test Location', :is_mandatory => true, :is_recurring => false);
                                                                                                                                                                                          ^^^^^^^^^^^^
db/seeds.rb:18:217: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
Event.create(:name => 'Test Event', :password => "testEventPassword", :description => 'This is a test event', :time => '2022-03-04', :end_time => '2022-03-5', :link => "www.google.com", :location => 'Test Location', :is_mandatory => true, :is_recurring => false);
                                                                                                                                                                                                                        ^^^^^^^^^^^^^^^^
db/seeds.rb:18:240: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
Event.create(:name => 'Test Event', :password => "testEventPassword", :description => 'This is a test event', :time => '2022-03-04', :end_time => '2022-03-5', :link => "www.google.com", :location => 'Test Location', :is_mandatory => true, :is_recurring => false);
                                                                                                                                                                                                                                               ^^^^^^^^^^^^^^^^
db/seeds.rb:18:263: C: [Correctable] Style/Semicolon: Do not use semicolons to terminate expressions.
Event.create(:name => 'Test Event', :password => "testEventPassword", :description => 'This is a test event', :time => '2022-03-04', :end_time => '2022-03-5', :link => "www.google.com", :location => 'Test Location', :is_mandatory => true, :is_recurring => false);
                                                                                                                                                                                                                                                                      ^
db/seeds.rb:19:14: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
Event.create(:name => 'Test Event2', :password => "password", :description => 'This is a test event', :time => '2022-03-05', :end_time => '2022-03-6', :link => "www.google.com", :location => 'Test Location2', :is_mandatory => true, :is_recurring => false);
             ^^^^^^^^
db/seeds.rb:19:38: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
Event.create(:name => 'Test Event2', :password => "password", :description => 'This is a test event', :time => '2022-03-05', :end_time => '2022-03-6', :link => "www.google.com", :location => 'Test Location2', :is_mandatory => true, :is_recurring => false);
                                     ^^^^^^^^^^^^
db/seeds.rb:19:51: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
Event.create(:name => 'Test Event2', :password => "password", :description => 'This is a test event', :time => '2022-03-05', :end_time => '2022-03-6', :link => "www.google.com", :location => 'Test Location2', :is_mandatory => true, :is_recurring => false);
                                                  ^^^^^^^^^^
db/seeds.rb:19:63: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
Event.create(:name => 'Test Event2', :password => "password", :description => 'This is a test event', :time => '2022-03-05', :end_time => '2022-03-6', :link => "www.google.com", :location => 'Test Location2', :is_mandatory => true, :is_recurring => false);
                                                              ^^^^^^^^^^^^^^^
db/seeds.rb:19:103: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
Event.create(:name => 'Test Event2', :password => "password", :description => 'This is a test event', :time => '2022-03-05', :end_time => '2022-03-6', :link => "www.google.com", :location => 'Test Location2', :is_mandatory => true, :is_recurring => false);
                                                                                                      ^^^^^^^^
db/seeds.rb:19:121: C: [Correctable] Layout/LineLength: Line is too long. [256/120]
Event.create(:name => 'Test Event2', :password => "password", :description => 'This is a test event', :time => '2022-03-05', :end_time => '2022-03-6', :link => "www.google.com", :location => 'Test Location2', :is_mandatory => true, :is_recurring => false);
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/seeds.rb:19:126: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
Event.create(:name => 'Test Event2', :password => "password", :description => 'This is a test event', :time => '2022-03-05', :end_time => '2022-03-6', :link => "www.google.com", :location => 'Test Location2', :is_mandatory => true, :is_recurring => false);
                                                                                                                             ^^^^^^^^^^^^
db/seeds.rb:19:152: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
Event.create(:name => 'Test Event2', :password => "password", :description => 'This is a test event', :time => '2022-03-05', :end_time => '2022-03-6', :link => "www.google.com", :location => 'Test Location2', :is_mandatory => true, :is_recurring => false);
                                                                                                                                                       ^^^^^^^^
db/seeds.rb:19:161: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
Event.create(:name => 'Test Event2', :password => "password", :description => 'This is a test event', :time => '2022-03-05', :end_time => '2022-03-6', :link => "www.google.com", :location => 'Test Location2', :is_mandatory => true, :is_recurring => false);
                                                                                                                                                                ^^^^^^^^^^^^^^^^
db/seeds.rb:19:179: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
Event.create(:name => 'Test Event2', :password => "password", :description => 'This is a test event', :time => '2022-03-05', :end_time => '2022-03-6', :link => "www.google.com", :location => 'Test Location2', :is_mandatory => true, :is_recurring => false);
                                                                                                                                                                                  ^^^^^^^^^^^^
db/seeds.rb:19:210: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
Event.create(:name => 'Test Event2', :password => "password", :description => 'This is a test event', :time => '2022-03-05', :end_time => '2022-03-6', :link => "www.google.com", :location => 'Test Location2', :is_mandatory => true, :is_recurring => false);
                                                                                                                                                                                                                 ^^^^^^^^^^^^^^^^
db/seeds.rb:19:233: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
Event.create(:name => 'Test Event2', :password => "password", :description => 'This is a test event', :time => '2022-03-05', :end_time => '2022-03-6', :link => "www.google.com", :location => 'Test Location2', :is_mandatory => true, :is_recurring => false);
                                                                                                                                                                                                                                        ^^^^^^^^^^^^^^^^
db/seeds.rb:19:256: C: [Correctable] Style/Semicolon: Do not use semicolons to terminate expressions.
Event.create(:name => 'Test Event2', :password => "password", :description => 'This is a test event', :time => '2022-03-05', :end_time => '2022-03-6', :link => "www.google.com", :location => 'Test Location2', :is_mandatory => true, :is_recurring => false);
                                                                                                                                                                                                                                                               ^
db/seeds.rb:20:14: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
Event.create(:name => 'Test Event3', :password => "password", :description => 'This is a test event', :time => '2022-03-06', :end_time => '2022-03-7', :link => "www.google.com", :location => 'Test Location3', :is_mandatory => true, :is_recurring => false);
             ^^^^^^^^
db/seeds.rb:20:38: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
Event.create(:name => 'Test Event3', :password => "password", :description => 'This is a test event', :time => '2022-03-06', :end_time => '2022-03-7', :link => "www.google.com", :location => 'Test Location3', :is_mandatory => true, :is_recurring => false);
                                     ^^^^^^^^^^^^
db/seeds.rb:20:51: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
Event.create(:name => 'Test Event3', :password => "password", :description => 'This is a test event', :time => '2022-03-06', :end_time => '2022-03-7', :link => "www.google.com", :location => 'Test Location3', :is_mandatory => true, :is_recurring => false);
                                                  ^^^^^^^^^^
db/seeds.rb:20:63: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
Event.create(:name => 'Test Event3', :password => "password", :description => 'This is a test event', :time => '2022-03-06', :end_time => '2022-03-7', :link => "www.google.com", :location => 'Test Location3', :is_mandatory => true, :is_recurring => false);
                                                              ^^^^^^^^^^^^^^^
db/seeds.rb:20:103: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
Event.create(:name => 'Test Event3', :password => "password", :description => 'This is a test event', :time => '2022-03-06', :end_time => '2022-03-7', :link => "www.google.com", :location => 'Test Location3', :is_mandatory => true, :is_recurring => false);
                                                                                                      ^^^^^^^^
db/seeds.rb:20:121: C: [Correctable] Layout/LineLength: Line is too long. [256/120]
Event.create(:name => 'Test Event3', :password => "password", :description => 'This is a test event', :time => '2022-03-06', :end_time => '2022-03-7', :link => "www.google.com", :location => 'Test Location3', :is_mandatory => true, :is_recurring => false);
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/seeds.rb:20:126: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
Event.create(:name => 'Test Event3', :password => "password", :description => 'This is a test event', :time => '2022-03-06', :end_time => '2022-03-7', :link => "www.google.com", :location => 'Test Location3', :is_mandatory => true, :is_recurring => false);
                                                                                                                             ^^^^^^^^^^^^
db/seeds.rb:20:152: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
Event.create(:name => 'Test Event3', :password => "password", :description => 'This is a test event', :time => '2022-03-06', :end_time => '2022-03-7', :link => "www.google.com", :location => 'Test Location3', :is_mandatory => true, :is_recurring => false);
                                                                                                                                                       ^^^^^^^^
db/seeds.rb:20:161: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
Event.create(:name => 'Test Event3', :password => "password", :description => 'This is a test event', :time => '2022-03-06', :end_time => '2022-03-7', :link => "www.google.com", :location => 'Test Location3', :is_mandatory => true, :is_recurring => false);
                                                                                                                                                                ^^^^^^^^^^^^^^^^
db/seeds.rb:20:179: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
Event.create(:name => 'Test Event3', :password => "password", :description => 'This is a test event', :time => '2022-03-06', :end_time => '2022-03-7', :link => "www.google.com", :location => 'Test Location3', :is_mandatory => true, :is_recurring => false);
                                                                                                                                                                                  ^^^^^^^^^^^^
db/seeds.rb:20:210: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
Event.create(:name => 'Test Event3', :password => "password", :description => 'This is a test event', :time => '2022-03-06', :end_time => '2022-03-7', :link => "www.google.com", :location => 'Test Location3', :is_mandatory => true, :is_recurring => false);
                                                                                                                                                                                                                 ^^^^^^^^^^^^^^^^
db/seeds.rb:20:233: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
Event.create(:name => 'Test Event3', :password => "password", :description => 'This is a test event', :time => '2022-03-06', :end_time => '2022-03-7', :link => "www.google.com", :location => 'Test Location3', :is_mandatory => true, :is_recurring => false);
                                                                                                                                                                                                                                        ^^^^^^^^^^^^^^^^
db/seeds.rb:20:256: C: [Correctable] Style/Semicolon: Do not use semicolons to terminate expressions.
Event.create(:name => 'Test Event3', :password => "password", :description => 'This is a test event', :time => '2022-03-06', :end_time => '2022-03-7', :link => "www.google.com", :location => 'Test Location3', :is_mandatory => true, :is_recurring => false);
                                                                                                                                                                                                                                                               ^
db/seeds.rb:21:18: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
EventUser.create(:user_id => 2, :event_id => 1, :attended => true);
                 ^^^^^^^^^^^
db/seeds.rb:21:33: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
EventUser.create(:user_id => 2, :event_id => 1, :attended => true);
                                ^^^^^^^^^^^^
db/seeds.rb:21:49: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
EventUser.create(:user_id => 2, :event_id => 1, :attended => true);
                                                ^^^^^^^^^^^^
db/seeds.rb:21:67: C: [Correctable] Style/Semicolon: Do not use semicolons to terminate expressions.
EventUser.create(:user_id => 2, :event_id => 1, :attended => true);
                                                                  ^
db/seeds.rb:23:99: C: [Correctable] Style/Semicolon: Do not use semicolons to terminate expressions.
SemesterUser.create(semester_id: Semester.all.last.id, user_id: User.all.last.id, paid_dues: true);
                                                                                                  ^
db/seeds.rb:24:17: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
HomePage.create(:heading => 'Howdy', :summary => 'Hello');
                ^^^^^^^^^^^
db/seeds.rb:24:38: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
HomePage.create(:heading => 'Howdy', :summary => 'Hello');
                                     ^^^^^^^^^^^
db/seeds.rb:24:58: C: [Correctable] Style/Semicolon: Do not use semicolons to terminate expressions.
HomePage.create(:heading => 'Howdy', :summary => 'Hello');
                                                         ^
db/seeds.rb:25:121: C: [Correctable] Layout/LineLength: Line is too long. [156/120]
PaymentAccount.create(internal_name: 'Default Account', payment_address: 'AZ7cvFNlXaeTjUVqghWxEaqvBuJEHCz3BKwX7fksAdrleR1tqTQksTwO9oI6NgB3_k7Pb9XstqeIBuIW')
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/payments.rake:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
namespace :payments do
^
lib/tasks/payments.rake:2:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  desc "Resetting Payments"
       ^^^^^^^^^^^^^^^^^^^^
lib/tasks/payments.rake:4:26: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    sem = Semester.where(:end => Date.today)
                         ^^^^^^^
lib/tasks/payments.rake:5:8: C: [Correctable] Style/NumericPredicate: Use sem.length.positive? instead of sem.length > 0.
    if sem.length > 0 
       ^^^^^^^^^^^^^^
lib/tasks/payments.rake:5:8: C: [Correctable] Style/ZeroLengthPredicate: Use !empty? instead of length > 0.
    if sem.length > 0 
       ^^^^^^^^^^^^^^
lib/tasks/payments.rake:5:22: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
    if sem.length > 0 
                     ^
lib/tasks/payments.rake:7:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      puts "User payment status reset"
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/payments.rake:8:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
lib/tasks/payments.rake:10:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      puts "Payments not reset today."
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/payments.rake:11:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
lib/tasks/payments.rake:14:1: C: [Correctable] Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body end.
spec/feature/integration_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/feature/integration_spec.rb:7:27: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
    if HomePage.count < 1 #needed because the test database resets after every single test and deletes seed
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:8:35: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      @homepage = HomePage.create(:heading => 'Howdy', :summary => 'Hello');
                                  ^^^^^^^^^^^
spec/feature/integration_spec.rb:8:56: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      @homepage = HomePage.create(:heading => 'Howdy', :summary => 'Hello');
                                                       ^^^^^^^^^^^
spec/feature/integration_spec.rb:8:76: C: [Correctable] Style/Semicolon: Do not use semicolons to terminate expressions.
      @homepage = HomePage.create(:heading => 'Howdy', :summary => 'Hello');
                                                                           ^
spec/feature/integration_spec.rb:17:35: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    expect(page).to have_selector ".btn-primary"
                                  ^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:21:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.
spec/feature/integration_spec.rb:25:37: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
#   scenario 'shows logged out view' 
                                    ^
spec/feature/integration_spec.rb:30:6: C: [Correctable] Layout/TrailingEmptyLines: Final newline missing.
# end
     
spec/helpers/contact_form_helper_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/helpers/payment_accounts_helper_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/helpers/semesters_helper_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/mailers/event_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require "rails_helper"
^
spec/mailers/event_spec.rb:1:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "rails_helper"
        ^^^^^^^^^^^^^^
spec/mailers/event_spec.rb:2:1: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
#require "test_helper"
^^^^^^^^^^^^^^^^^^^^^^
spec/mailers/event_spec.rb:4:1: C: Metrics/BlockLength: Block has too many lines. [53/25]
RSpec.describe EventMailer, type: :mailer do ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/mailers/event_spec.rb:5:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
spec/mailers/event_spec.rb:5:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
spec/mailers/event_spec.rb:6:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	before(:context) do
^
spec/mailers/event_spec.rb:6:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
	before(:context) do
^
spec/mailers/event_spec.rb:7:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		User.create!([
^^
spec/mailers/event_spec.rb:7:2: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
		User.create!([
 ^
spec/mailers/event_spec.rb:8:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
			full_name: "John Knapp",
^^^
spec/mailers/event_spec.rb:8:4: C: [Correctable] Layout/FirstArrayElementIndentation: Use 2 spaces for indentation in an array, relative to the first position after the preceding left parenthesis.
			full_name: "John Knapp", ...
   ^^^^^^^^^^^^^^^^^^^^^^^^
spec/mailers/event_spec.rb:8:15: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
			full_name: "John Knapp",
              ^^^^^^^^^^^^
spec/mailers/event_spec.rb:9:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
			email: "jmichaelknapp@gmail.com",
^^^
spec/mailers/event_spec.rb:9:11: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
			email: "jmichaelknapp@gmail.com",
          ^^^^^^^^^^^^^^^^^^^^^^^^^
spec/mailers/event_spec.rb:10:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
			role: "admin"
^^^
spec/mailers/event_spec.rb:10:10: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
			role: "admin"
         ^^^^^^^
spec/mailers/event_spec.rb:11:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		])
^^
spec/mailers/event_spec.rb:11:3: C: [Correctable] Layout/FirstArrayElementIndentation: Indent the right bracket the same as the first position after the preceding left parenthesis.
		])
  ^
spec/mailers/event_spec.rb:12:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		Event.create!(
^^
spec/mailers/event_spec.rb:13:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
			:name => 'Test Event',
^^^
spec/mailers/event_spec.rb:13:4: C: [Correctable] Layout/FirstArgumentIndentation: Indent the first argument one step more than the start of the previous line.
			:name => 'Test Event', ...
   ^^^^^^^^^^^^^^^^^^^^^^
spec/mailers/event_spec.rb:13:4: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
			:name => 'Test Event',
   ^^^^^^^^
spec/mailers/event_spec.rb:14:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
			:password => "testEventPassword",
^^^
spec/mailers/event_spec.rb:14:4: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
			:password => "testEventPassword",
   ^^^^^^^^^^^^
spec/mailers/event_spec.rb:14:17: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
			:password => "testEventPassword",
                ^^^^^^^^^^^^^^^^^^^
spec/mailers/event_spec.rb:15:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
			:description => 'This is a test event',
^^^
spec/mailers/event_spec.rb:15:4: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
			:description => 'This is a test event',
   ^^^^^^^^^^^^^^^
spec/mailers/event_spec.rb:16:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
			:time => '2022-03-04',
^^^
spec/mailers/event_spec.rb:16:4: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
			:time => '2022-03-04',
   ^^^^^^^^
spec/mailers/event_spec.rb:17:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
			:link => "www.google.com",
^^^
spec/mailers/event_spec.rb:17:4: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
			:link => "www.google.com",
   ^^^^^^^^
spec/mailers/event_spec.rb:17:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
			:link => "www.google.com",
            ^^^^^^^^^^^^^^^^
spec/mailers/event_spec.rb:18:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
			:location => 'Test Location',
^^^
spec/mailers/event_spec.rb:18:4: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
			:location => 'Test Location',
   ^^^^^^^^^^^^
spec/mailers/event_spec.rb:19:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
			:is_mandatory => true,
^^^
spec/mailers/event_spec.rb:19:4: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
			:is_mandatory => true,
   ^^^^^^^^^^^^^^^^
spec/mailers/event_spec.rb:20:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
			:is_recurring => false
^^^
spec/mailers/event_spec.rb:20:4: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
			:is_recurring => false
   ^^^^^^^^^^^^^^^^
spec/mailers/event_spec.rb:21:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		);
^^
spec/mailers/event_spec.rb:21:3: C: [Correctable] Layout/ClosingParenthesisIndentation: Indent ) to column 1 (not 2)
		);
  ^
spec/mailers/event_spec.rb:21:4: C: [Correctable] Style/Semicolon: Do not use semicolons to terminate expressions.
		);
   ^
spec/mailers/event_spec.rb:22:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		@event = Event.all.first
^^
spec/mailers/event_spec.rb:23:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	end
^
spec/mailers/event_spec.rb:25:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	before(:example) do
^
spec/mailers/event_spec.rb:26:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		@user = User.find_by(full_name: "John Knapp")
^^
spec/mailers/event_spec.rb:26:2: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
		@user = User.find_by(full_name: "John Knapp")
 ^
spec/mailers/event_spec.rb:26:35: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
		@user = User.find_by(full_name: "John Knapp")
                                  ^^^^^^^^^^^^
spec/mailers/event_spec.rb:27:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		#p @user
^^
spec/mailers/event_spec.rb:27:3: C: [Correctable] Layout/CommentIndentation: Incorrect indentation detected (column 2 instead of 3).
		#p @user
  ^^^^^^^^
spec/mailers/event_spec.rb:27:3: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
		#p @user
  ^^^^^^^^
spec/mailers/event_spec.rb:28:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	end
^
spec/mailers/event_spec.rb:30:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	after(:example) do
^
spec/mailers/event_spec.rb:31:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		ActionMailer::Base.deliveries.clear
^^
spec/mailers/event_spec.rb:31:2: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
		ActionMailer::Base.deliveries.clear
 ^
spec/mailers/event_spec.rb:32:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	end
^
spec/mailers/event_spec.rb:34:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	after(:context) do
^
spec/mailers/event_spec.rb:35:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		User.find_by(full_name: "John Knapp").destroy!
^^
spec/mailers/event_spec.rb:35:2: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
		User.find_by(full_name: "John Knapp").destroy!
 ^
spec/mailers/event_spec.rb:35:27: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
		User.find_by(full_name: "John Knapp").destroy!
                          ^^^^^^^^^^^^
spec/mailers/event_spec.rb:36:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	end
^
spec/mailers/event_spec.rb:38:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	it "can create a test email and send it internally" do
^
spec/mailers/event_spec.rb:38:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
	it "can create a test email and send it internally" do
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/mailers/event_spec.rb:39:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		email = EventMailer.test_email(@user)
^^
spec/mailers/event_spec.rb:39:2: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
		email = EventMailer.test_email(@user)
 ^
spec/mailers/event_spec.rb:41:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		email.deliver_now
^^
spec/mailers/event_spec.rb:42:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		expect(ActionMailer::Base.deliveries.size).to eq(1)
^^
spec/mailers/event_spec.rb:43:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	end
^
spec/mailers/event_spec.rb:45:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	it "can accept parameters via Controller call", type: :request do
^
spec/mailers/event_spec.rb:45:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
	it "can accept parameters via Controller call", type: :request do
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/mailers/event_spec.rb:46:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		post notify_event_path(@event.id), params: {}
^^
spec/mailers/event_spec.rb:46:2: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
		post notify_event_path(@event.id), params: {}
 ^
spec/mailers/event_spec.rb:47:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		expect(ActionMailer::Base.deliveries.size).to eq(1)
^^
spec/mailers/event_spec.rb:48:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		#puts ActionMailer::Base.deliveries.last.body.to_s
^^
spec/mailers/event_spec.rb:48:3: C: [Correctable] Layout/CommentIndentation: Incorrect indentation detected (column 2 instead of 3).
		#puts ActionMailer::Base.deliveries.last.body.to_s
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/mailers/event_spec.rb:48:3: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
		#puts ActionMailer::Base.deliveries.last.body.to_s
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/mailers/event_spec.rb:49:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	end
^
spec/mailers/event_spec.rb:51:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	it "sends the correct subject and contents to the correct address", type: :request do
^
spec/mailers/event_spec.rb:51:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
	it "sends the correct subject and contents to the correct address", type: :request do
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/mailers/event_spec.rb:52:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		post notify_event_path(@event.id), params: {}
^^
spec/mailers/event_spec.rb:52:2: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
		post notify_event_path(@event.id), params: {}
 ^
spec/mailers/event_spec.rb:53:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		mail = ActionMailer::Base.deliveries.last
^^
spec/mailers/event_spec.rb:54:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		expect(mail.to).to include(@user.email)
^^
spec/mailers/event_spec.rb:55:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		expect(mail.subject).to match(@event.name)
^^
spec/mailers/event_spec.rb:56:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		expect(mail.body).to match(@event.time.to_s)
^^
spec/mailers/event_spec.rb:57:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		expect(mail.body).to match(@event.location)
^^
spec/mailers/event_spec.rb:58:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	end
^
spec/mailers/event_spec.rb:60:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	it "allows the subject and body to be passed in via post request", type: :request do
^
spec/mailers/event_spec.rb:60:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
	it "allows the subject and body to be passed in via post request", type: :request do
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/mailers/event_spec.rb:61:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		post notify_event_path(@event.id), params: {
^^
spec/mailers/event_spec.rb:61:2: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
		post notify_event_path(@event.id), params: {
 ^
spec/mailers/event_spec.rb:62:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
			subject: "Secret Event Notification",
^^^
spec/mailers/event_spec.rb:62:4: C: [Correctable] Layout/FirstHashElementIndentation: Use 2 spaces for indentation in a hash, relative to the start of the line where the left curly brace is.
			subject: "Secret Event Notification",
   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/mailers/event_spec.rb:62:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
			subject: "Secret Event Notification",
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/mailers/event_spec.rb:63:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
			body: "This is a notification for an event, but it's secret, so I can't tell you what it is."
^^^
spec/mailers/event_spec.rb:64:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		}
^^
spec/mailers/event_spec.rb:65:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		mail = ActionMailer::Base.deliveries.last
^^
spec/mailers/event_spec.rb:66:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		expect(mail.subject).to eq("Secret Event Notification")
^^
spec/mailers/event_spec.rb:66:30: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
		expect(mail.subject).to eq("Secret Event Notification")
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/mailers/event_spec.rb:67:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		expect(mail.body).to eq("This is a notification for an event, but it's secret, so I can't tell you what it is.")
^^
spec/mailers/event_spec.rb:68:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	end
^
spec/mailers/event_spec.rb:69:1: C: [Correctable] Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body end.
spec/mailers/previews/event_preview.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# Preview all emails at http://localhost:3000/rails/mailers/event
^
spec/mailers/previews/event_preview.rb:3:1: C: [Correctable] Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body beginning.
spec/models/about_us_page_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/models/contact_form_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/models/event_user_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/models/home_page_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/models/officer_bio_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/models/payment_account_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/models/semester_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/models/semester_spec.rb:5:1: C: Metrics/BlockLength: Block has too many lines. [45/25]
RSpec.describe Semester, type: :model do ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/semester_spec.rb:6:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	subject do
^
spec/models/semester_spec.rb:6:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
	subject do
^
spec/models/semester_spec.rb:7:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		described_class.new(
^^
spec/models/semester_spec.rb:7:2: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
		described_class.new(
 ^
spec/models/semester_spec.rb:8:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
			name: 'Spring 2022',
^^^
spec/models/semester_spec.rb:8:4: C: [Correctable] Layout/FirstArgumentIndentation: Indent the first argument one step more than the start of the previous line.
			name: 'Spring 2022', ...
   ^^^^^^^^^^^^^^^^^^^^
spec/models/semester_spec.rb:9:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
			start: Date.new(2022,1,16),
^^^
spec/models/semester_spec.rb:9:24: C: [Correctable] Layout/SpaceAfterComma: Space missing after comma.
			start: Date.new(2022,1,16),
                       ^
spec/models/semester_spec.rb:9:26: C: [Correctable] Layout/SpaceAfterComma: Space missing after comma.
			start: Date.new(2022,1,16),
                         ^
spec/models/semester_spec.rb:10:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
			end: Date.new(2022,5,7),
^^^
spec/models/semester_spec.rb:10:22: C: [Correctable] Layout/SpaceAfterComma: Space missing after comma.
			end: Date.new(2022,5,7),
                     ^
spec/models/semester_spec.rb:10:24: C: [Correctable] Layout/SpaceAfterComma: Space missing after comma.
			end: Date.new(2022,5,7),
                       ^
spec/models/semester_spec.rb:11:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
			duescost: 50.00
^^^
spec/models/semester_spec.rb:12:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		)
^^
spec/models/semester_spec.rb:12:3: C: [Correctable] Layout/ClosingParenthesisIndentation: Indent ) to column 1 (not 2)
		)
  ^
spec/models/semester_spec.rb:13:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	end
^
spec/models/semester_spec.rb:15:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	it "is valid with valid data" do
^
spec/models/semester_spec.rb:15:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
	it "is valid with valid data" do
    ^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/semester_spec.rb:16:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		expect(subject).to be_valid
^^
spec/models/semester_spec.rb:16:2: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
		expect(subject).to be_valid
 ^
spec/models/semester_spec.rb:17:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	end
^
spec/models/semester_spec.rb:18:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	it "is invalid without a name" do
^
spec/models/semester_spec.rb:18:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
	it "is invalid without a name" do
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/semester_spec.rb:19:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		old_name = subject.name
^^
spec/models/semester_spec.rb:19:2: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
		old_name = subject.name
 ^
spec/models/semester_spec.rb:20:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		subject.name = nil
^^
spec/models/semester_spec.rb:21:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		expect(subject).not_to be_valid
^^
spec/models/semester_spec.rb:22:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		subject.name = old_name
^^
spec/models/semester_spec.rb:23:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	end
^
spec/models/semester_spec.rb:24:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	it "is invalid without a start date" do
^
spec/models/semester_spec.rb:24:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
	it "is invalid without a start date" do
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/semester_spec.rb:25:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		old_start = subject.start
^^
spec/models/semester_spec.rb:25:2: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
		old_start = subject.start
 ^
spec/models/semester_spec.rb:26:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		subject.start = nil
^^
spec/models/semester_spec.rb:27:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		expect(subject).not_to be_valid
^^
spec/models/semester_spec.rb:28:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		subject.name = old_start
^^
spec/models/semester_spec.rb:29:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	end
^
spec/models/semester_spec.rb:30:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	it "is invalid without an end date" do
^
spec/models/semester_spec.rb:30:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
	it "is invalid without an end date" do
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/semester_spec.rb:31:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		old_end = subject.end
^^
spec/models/semester_spec.rb:31:2: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
		old_end = subject.end
 ^
spec/models/semester_spec.rb:32:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		subject.end = nil
^^
spec/models/semester_spec.rb:33:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		expect(subject).not_to be_valid
^^
spec/models/semester_spec.rb:34:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		subject.end = old_end
^^
spec/models/semester_spec.rb:35:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	end
^
spec/models/semester_spec.rb:37:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	it "can be saved in the database when valid" do
^
spec/models/semester_spec.rb:37:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
	it "can be saved in the database when valid" do
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/semester_spec.rb:38:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		subject.save
^^
spec/models/semester_spec.rb:38:2: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
		subject.save
 ^
spec/models/semester_spec.rb:39:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		expect(Semester.all).not_to be_empty
^^
spec/models/semester_spec.rb:40:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	end
^
spec/models/semester_spec.rb:41:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	it "can be retrieved from the database" do
^
spec/models/semester_spec.rb:41:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
	it "can be retrieved from the database" do
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/semester_spec.rb:42:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		subject.save
^^
spec/models/semester_spec.rb:42:2: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
		subject.save
 ^
spec/models/semester_spec.rb:43:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		@semester = Semester.all.first
^^
spec/models/semester_spec.rb:44:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		expect(@semester).not_to be_nil
^^
spec/models/semester_spec.rb:45:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	end
^
spec/models/semester_spec.rb:46:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	it "can be modified and saved to the database" do
^
spec/models/semester_spec.rb:46:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
	it "can be modified and saved to the database" do
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/semester_spec.rb:47:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		subject.save
^^
spec/models/semester_spec.rb:47:2: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
		subject.save
 ^
spec/models/semester_spec.rb:48:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		@semester = Semester.last
^^
spec/models/semester_spec.rb:49:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		@semester.duescost = 100.0
^^
spec/models/semester_spec.rb:50:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		@semester.save
^^
spec/models/semester_spec.rb:51:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		expect(Semester.last.duescost).to eq(100.0)
^^
spec/models/semester_spec.rb:52:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	end
^
spec/models/semester_user_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/rails_helper.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# This file is copied to spec/ when you run 'rails generate rspec:install'
^
spec/rails_helper.rb:5:7: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
abort("The Rails environment is running in production mode!") if Rails.env.production?
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/contact_form_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/requests/contact_form_spec.rb:3:1: C: Metrics/BlockLength: Block has too many lines. [52/25]
RSpec.describe "ContactForms", type: :request do ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/contact_form_spec.rb:3:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "ContactForms", type: :request do
               ^^^^^^^^^^^^^^
spec/requests/contact_form_spec.rb:4:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	describe "GET /new" do
^
spec/requests/contact_form_spec.rb:4:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
	describe "GET /new" do
^
spec/requests/contact_form_spec.rb:4:11: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
	describe "GET /new" do
          ^^^^^^^^^^
spec/requests/contact_form_spec.rb:5:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		it "returns http success" do
^^
spec/requests/contact_form_spec.rb:5:2: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
		it "returns http success" do
 ^
spec/requests/contact_form_spec.rb:5:6: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
		it "returns http success" do
     ^^^^^^^^^^^^^^^^^^^^^^
spec/requests/contact_form_spec.rb:6:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
			get "/contact_forms/new"
^^^
spec/requests/contact_form_spec.rb:6:3: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
			get "/contact_forms/new"
  ^
spec/requests/contact_form_spec.rb:6:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
			get "/contact_forms/new"
       ^^^^^^^^^^^^^^^^^^^^
spec/requests/contact_form_spec.rb:7:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
			expect(response).to have_http_status(:success)
^^^
spec/requests/contact_form_spec.rb:8:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		end
^^
spec/requests/contact_form_spec.rb:9:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	end
^
spec/requests/contact_form_spec.rb:11:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	describe "POST /#" do
^
spec/requests/contact_form_spec.rb:11:2: C: Metrics/BlockLength: Block has too many lines. [32/25]
	describe "POST /#" do ...
 ^^^^^^^^^^^^^^^^^^^^^
spec/requests/contact_form_spec.rb:11:11: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
	describe "POST /#" do
          ^^^^^^^^^
spec/requests/contact_form_spec.rb:12:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		it "returns http found in response to a valid message" do
^^
spec/requests/contact_form_spec.rb:12:2: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
		it "returns http found in response to a valid message" do
 ^
spec/requests/contact_form_spec.rb:12:6: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
		it "returns http found in response to a valid message" do
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/contact_form_spec.rb:13:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
			post "/contact_forms", params: {contact_form: {message: "test"}}
^^^
spec/requests/contact_form_spec.rb:13:3: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
			post "/contact_forms", params: {contact_form: {message: "test"}}
  ^
spec/requests/contact_form_spec.rb:13:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
			post "/contact_forms", params: {contact_form: {message: "test"}}
        ^^^^^^^^^^^^^^^^
spec/requests/contact_form_spec.rb:13:35: C: [Correctable] Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
			post "/contact_forms", params: {contact_form: {message: "test"}}
                                  ^
spec/requests/contact_form_spec.rb:13:50: C: [Correctable] Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
			post "/contact_forms", params: {contact_form: {message: "test"}}
                                                 ^
spec/requests/contact_form_spec.rb:13:60: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
			post "/contact_forms", params: {contact_form: {message: "test"}}
                                                           ^^^^^^
spec/requests/contact_form_spec.rb:13:66: C: [Correctable] Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
			post "/contact_forms", params: {contact_form: {message: "test"}}
                                                                 ^
spec/requests/contact_form_spec.rb:13:67: C: [Correctable] Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
			post "/contact_forms", params: {contact_form: {message: "test"}}
                                                                  ^
spec/requests/contact_form_spec.rb:14:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
			expect(response).to have_http_status(:found)
^^^
spec/requests/contact_form_spec.rb:15:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		end
^^
spec/requests/contact_form_spec.rb:17:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		it "saves a valid submitted form to the database" do
^^
spec/requests/contact_form_spec.rb:17:6: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
		it "saves a valid submitted form to the database" do
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/contact_form_spec.rb:18:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
			post contact_forms_path, params: {contact_form: {message: "this is a test message"}}
^^^
spec/requests/contact_form_spec.rb:18:3: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
			post contact_forms_path, params: {contact_form: {message: "this is a test message"}}
  ^
spec/requests/contact_form_spec.rb:18:37: C: [Correctable] Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
			post contact_forms_path, params: {contact_form: {message: "this is a test message"}}
                                    ^
spec/requests/contact_form_spec.rb:18:52: C: [Correctable] Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
			post contact_forms_path, params: {contact_form: {message: "this is a test message"}}
                                                   ^
spec/requests/contact_form_spec.rb:18:62: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
			post contact_forms_path, params: {contact_form: {message: "this is a test message"}}
                                                             ^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/contact_form_spec.rb:18:86: C: [Correctable] Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
			post contact_forms_path, params: {contact_form: {message: "this is a test message"}}
                                                                                     ^
spec/requests/contact_form_spec.rb:18:87: C: [Correctable] Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
			post contact_forms_path, params: {contact_form: {message: "this is a test message"}}
                                                                                      ^
spec/requests/contact_form_spec.rb:20:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
			expect(ContactForm.all.size).to eq(1)
^^^
spec/requests/contact_form_spec.rb:21:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		end
^^
spec/requests/contact_form_spec.rb:23:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		it "gives feedback upon saving a valid submitted form" do
^^
spec/requests/contact_form_spec.rb:23:6: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
		it "gives feedback upon saving a valid submitted form" do
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/contact_form_spec.rb:24:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
			HomePage.create!(id: 1, heading: "test page", summary: "test page")
^^^
spec/requests/contact_form_spec.rb:24:3: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
			HomePage.create!(id: 1, heading: "test page", summary: "test page")
  ^
spec/requests/contact_form_spec.rb:24:37: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
			HomePage.create!(id: 1, heading: "test page", summary: "test page")
                                    ^^^^^^^^^^^
spec/requests/contact_form_spec.rb:24:59: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
			HomePage.create!(id: 1, heading: "test page", summary: "test page")
                                                          ^^^^^^^^^^^
spec/requests/contact_form_spec.rb:25:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
			post "/contact_forms", params: {contact_form: {message: "test"}}
^^^
spec/requests/contact_form_spec.rb:25:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
			post "/contact_forms", params: {contact_form: {message: "test"}}
        ^^^^^^^^^^^^^^^^
spec/requests/contact_form_spec.rb:25:35: C: [Correctable] Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
			post "/contact_forms", params: {contact_form: {message: "test"}}
                                  ^
spec/requests/contact_form_spec.rb:25:50: C: [Correctable] Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
			post "/contact_forms", params: {contact_form: {message: "test"}}
                                                 ^
spec/requests/contact_form_spec.rb:25:60: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
			post "/contact_forms", params: {contact_form: {message: "test"}}
                                                           ^^^^^^
spec/requests/contact_form_spec.rb:25:66: C: [Correctable] Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
			post "/contact_forms", params: {contact_form: {message: "test"}}
                                                                 ^
spec/requests/contact_form_spec.rb:25:67: C: [Correctable] Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
			post "/contact_forms", params: {contact_form: {message: "test"}}
                                                                  ^
spec/requests/contact_form_spec.rb:26:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
			follow_redirect!
^^^
spec/requests/contact_form_spec.rb:27:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
spec/requests/contact_form_spec.rb:27:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
spec/requests/contact_form_spec.rb:28:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
			expect(response.body).to include("Message has been sent.")
^^^
spec/requests/contact_form_spec.rb:28:37: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
			expect(response.body).to include("Message has been sent.")
                                    ^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/contact_form_spec.rb:29:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		end
^^
spec/requests/contact_form_spec.rb:31:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		it "returns users to the home page after a valid submission" do
^^
spec/requests/contact_form_spec.rb:31:6: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
		it "returns users to the home page after a valid submission" do
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/contact_form_spec.rb:32:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
			HomePage.create!(id: 1, heading: "test page", summary: "test page")
^^^
spec/requests/contact_form_spec.rb:32:3: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
			HomePage.create!(id: 1, heading: "test page", summary: "test page")
  ^
spec/requests/contact_form_spec.rb:32:37: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
			HomePage.create!(id: 1, heading: "test page", summary: "test page")
                                    ^^^^^^^^^^^
spec/requests/contact_form_spec.rb:32:59: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
			HomePage.create!(id: 1, heading: "test page", summary: "test page")
                                                          ^^^^^^^^^^^
spec/requests/contact_form_spec.rb:33:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
			post contact_forms_path, params: {contact_form: {message: "test"}}
^^^
spec/requests/contact_form_spec.rb:33:37: C: [Correctable] Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
			post contact_forms_path, params: {contact_form: {message: "test"}}
                                    ^
spec/requests/contact_form_spec.rb:33:52: C: [Correctable] Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
			post contact_forms_path, params: {contact_form: {message: "test"}}
                                                   ^
spec/requests/contact_form_spec.rb:33:62: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
			post contact_forms_path, params: {contact_form: {message: "test"}}
                                                             ^^^^^^
spec/requests/contact_form_spec.rb:33:68: C: [Correctable] Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
			post contact_forms_path, params: {contact_form: {message: "test"}}
                                                                   ^
spec/requests/contact_form_spec.rb:33:69: C: [Correctable] Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
			post contact_forms_path, params: {contact_form: {message: "test"}}
                                                                    ^
spec/requests/contact_form_spec.rb:35:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
			expect(response).to redirect_to(root_path)
^^^
spec/requests/contact_form_spec.rb:36:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		end
^^
spec/requests/contact_form_spec.rb:38:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		it "returns http unprocessable entity in response to an invalid message" do
^^
spec/requests/contact_form_spec.rb:38:6: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
		it "returns http unprocessable entity in response to an invalid message" do
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/contact_form_spec.rb:39:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
			post contact_forms_path, params: {contact_form: {message: ""}}
^^^
spec/requests/contact_form_spec.rb:39:3: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
			post contact_forms_path, params: {contact_form: {message: ""}}
  ^
spec/requests/contact_form_spec.rb:39:37: C: [Correctable] Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
			post contact_forms_path, params: {contact_form: {message: ""}}
                                    ^
spec/requests/contact_form_spec.rb:39:52: C: [Correctable] Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
			post contact_forms_path, params: {contact_form: {message: ""}}
                                                   ^
spec/requests/contact_form_spec.rb:39:62: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
			post contact_forms_path, params: {contact_form: {message: ""}}
                                                             ^^
spec/requests/contact_form_spec.rb:39:64: C: [Correctable] Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
			post contact_forms_path, params: {contact_form: {message: ""}}
                                                               ^
spec/requests/contact_form_spec.rb:39:65: C: [Correctable] Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
			post contact_forms_path, params: {contact_form: {message: ""}}
                                                                ^
spec/requests/contact_form_spec.rb:41:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
			expect(response).to have_http_status(:unprocessable_entity)
^^^
spec/requests/contact_form_spec.rb:42:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		end
^^
spec/requests/contact_form_spec.rb:44:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		it "does not modify the database in response to an unprocessable entity" do
^^
spec/requests/contact_form_spec.rb:44:6: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
		it "does not modify the database in response to an unprocessable entity" do
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/contact_form_spec.rb:45:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
			initial_records = ContactForm.all
^^^
spec/requests/contact_form_spec.rb:45:3: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
			initial_records = ContactForm.all
  ^
spec/requests/contact_form_spec.rb:46:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
			post contact_forms_path, params: {contact_form: {message: ""}}
^^^
spec/requests/contact_form_spec.rb:46:37: C: [Correctable] Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
			post contact_forms_path, params: {contact_form: {message: ""}}
                                    ^
spec/requests/contact_form_spec.rb:46:52: C: [Correctable] Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
			post contact_forms_path, params: {contact_form: {message: ""}}
                                                   ^
spec/requests/contact_form_spec.rb:46:62: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
			post contact_forms_path, params: {contact_form: {message: ""}}
                                                             ^^
spec/requests/contact_form_spec.rb:46:64: C: [Correctable] Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
			post contact_forms_path, params: {contact_form: {message: ""}}
                                                               ^
spec/requests/contact_form_spec.rb:46:65: C: [Correctable] Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
			post contact_forms_path, params: {contact_form: {message: ""}}
                                                                ^
spec/requests/contact_form_spec.rb:48:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
			expect(ContactForm.all).to eq(initial_records)
^^^
spec/requests/contact_form_spec.rb:49:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		end
^^
spec/requests/contact_form_spec.rb:51:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		it "gives feedback about problems with invalid submitted messages" do
^^
spec/requests/contact_form_spec.rb:51:6: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
		it "gives feedback about problems with invalid submitted messages" do
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/contact_form_spec.rb:52:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
			post contact_forms_path, params: {contact_form: {message: ""}}
^^^
spec/requests/contact_form_spec.rb:52:3: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
			post contact_forms_path, params: {contact_form: {message: ""}}
  ^
spec/requests/contact_form_spec.rb:52:37: C: [Correctable] Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
			post contact_forms_path, params: {contact_form: {message: ""}}
                                    ^
spec/requests/contact_form_spec.rb:52:52: C: [Correctable] Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
			post contact_forms_path, params: {contact_form: {message: ""}}
                                                   ^
spec/requests/contact_form_spec.rb:52:62: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
			post contact_forms_path, params: {contact_form: {message: ""}}
                                                             ^^
spec/requests/contact_form_spec.rb:52:64: C: [Correctable] Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
			post contact_forms_path, params: {contact_form: {message: ""}}
                                                               ^
spec/requests/contact_form_spec.rb:52:65: C: [Correctable] Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
			post contact_forms_path, params: {contact_form: {message: ""}}
                                                                ^
spec/requests/contact_form_spec.rb:54:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
			expect(response.body).to include("prevented this message from being sent")
^^^
spec/requests/contact_form_spec.rb:54:37: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
			expect(response.body).to include("prevented this message from being sent")
                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/contact_form_spec.rb:55:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		end
^^
spec/requests/contact_form_spec.rb:56:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	end
^
spec/requests/contact_form_spec.rb:58:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	describe "GET /index" do
^
spec/requests/contact_form_spec.rb:58:11: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
	describe "GET /index" do
          ^^^^^^^^^^^^
spec/requests/contact_form_spec.rb:59:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		it "returns http success" do
^^
spec/requests/contact_form_spec.rb:59:2: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
		it "returns http success" do
 ^
spec/requests/contact_form_spec.rb:59:6: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
		it "returns http success" do
     ^^^^^^^^^^^^^^^^^^^^^^
spec/requests/contact_form_spec.rb:60:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
			get "/contact_forms/index"
^^^
spec/requests/contact_form_spec.rb:60:3: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
			get "/contact_forms/index"
  ^
spec/requests/contact_form_spec.rb:60:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
			get "/contact_forms/index"
       ^^^^^^^^^^^^^^^^^^^^^^
spec/requests/contact_form_spec.rb:61:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
			expect(response).to have_http_status(:success)
^^^
spec/requests/contact_form_spec.rb:62:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		end
^^
spec/requests/contact_form_spec.rb:63:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	end
^
spec/requests/contact_form_spec.rb:65:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	describe "GET /show" do
^
spec/requests/contact_form_spec.rb:65:11: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
	describe "GET /show" do
          ^^^^^^^^^^^
spec/requests/contact_form_spec.rb:66:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		it "returns http success" do
^^
spec/requests/contact_form_spec.rb:66:2: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
		it "returns http success" do
 ^
spec/requests/contact_form_spec.rb:66:6: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
		it "returns http success" do
     ^^^^^^^^^^^^^^^^^^^^^^
spec/requests/contact_form_spec.rb:67:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
			get "/contact_forms/show"
^^^
spec/requests/contact_form_spec.rb:67:3: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
			get "/contact_forms/show"
  ^
spec/requests/contact_form_spec.rb:67:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
			get "/contact_forms/show"
       ^^^^^^^^^^^^^^^^^^^^^
spec/requests/contact_form_spec.rb:68:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
			expect(response).to have_http_status(:success)
^^^
spec/requests/contact_form_spec.rb:69:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		end
^^
spec/requests/contact_form_spec.rb:70:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	end
^
spec/requests/contact_form_spec.rb:71:1: C: [Correctable] Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body end.
spec/requests/payment_accounts_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/requests/payment_accounts_spec.rb:3:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "PaymentAccounts", type: :request do
               ^^^^^^^^^^^^^^^^^
spec/requests/payment_accounts_spec.rb:4:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "GET /new" do
           ^^^^^^^^^^
spec/requests/payment_accounts_spec.rb:5:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "returns http success" do
       ^^^^^^^^^^^^^^^^^^^^^^
spec/requests/payment_accounts_spec.rb:6:11: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      get "/payment_accounts/new"
          ^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/payment_accounts_spec.rb:11:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "GET /index" do
           ^^^^^^^^^^^^
spec/requests/payment_accounts_spec.rb:12:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "returns http success" do
       ^^^^^^^^^^^^^^^^^^^^^^
spec/requests/payment_accounts_spec.rb:13:11: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      get "/payment_accounts/index"
          ^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/payment_accounts_spec.rb:18:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "GET /show" do
           ^^^^^^^^^^^
spec/requests/payment_accounts_spec.rb:19:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "returns http success" do
       ^^^^^^^^^^^^^^^^^^^^^^
spec/requests/payment_accounts_spec.rb:20:11: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      get "/payment_accounts/show"
          ^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/payment_accounts_spec.rb:25:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "GET /edit" do
           ^^^^^^^^^^^
spec/requests/payment_accounts_spec.rb:26:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "returns http success" do
       ^^^^^^^^^^^^^^^^^^^^^^
spec/requests/payment_accounts_spec.rb:27:11: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      get "/payment_accounts/edit"
          ^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/payment_accounts_spec.rb:31:1: C: [Correctable] Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body end.
spec/requests/semesters_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/requests/semesters_spec.rb:3:1: C: Metrics/BlockLength: Block has too many lines. [30/25]
RSpec.describe "Semesters", type: :request do ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/semesters_spec.rb:3:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "Semesters", type: :request do
               ^^^^^^^^^^^
spec/requests/semesters_spec.rb:4:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "GET /index" do
           ^^^^^^^^^^^^
spec/requests/semesters_spec.rb:5:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "returns http success" do
       ^^^^^^^^^^^^^^^^^^^^^^
spec/requests/semesters_spec.rb:6:11: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      get "/semesters/index"
          ^^^^^^^^^^^^^^^^^^
spec/requests/semesters_spec.rb:11:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "GET /show" do
           ^^^^^^^^^^^
spec/requests/semesters_spec.rb:12:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "returns http success" do
       ^^^^^^^^^^^^^^^^^^^^^^
spec/requests/semesters_spec.rb:13:11: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      get "/semesters/show"
          ^^^^^^^^^^^^^^^^^
spec/requests/semesters_spec.rb:18:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "GET /new" do
           ^^^^^^^^^^
spec/requests/semesters_spec.rb:19:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "returns http success" do
       ^^^^^^^^^^^^^^^^^^^^^^
spec/requests/semesters_spec.rb:20:11: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      get "/semesters/new"
          ^^^^^^^^^^^^^^^^
spec/requests/semesters_spec.rb:25:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "GET /edit" do
           ^^^^^^^^^^^
spec/requests/semesters_spec.rb:26:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "returns http success" do
       ^^^^^^^^^^^^^^^^^^^^^^
spec/requests/semesters_spec.rb:27:11: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      get "/semesters/edit"
          ^^^^^^^^^^^^^^^^^
spec/requests/semesters_spec.rb:32:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "GET /delete" do
           ^^^^^^^^^^^^^
spec/requests/semesters_spec.rb:33:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "returns http success" do
       ^^^^^^^^^^^^^^^^^^^^^^
spec/requests/semesters_spec.rb:34:11: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      get "/semesters/delete"
          ^^^^^^^^^^^^^^^^^^^
spec/requests/semesters_spec.rb:38:1: C: [Correctable] Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body end.
spec/spec_helper.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
ENV['RAILS_ENV'] ||= 'test'
^
spec/spec_helper.rb:4:7: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
abort("The Rails environment is running in production mode!") if Rails.env.production?
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/spec_helper.rb:10:16: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
SimpleCov.start 
               ^
spec/spec_helper.rb:28:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.
spec/spec_helper.rb:29:1: C: Metrics/BlockLength: Block has too many lines. [32/25]
RSpec.configure do |config| ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/spec_helper.rb:62:1: C: [Correctable] Style/BlockComments: Do not use block comments.
=begin ...
^^^^^^
spec/spec_helper.rb:121:37: C: [Correctable] Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
  OmniAuth.config.add_mock(:google, {:uid => '12345', :email => "johndoe123@gmail.com", :full_name => "John Doe"})
                                    ^
spec/spec_helper.rb:121:38: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
  OmniAuth.config.add_mock(:google, {:uid => '12345', :email => "johndoe123@gmail.com", :full_name => "John Doe"})
                                     ^^^^^^^
spec/spec_helper.rb:121:55: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
  OmniAuth.config.add_mock(:google, {:uid => '12345', :email => "johndoe123@gmail.com", :full_name => "John Doe"})
                                                      ^^^^^^^^^
spec/spec_helper.rb:121:65: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  OmniAuth.config.add_mock(:google, {:uid => '12345', :email => "johndoe123@gmail.com", :full_name => "John Doe"})
                                                                ^^^^^^^^^^^^^^^^^^^^^^
spec/spec_helper.rb:121:89: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
  OmniAuth.config.add_mock(:google, {:uid => '12345', :email => "johndoe123@gmail.com", :full_name => "John Doe"})
                                                                                        ^^^^^^^^^^^^^
spec/spec_helper.rb:121:103: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  OmniAuth.config.add_mock(:google, {:uid => '12345', :email => "johndoe123@gmail.com", :full_name => "John Doe"})
                                                                                                      ^^^^^^^^^^
spec/spec_helper.rb:121:113: C: [Correctable] Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
  OmniAuth.config.add_mock(:google, {:uid => '12345', :email => "johndoe123@gmail.com", :full_name => "John Doe"})
                                                                                                                ^
spec/spec_helper.rb:127:1: C: [Correctable] Layout/TrailingEmptyLines: 1 trailing blank lines detected.
spec/unit/unit_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/unit/unit_spec.rb:5:33: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    @event = Event.create(name: "First Meeting")
                                ^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:6:6: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
  end    
     ^^^^
spec/unit/unit_spec.rb:7:3: C: [Correctable] Layout/CommentIndentation: Incorrect indentation detected (column 2 instead of 4).
  #subject do
  ^^^^^^^^^^^
spec/unit/unit_spec.rb:7:3: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
  #subject do
  ^^^^^^^^^^^
spec/unit/unit_spec.rb:8:5: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
    #described_class.new(name: 'First Meeting')
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:9:5: C: [Correctable] Layout/CommentIndentation: Incorrect indentation detected (column 4 instead of 2).
    #subject.update(name: 'Next Meeting')
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:9:5: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
    #subject.update(name: 'Next Meeting')
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:10:3: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
  #end
  ^^^^
spec/unit/unit_spec.rb:11:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
spec/unit/unit_spec.rb:22:19: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    @event.update(:name => "Second Meeting")
                  ^^^^^^^^
spec/unit/unit_spec.rb:22:28: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    @event.update(:name => "Second Meeting")
                           ^^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:23:31: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    expect(Event.find_by_name("Second Meeting")).to eq(@event)
                              ^^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:25:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
spec/unit/unit_spec.rb:31:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
spec/unit/unit_spec.rb:36:36: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    @user = User.create(full_name: "John Doe", email: "johndoe@gmail.com")
                                   ^^^^^^^^^^
spec/unit/unit_spec.rb:36:55: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    @user = User.create(full_name: "John Doe", email: "johndoe@gmail.com")
                                                      ^^^^^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:38:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
spec/unit/unit_spec.rb:54:18: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    @user.update(:full_name => "John Casey")
                 ^^^^^^^^^^^^^
spec/unit/unit_spec.rb:54:32: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    @user.update(:full_name => "John Casey")
                               ^^^^^^^^^^^^
spec/unit/unit_spec.rb:55:18: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    @user.update(:email => "johncasey@gmail.com")
                 ^^^^^^^^^
spec/unit/unit_spec.rb:55:28: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    @user.update(:email => "johncasey@gmail.com")
                           ^^^^^^^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:56:35: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    expect(User.find_by_full_name("John Casey")).to eq(@user)
                                  ^^^^^^^^^^^^
spec/unit/unit_spec.rb:58:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
spec/unit/unit_spec.rb:64:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
spec/unit/unit_spec.rb:65:4: C: [Correctable] Layout/TrailingEmptyLines: Final newline missing.
end
   
spec/views/contact_forms/index.html.erb_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/views/contact_forms/index.html.erb_spec.rb:3:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "contact_form/index.html.erb", type: :view do
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/contact_forms/new.html.erb_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/views/contact_forms/new.html.erb_spec.rb:3:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "contact_form/new.html.erb", type: :view do
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/contact_forms/show.html.erb_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/views/contact_forms/show.html.erb_spec.rb:3:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "contact_form/show.html.erb", type: :view do
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/payment_accounts/edit.html.erb_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/views/payment_accounts/edit.html.erb_spec.rb:3:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "payment_accounts/edit.html.erb", type: :view do
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/payment_accounts/index.html.erb_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/views/payment_accounts/index.html.erb_spec.rb:3:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "payment_accounts/index.html.erb", type: :view do
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/payment_accounts/new.html.erb_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/views/payment_accounts/new.html.erb_spec.rb:3:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "payment_accounts/new.html.erb", type: :view do
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/payment_accounts/show.html.erb_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/views/payment_accounts/show.html.erb_spec.rb:3:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "payment_accounts/show.html.erb", type: :view do
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/semesters/delete.html.erb_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/views/semesters/delete.html.erb_spec.rb:3:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "semesters/delete.html.erb", type: :view do
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/semesters/edit.html.erb_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/views/semesters/edit.html.erb_spec.rb:3:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "semesters/edit.html.erb", type: :view do
               ^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/semesters/index.html.erb_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/views/semesters/index.html.erb_spec.rb:3:1: C: Metrics/BlockLength: Block has too many lines. [31/25]
RSpec.describe "semesters/index.html.erb", type: :view do ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/semesters/index.html.erb_spec.rb:3:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "semesters/index.html.erb", type: :view do
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/semesters/index.html.erb_spec.rb:4:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	before(:each) do
^
spec/views/semesters/index.html.erb_spec.rb:4:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
	before(:each) do
^
spec/views/semesters/index.html.erb_spec.rb:5:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		assign(:semesters, [
^^
spec/views/semesters/index.html.erb_spec.rb:5:2: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
		assign(:semesters, [
 ^
spec/views/semesters/index.html.erb_spec.rb:6:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
			Semester.create!(
^^^
spec/views/semesters/index.html.erb_spec.rb:6:4: C: [Correctable] Layout/FirstArrayElementIndentation: Use 2 spaces for indentation in an array, relative to the first position after the preceding left parenthesis.
			Semester.create!( ...
   ^^^^^^^^^^^^^^^^^
spec/views/semesters/index.html.erb_spec.rb:7:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
				name: "Spring 2020",
^^^^
spec/views/semesters/index.html.erb_spec.rb:7:5: C: [Correctable] Layout/FirstArgumentIndentation: Indent the first argument one step more than the start of the previous line.
				name: "Spring 2020", ...
    ^^^^^^^^^^^^^^^^^^^^
spec/views/semesters/index.html.erb_spec.rb:7:11: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
				name: "Spring 2020",
          ^^^^^^^^^^^^^
spec/views/semesters/index.html.erb_spec.rb:8:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
				start: Date.new(2022,1,16),
^^^^
spec/views/semesters/index.html.erb_spec.rb:8:25: C: [Correctable] Layout/SpaceAfterComma: Space missing after comma.
				start: Date.new(2022,1,16),
                        ^
spec/views/semesters/index.html.erb_spec.rb:8:27: C: [Correctable] Layout/SpaceAfterComma: Space missing after comma.
				start: Date.new(2022,1,16),
                          ^
spec/views/semesters/index.html.erb_spec.rb:9:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
				end: Date.new(2022,5,7)
^^^^
spec/views/semesters/index.html.erb_spec.rb:9:23: C: [Correctable] Layout/SpaceAfterComma: Space missing after comma.
				end: Date.new(2022,5,7)
                      ^
spec/views/semesters/index.html.erb_spec.rb:9:25: C: [Correctable] Layout/SpaceAfterComma: Space missing after comma.
				end: Date.new(2022,5,7)
                        ^
spec/views/semesters/index.html.erb_spec.rb:10:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
			),
^^^
spec/views/semesters/index.html.erb_spec.rb:10:4: C: [Correctable] Layout/ClosingParenthesisIndentation: Indent ) to column 2 (not 3)
			),
   ^
spec/views/semesters/index.html.erb_spec.rb:11:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
			Semester.create!(
^^^
spec/views/semesters/index.html.erb_spec.rb:12:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
				name: "Spring 2020",
^^^^
spec/views/semesters/index.html.erb_spec.rb:12:5: C: [Correctable] Layout/FirstArgumentIndentation: Indent the first argument one step more than the start of the previous line.
				name: "Spring 2020", ...
    ^^^^^^^^^^^^^^^^^^^^
spec/views/semesters/index.html.erb_spec.rb:12:11: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
				name: "Spring 2020",
          ^^^^^^^^^^^^^
spec/views/semesters/index.html.erb_spec.rb:13:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
				start: Date.new(2022,1,16),
^^^^
spec/views/semesters/index.html.erb_spec.rb:13:25: C: [Correctable] Layout/SpaceAfterComma: Space missing after comma.
				start: Date.new(2022,1,16),
                        ^
spec/views/semesters/index.html.erb_spec.rb:13:27: C: [Correctable] Layout/SpaceAfterComma: Space missing after comma.
				start: Date.new(2022,1,16),
                          ^
spec/views/semesters/index.html.erb_spec.rb:14:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
				end: Date.new(2022,5,7)
^^^^
spec/views/semesters/index.html.erb_spec.rb:14:23: C: [Correctable] Layout/SpaceAfterComma: Space missing after comma.
				end: Date.new(2022,5,7)
                      ^
spec/views/semesters/index.html.erb_spec.rb:14:25: C: [Correctable] Layout/SpaceAfterComma: Space missing after comma.
				end: Date.new(2022,5,7)
                        ^
spec/views/semesters/index.html.erb_spec.rb:15:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
			)
^^^
spec/views/semesters/index.html.erb_spec.rb:15:4: C: [Correctable] Layout/ClosingParenthesisIndentation: Indent ) to column 2 (not 3)
			)
   ^
spec/views/semesters/index.html.erb_spec.rb:16:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		])
^^
spec/views/semesters/index.html.erb_spec.rb:16:3: C: [Correctable] Layout/FirstArrayElementIndentation: Indent the right bracket the same as the first position after the preceding left parenthesis.
		])
  ^
spec/views/semesters/index.html.erb_spec.rb:17:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		assign(:users, [
^^
spec/views/semesters/index.html.erb_spec.rb:18:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
			User.create!(
^^^
spec/views/semesters/index.html.erb_spec.rb:18:4: C: [Correctable] Layout/FirstArrayElementIndentation: Use 2 spaces for indentation in an array, relative to the first position after the preceding left parenthesis.
			User.create!( ...
   ^^^^^^^^^^^^^
spec/views/semesters/index.html.erb_spec.rb:19:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
				full_name: "Jimbo Tester",
^^^^
spec/views/semesters/index.html.erb_spec.rb:19:5: C: [Correctable] Layout/FirstArgumentIndentation: Indent the first argument one step more than the start of the previous line.
				full_name: "Jimbo Tester", ...
    ^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/semesters/index.html.erb_spec.rb:19:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
				full_name: "Jimbo Tester",
               ^^^^^^^^^^^^^^
spec/views/semesters/index.html.erb_spec.rb:20:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
				email: "cringe@gmail.com",
^^^^
spec/views/semesters/index.html.erb_spec.rb:20:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
				email: "cringe@gmail.com",
           ^^^^^^^^^^^^^^^^^^
spec/views/semesters/index.html.erb_spec.rb:21:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
				id: 1,
^^^^
spec/views/semesters/index.html.erb_spec.rb:22:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
				role: "admin"
^^^^
spec/views/semesters/index.html.erb_spec.rb:22:11: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
				role: "admin"
          ^^^^^^^
spec/views/semesters/index.html.erb_spec.rb:23:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
			)
^^^
spec/views/semesters/index.html.erb_spec.rb:23:4: C: [Correctable] Layout/ClosingParenthesisIndentation: Indent ) to column 2 (not 3)
			)
   ^
spec/views/semesters/index.html.erb_spec.rb:24:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		])
^^
spec/views/semesters/index.html.erb_spec.rb:24:3: C: [Correctable] Layout/FirstArrayElementIndentation: Indent the right bracket the same as the first position after the preceding left parenthesis.
		])
  ^
spec/views/semesters/index.html.erb_spec.rb:25:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		assign(:current_user, User.first)
^^
spec/views/semesters/index.html.erb_spec.rb:26:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	end
^
spec/views/semesters/index.html.erb_spec.rb:27:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
spec/views/semesters/index.html.erb_spec.rb:27:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
spec/views/semesters/index.html.erb_spec.rb:28:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	it "renders a list of Semesters" do
^
spec/views/semesters/index.html.erb_spec.rb:28:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
	it "renders a list of Semesters" do
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/semesters/index.html.erb_spec.rb:29:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		render
^^
spec/views/semesters/index.html.erb_spec.rb:29:2: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
		render
 ^
spec/views/semesters/index.html.erb_spec.rb:30:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		assert_select "tr", count: Semester.all.size+1 #each row plus the header
^^
spec/views/semesters/index.html.erb_spec.rb:30:17: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
		assert_select "tr", count: Semester.all.size+1 #each row plus the header
                ^^^^
spec/views/semesters/index.html.erb_spec.rb:30:47: C: [Correctable] Layout/SpaceAroundOperators: Surrounding space missing for operator +.
		assert_select "tr", count: Semester.all.size+1 #each row plus the header
                                              ^
spec/views/semesters/index.html.erb_spec.rb:30:50: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
		assert_select "tr", count: Semester.all.size+1 #each row plus the header
                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/semesters/index.html.erb_spec.rb:31:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	end
^
spec/views/semesters/index.html.erb_spec.rb:32:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	it "has a link back to the dashboard" do
^
spec/views/semesters/index.html.erb_spec.rb:32:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
	it "has a link back to the dashboard" do
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/semesters/index.html.erb_spec.rb:33:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		render
^^
spec/views/semesters/index.html.erb_spec.rb:33:2: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
		render
 ^
spec/views/semesters/index.html.erb_spec.rb:34:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		expect(rendered).to include("<a class=\"mt-5\" href=\"/users/"+@user.id.to_s+"\">")
^^
spec/views/semesters/index.html.erb_spec.rb:34:31: C: [Correctable] Style/StringConcatenation: Prefer string interpolation to string concatenation.
		expect(rendered).to include("<a class=\"mt-5\" href=\"/users/"+@user.id.to_s+"\">")
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/semesters/index.html.erb_spec.rb:34:31: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
		expect(rendered).to include("<a class=\"mt-5\" href=\"/users/"+@user.id.to_s+"\">")
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/semesters/index.html.erb_spec.rb:34:65: C: [Correctable] Layout/SpaceAroundOperators: Surrounding space missing for operator +.
		expect(rendered).to include("<a class=\"mt-5\" href=\"/users/"+@user.id.to_s+"\">")
                                                                ^
spec/views/semesters/index.html.erb_spec.rb:34:79: C: [Correctable] Layout/SpaceAroundOperators: Surrounding space missing for operator +.
		expect(rendered).to include("<a class=\"mt-5\" href=\"/users/"+@user.id.to_s+"\">")
                                                                              ^
spec/views/semesters/index.html.erb_spec.rb:34:80: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
		expect(rendered).to include("<a class=\"mt-5\" href=\"/users/"+@user.id.to_s+"\">")
                                                                               ^^^^^
spec/views/semesters/index.html.erb_spec.rb:35:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	end
^
spec/views/semesters/new.html.erb_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/views/semesters/new.html.erb_spec.rb:3:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "semesters/new.html.erb", type: :view do
               ^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/semesters/show.html.erb_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/views/semesters/show.html.erb_spec.rb:3:1: C: Metrics/BlockLength: Block has too many lines. [32/25]
RSpec.describe "semesters/show.html.erb", type: :view do ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/semesters/show.html.erb_spec.rb:3:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "semesters/show.html.erb", type: :view do
               ^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/semesters/show.html.erb_spec.rb:4:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	before(:each) do
^
spec/views/semesters/show.html.erb_spec.rb:4:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
	before(:each) do
^
spec/views/semesters/show.html.erb_spec.rb:5:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		assign(:semesters, [
^^
spec/views/semesters/show.html.erb_spec.rb:5:2: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
		assign(:semesters, [
 ^
spec/views/semesters/show.html.erb_spec.rb:6:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
			Semester.create!(
^^^
spec/views/semesters/show.html.erb_spec.rb:6:4: C: [Correctable] Layout/FirstArrayElementIndentation: Use 2 spaces for indentation in an array, relative to the first position after the preceding left parenthesis.
			Semester.create!( ...
   ^^^^^^^^^^^^^^^^^
spec/views/semesters/show.html.erb_spec.rb:7:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
				name: "Spring 2022",
^^^^
spec/views/semesters/show.html.erb_spec.rb:7:5: C: [Correctable] Layout/FirstArgumentIndentation: Indent the first argument one step more than the start of the previous line.
				name: "Spring 2022", ...
    ^^^^^^^^^^^^^^^^^^^^
spec/views/semesters/show.html.erb_spec.rb:7:11: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
				name: "Spring 2022",
          ^^^^^^^^^^^^^
spec/views/semesters/show.html.erb_spec.rb:8:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
				start: Date.new(2022,1,16),
^^^^
spec/views/semesters/show.html.erb_spec.rb:8:25: C: [Correctable] Layout/SpaceAfterComma: Space missing after comma.
				start: Date.new(2022,1,16),
                        ^
spec/views/semesters/show.html.erb_spec.rb:8:27: C: [Correctable] Layout/SpaceAfterComma: Space missing after comma.
				start: Date.new(2022,1,16),
                          ^
spec/views/semesters/show.html.erb_spec.rb:9:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
				end: Date.new(2022,5,7),
^^^^
spec/views/semesters/show.html.erb_spec.rb:9:23: C: [Correctable] Layout/SpaceAfterComma: Space missing after comma.
				end: Date.new(2022,5,7),
                      ^
spec/views/semesters/show.html.erb_spec.rb:9:25: C: [Correctable] Layout/SpaceAfterComma: Space missing after comma.
				end: Date.new(2022,5,7),
                        ^
spec/views/semesters/show.html.erb_spec.rb:10:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
				duescost: 50.0
^^^^
spec/views/semesters/show.html.erb_spec.rb:11:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
			)
^^^
spec/views/semesters/show.html.erb_spec.rb:11:4: C: [Correctable] Layout/ClosingParenthesisIndentation: Indent ) to column 2 (not 3)
			)
   ^
spec/views/semesters/show.html.erb_spec.rb:12:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		])
^^
spec/views/semesters/show.html.erb_spec.rb:12:3: C: [Correctable] Layout/FirstArrayElementIndentation: Indent the right bracket the same as the first position after the preceding left parenthesis.
		])
  ^
spec/views/semesters/show.html.erb_spec.rb:13:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		@semester = Semester.first
^^
spec/views/semesters/show.html.erb_spec.rb:14:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	end
^
spec/views/semesters/show.html.erb_spec.rb:16:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	it "displays the correct name" do
^
spec/views/semesters/show.html.erb_spec.rb:16:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
	it "displays the correct name" do
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/semesters/show.html.erb_spec.rb:17:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		render
^^
spec/views/semesters/show.html.erb_spec.rb:17:2: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
		render
 ^
spec/views/semesters/show.html.erb_spec.rb:18:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		#puts @semester.name
^^
spec/views/semesters/show.html.erb_spec.rb:18:3: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
		#puts @semester.name
  ^^^^^^^^^^^^^^^^^^^^
spec/views/semesters/show.html.erb_spec.rb:19:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		expect(rendered).to include("Name: "+@semester.name)
^^
spec/views/semesters/show.html.erb_spec.rb:19:31: C: [Correctable] Style/StringConcatenation: Prefer string interpolation to string concatenation.
		expect(rendered).to include("Name: "+@semester.name)
                              ^^^^^^^^^^^^^^^^^^^^^^^
spec/views/semesters/show.html.erb_spec.rb:19:31: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
		expect(rendered).to include("Name: "+@semester.name)
                              ^^^^^^^^
spec/views/semesters/show.html.erb_spec.rb:19:39: C: [Correctable] Layout/SpaceAroundOperators: Surrounding space missing for operator +.
		expect(rendered).to include("Name: "+@semester.name)
                                      ^
spec/views/semesters/show.html.erb_spec.rb:20:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	end
^
spec/views/semesters/show.html.erb_spec.rb:22:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	it "displays the correct start date" do
^
spec/views/semesters/show.html.erb_spec.rb:22:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
	it "displays the correct start date" do
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/semesters/show.html.erb_spec.rb:23:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		render
^^
spec/views/semesters/show.html.erb_spec.rb:23:2: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
		render
 ^
spec/views/semesters/show.html.erb_spec.rb:24:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		expect(rendered).to include(@semester.start.to_s)
^^
spec/views/semesters/show.html.erb_spec.rb:25:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	end
^
spec/views/semesters/show.html.erb_spec.rb:26:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	it "displays the correct end date" do
^
spec/views/semesters/show.html.erb_spec.rb:26:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
	it "displays the correct end date" do
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/semesters/show.html.erb_spec.rb:27:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		render
^^
spec/views/semesters/show.html.erb_spec.rb:27:2: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
		render
 ^
spec/views/semesters/show.html.erb_spec.rb:28:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		expect(rendered).to include(@semester.end.to_s)
^^
spec/views/semesters/show.html.erb_spec.rb:29:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	end
^
spec/views/semesters/show.html.erb_spec.rb:30:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	it "displays the correct dues cost" do
^
spec/views/semesters/show.html.erb_spec.rb:30:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
	it "displays the correct dues cost" do
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/semesters/show.html.erb_spec.rb:31:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		render
^^
spec/views/semesters/show.html.erb_spec.rb:31:2: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
		render
 ^
spec/views/semesters/show.html.erb_spec.rb:32:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		expect(rendered).to include(@semester.duescost.to_s)
^^
spec/views/semesters/show.html.erb_spec.rb:33:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	end
^
spec/views/semesters/show.html.erb_spec.rb:34:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	xit "has a link to the edit form"
^
spec/views/semesters/show.html.erb_spec.rb:34:6: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
	xit "has a link to the edit form"
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/semesters/show.html.erb_spec.rb:35:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	it "has a link back to the index" do
^
spec/views/semesters/show.html.erb_spec.rb:35:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
	it "has a link back to the index" do
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/semesters/show.html.erb_spec.rb:36:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		render
^^
spec/views/semesters/show.html.erb_spec.rb:36:2: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
		render
 ^
spec/views/semesters/show.html.erb_spec.rb:37:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		expect(rendered).to include("<a class=\"mt-5\" href=\"/semesters\">")
^^
spec/views/semesters/show.html.erb_spec.rb:37:31: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
		expect(rendered).to include("<a class=\"mt-5\" href=\"/semesters\">")
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/semesters/show.html.erb_spec.rb:38:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	end
^
test/application_system_test_case.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require "test_helper"
^
test/application_system_test_case.rb:1:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "test_helper"
        ^^^^^^^^^^^^^
test/channels/application_cable/connection_test.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require "test_helper"
^
test/channels/application_cable/connection_test.rb:1:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "test_helper"
        ^^^^^^^^^^^^^
test/channels/application_cable/connection_test.rb:3:7: C: [Correctable] Style/ClassAndModuleChildren: Use nested module/class definitions instead of compact style.
class ApplicationCable::ConnectionTest < ActionCable::Connection::TestCase
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
test/controllers/users_controller_test.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require "test_helper"
^
test/controllers/users_controller_test.rb:1:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "test_helper"
        ^^^^^^^^^^^^^
test/controllers/users_controller_test.rb:4:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  test "should get index" do
       ^^^^^^^^^^^^^^^^^^
test/models/about_u_test.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require "test_helper"
^
test/models/about_u_test.rb:1:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "test_helper"
        ^^^^^^^^^^^^^
test/models/contact_form_test.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require "test_helper"
^
test/models/contact_form_test.rb:1:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "test_helper"
        ^^^^^^^^^^^^^
test/models/event_test.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require "test_helper"
^
test/models/event_test.rb:1:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "test_helper"
        ^^^^^^^^^^^^^
test/models/home_test.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require "test_helper"
^
test/models/home_test.rb:1:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "test_helper"
        ^^^^^^^^^^^^^
test/models/user_test.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require "test_helper"
^
test/models/user_test.rb:1:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "test_helper"
        ^^^^^^^^^^^^^
test/test_helper.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
ENV['RAILS_ENV'] ||= 'test'
^
test/test_helper.rb:2:18: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require_relative "../config/environment"
                 ^^^^^^^^^^^^^^^^^^^^^^^
test/test_helper.rb:3:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "rails/test_help"
        ^^^^^^^^^^^^^^^^^
test/test_helper.rb:5:7: C: [Correctable] Style/ClassAndModuleChildren: Use nested module/class definitions instead of compact style.
class ActiveSupport::TestCase
      ^^^^^^^^^^^^^^^^^^^^^^^
test/test_helper.rb:11:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.

132 files inspected, 1940 offenses detected, 1824 offenses auto-correctable
